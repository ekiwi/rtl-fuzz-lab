---
################################################################################
# TEST VARIABLES
################################################################################
# NUM_CRYPTS=2
# DATA_BLOCK_SIZE=4
# DATA_IN_LINE_START_1=-28
# DATA_OUT_LINE_START_1=-8
# DATA_IN_LINE_START_2=-23
# DATA_OUT_LINE_START_2=-4
################################################################################
# Wait a 8 clk cycles for AES to go into IDLE state
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}

# Intilize shadowed CTRL register
- {opcode: write, addr: 0x10016074, data: 0x82}
- {opcode: write, addr: 0x10016074, data: 0x82}

# Write to key registers
- {opcode: write, addr: 0x10016004, data: 0xDEADBEEF}
- {opcode: write, addr: 0x10016008, data: 0xDEADBEEF}
- {opcode: write, addr: 0x1001600C, data: 0xDEADBEEF}
- {opcode: write, addr: 0x10016010, data: 0xDEADBEEF}
- {opcode: write, addr: 0x10016014, data: 0x00000000}
- {opcode: write, addr: 0x10016018, data: 0x00000000}
- {opcode: write, addr: 0x1001601C, data: 0x00000000}
- {opcode: write, addr: 0x10016020, data: 0x00000000}
- {opcode: write, addr: 0x10016024, data: 0x00000000}
- {opcode: write, addr: 0x10016028, data: 0x00000000}
- {opcode: write, addr: 0x1001602C, data: 0x00000000}
- {opcode: write, addr: 0x10016030, data: 0x00000000}
- {opcode: write, addr: 0x10016034, data: 0x00000000}
- {opcode: write, addr: 0x10016038, data: 0x00000000}
- {opcode: write, addr: 0x1001603C, data: 0x00000000}
- {opcode: write, addr: 0x10016040, data: 0x00000000}

# Write to input data registers
- {opcode: write, addr: 0x10016054, data: 0xCAFECAFE}
- {opcode: write, addr: 0x10016058, data: 0x11111111}
- {opcode: write, addr: 0x1001605C, data: 0xCAFECAFE}
- {opcode: write, addr: 0x10016060, data: 0x22222222}

# Wait for 1 clk cycle before loading new data
- {opcode: wait, addr: 0, data: 0}

# Write to input data registers
- {opcode: write, addr: 0x10016054, data: 0x11111111}
- {opcode: write, addr: 0x10016058, data: 0x22222222}
- {opcode: write, addr: 0x1001605C, data: 0x33333333}
- {opcode: write, addr: 0x10016060, data: 0x44444444}

# Wait for 11 clk cycles (when ouput data should be ready for 128-bit mode).
# This is slightly too many clk cycles, which is good because it will cause
# the stall status signal to be risen.
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}
- {opcode: wait, addr: 0, data: 0}

# Read from output data registers
- {opcode: read, addr: 0x10016064, data: 0x0}
- {opcode: read, addr: 0x10016068, data: 0x0}
- {opcode: read, addr: 0x1001606C, data: 0x0}
- {opcode: read, addr: 0x10016070, data: 0x0}

# Read from output data registers
- {opcode: read, addr: 0x10016064, data: 0x0}
- {opcode: read, addr: 0x10016068, data: 0x0}
- {opcode: read, addr: 0x1001606C, data: 0x0}
- {opcode: read, addr: 0x10016070, data: 0x0}
...
