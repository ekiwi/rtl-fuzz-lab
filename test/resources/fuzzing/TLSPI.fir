circuit TLSPI :
  module TLSPI : 
    input clock : Clock
    input reset : UInt<1>
    output auto : {int_out : UInt<1>[1], flip r_in : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<7>, address : UInt<29>, mask : UInt<4>, data : UInt<32>}}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<7>, address : UInt<29>, mask : UInt<4>, data : UInt<32>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<7>, address : UInt<29>, data : UInt<32>, error : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<7>, sink : UInt<1>, data : UInt<32>, error : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}}}
    output io : {port : {sck : UInt<1>, dq : {flip i : UInt<1>, o : UInt<1>, oe : UInt<1>}[4], cs : UInt<1>[4]}}
    
    clock is invalid
    reset is invalid
    auto is invalid
    io is invalid
    wire _T_26 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<7>, address : UInt<29>, mask : UInt<4>, data : UInt<32>}}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<7>, address : UInt<29>, mask : UInt<4>, data : UInt<32>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<7>, address : UInt<29>, data : UInt<32>, error : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<7>, sink : UInt<1>, data : UInt<32>, error : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}} @[Nodes.scala 329:76]
    _T_26 is invalid @[Nodes.scala 329:76]
    inst TLMonitor of TLMonitor_66 @[Nodes.scala 25:25]
    TLMonitor.io is invalid
    TLMonitor.clock <= clock
    TLMonitor.reset <= reset
    wire _T_54 : {a : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<7>, address : UInt<29>, mask : UInt<4>, data : UInt<32>}}, b : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<7>, address : UInt<29>, mask : UInt<4>, data : UInt<32>}}, c : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<7>, address : UInt<29>, data : UInt<32>, error : UInt<1>}}, d : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<7>, sink : UInt<1>, data : UInt<32>, error : UInt<1>}}, e : {ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}} @[Bundles.scala 234:19]
    _T_54 is invalid @[Bundles.scala 234:19]
    wire _T_61 : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<7>, address : UInt<29>, mask : UInt<4>, data : UInt<32>}} @[Bundles.scala 214:19]
    _T_61 is invalid @[Bundles.scala 214:19]
    _T_61.ready <= _T_26.a.ready @[Bundles.scala 215:15]
    _T_61.valid <= _T_26.a.valid @[Bundles.scala 216:15]
    _T_61.bits <- _T_26.a.bits @[Bundles.scala 217:15]
    _T_54.a <- _T_61 @[Bundles.scala 235:11]
    wire _T_63 : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<7>, address : UInt<29>, mask : UInt<4>, data : UInt<32>}} @[Bundles.scala 214:19]
    _T_63 is invalid @[Bundles.scala 214:19]
    _T_63.ready <= _T_26.b.ready @[Bundles.scala 215:15]
    _T_63.valid <= _T_26.b.valid @[Bundles.scala 216:15]
    _T_63.bits <- _T_26.b.bits @[Bundles.scala 217:15]
    _T_54.b <- _T_63 @[Bundles.scala 236:11]
    wire _T_65 : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<7>, address : UInt<29>, data : UInt<32>, error : UInt<1>}} @[Bundles.scala 214:19]
    _T_65 is invalid @[Bundles.scala 214:19]
    _T_65.ready <= _T_26.c.ready @[Bundles.scala 215:15]
    _T_65.valid <= _T_26.c.valid @[Bundles.scala 216:15]
    _T_65.bits <- _T_26.c.bits @[Bundles.scala 217:15]
    _T_54.c <- _T_65 @[Bundles.scala 237:11]
    wire _T_67 : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<7>, sink : UInt<1>, data : UInt<32>, error : UInt<1>}} @[Bundles.scala 214:19]
    _T_67 is invalid @[Bundles.scala 214:19]
    _T_67.ready <= _T_26.d.ready @[Bundles.scala 215:15]
    _T_67.valid <= _T_26.d.valid @[Bundles.scala 216:15]
    _T_67.bits <- _T_26.d.bits @[Bundles.scala 217:15]
    _T_54.d <- _T_67 @[Bundles.scala 238:11]
    wire _T_69 : {ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 214:19]
    _T_69 is invalid @[Bundles.scala 214:19]
    _T_69.ready <= _T_26.e.ready @[Bundles.scala 215:15]
    _T_69.valid <= _T_26.e.valid @[Bundles.scala 216:15]
    _T_69.bits <- _T_26.e.bits @[Bundles.scala 217:15]
    _T_54.e <- _T_69 @[Bundles.scala 239:11]
    TLMonitor.io.in <- _T_54 @[Nodes.scala 26:19]
    wire io_int : UInt<1>[1] @[Nodes.scala 328:76]
    io_int is invalid @[Nodes.scala 328:76]
    _T_26 <- auto.r_in @[LazyModule.scala 171:31]
    auto.int_out <- io_int @[LazyModule.scala 171:49]
    wire _T_225 : {fmt : {proto : UInt<2>, endian : UInt<1>, iodir : UInt<1>, len : UInt<4>}, sck : {div : UInt<12>, pol : UInt<1>, pha : UInt<1>}, cs : {id : UInt<2>, dflt : UInt<1>[4], mode : UInt<2>}, dla : {cssck : UInt<8>, sckcs : UInt<8>, intercs : UInt<8>, interxfr : UInt<8>}, wm : {tx : UInt<4>, rx : UInt<4>}} @[SPIBundle.scala 79:20]
    _T_225 is invalid @[SPIBundle.scala 79:20]
    _T_225.fmt.proto <= UInt<2>("h00") @[SPIBundle.scala 80:20]
    _T_225.fmt.iodir <= UInt<1>("h00") @[SPIBundle.scala 81:20]
    _T_225.fmt.endian <= UInt<1>("h00") @[SPIBundle.scala 82:21]
    _T_225.fmt.len <= UInt<4>("h08") @[SPIBundle.scala 83:18]
    _T_225.sck.div <= UInt<2>("h03") @[SPIBundle.scala 84:18]
    _T_225.sck.pol <= UInt<1>("h00") @[SPIBundle.scala 85:18]
    _T_225.sck.pha <= UInt<1>("h00") @[SPIBundle.scala 86:18]
    _T_225.cs.id <= UInt<1>("h00") @[SPIBundle.scala 87:16]
    _T_225.cs.dflt[0] <= UInt<1>("h01") @[SPIBundle.scala 88:30]
    _T_225.cs.dflt[1] <= UInt<1>("h01") @[SPIBundle.scala 88:30]
    _T_225.cs.dflt[2] <= UInt<1>("h01") @[SPIBundle.scala 88:30]
    _T_225.cs.dflt[3] <= UInt<1>("h01") @[SPIBundle.scala 88:30]
    _T_225.cs.mode <= UInt<2>("h00") @[SPIBundle.scala 89:18]
    _T_225.dla.cssck <= UInt<1>("h01") @[SPIBundle.scala 90:20]
    _T_225.dla.sckcs <= UInt<1>("h01") @[SPIBundle.scala 91:20]
    _T_225.dla.intercs <= UInt<1>("h01") @[SPIBundle.scala 92:22]
    _T_225.dla.interxfr <= UInt<1>("h00") @[SPIBundle.scala 93:23]
    _T_225.wm.tx <= UInt<1>("h00") @[SPIBundle.scala 94:16]
    _T_225.wm.rx <= UInt<1>("h00") @[SPIBundle.scala 95:16]
    reg ctrl : {fmt : {proto : UInt<2>, endian : UInt<1>, iodir : UInt<1>, len : UInt<4>}, sck : {div : UInt<12>, pol : UInt<1>, pha : UInt<1>}, cs : {id : UInt<2>, dflt : UInt<1>[4], mode : UInt<2>}, dla : {cssck : UInt<8>, sckcs : UInt<8>, intercs : UInt<8>, interxfr : UInt<8>}, wm : {tx : UInt<4>, rx : UInt<4>}}, clock with : (reset => (reset, _T_225)) @[TLSPI.scala 58:17]
    inst fifo of SPIFIFO_1 @[TLSPI.scala 60:20]
    fifo.io is invalid
    fifo.clock <= clock
    fifo.reset <= reset
    inst mac of SPIMedia_1 @[TLSPI.scala 61:19]
    mac.io is invalid
    mac.clock <= clock
    mac.reset <= reset
    io.port <- mac.io.port @[TLSPI.scala 62:11]
    fifo.io.ctrl.fmt <- ctrl.fmt @[TLSPI.scala 64:20]
    fifo.io.ctrl.cs <- ctrl.cs @[TLSPI.scala 65:19]
    fifo.io.ctrl.wm <- ctrl.wm @[TLSPI.scala 66:19]
    mac.io.ctrl.sck <- ctrl.sck @[TLSPI.scala 67:19]
    mac.io.ctrl.dla <- ctrl.dla @[TLSPI.scala 68:19]
    mac.io.ctrl.cs <- ctrl.cs @[TLSPI.scala 69:18]
    wire _T_255 : {txwm : UInt<1>, rxwm : UInt<1>} @[TLSPI.scala 71:51]
    _T_255 is invalid @[TLSPI.scala 71:51]
    wire _T_257 : UInt<2>
    _T_257 is invalid
    _T_257 <= UInt<1>("h00")
    node _T_258 = bits(_T_257, 0, 0) @[TLSPI.scala 71:51]
    _T_255.rxwm <= _T_258 @[TLSPI.scala 71:51]
    node _T_259 = bits(_T_257, 1, 1) @[TLSPI.scala 71:51]
    _T_255.txwm <= _T_259 @[TLSPI.scala 71:51]
    reg ie : {txwm : UInt<1>, rxwm : UInt<1>}, clock with : (reset => (reset, _T_255)) @[TLSPI.scala 71:15]
    node _T_261 = and(fifo.io.ip.txwm, ie.txwm) @[TLSPI.scala 74:25]
    node _T_262 = and(fifo.io.ip.rxwm, ie.rxwm) @[TLSPI.scala 74:49]
    node _T_263 = or(_T_261, _T_262) @[TLSPI.scala 74:37]
    io_int[0] <= _T_263 @[TLSPI.scala 74:13]
    wire _T_265 : UInt<1> @[RegMapFIFO.scala 11:21]
    _T_265 is invalid @[RegMapFIFO.scala 11:21]
    node _T_269 = eq(fifo.io.tx.ready, UInt<1>("h00")) @[RegMapFIFO.scala 24:9]
    node _T_272 = eq(fifo.io.rx.valid, UInt<1>("h00")) @[RegMapFIFO.scala 45:21]
    mac.io.link <- fifo.io.link @[TLSPI.scala 118:17]
    wire _T_277 : {flip ready : UInt<1>, valid : UInt<1>, bits : {read : UInt<1>, index : UInt<10>, data : UInt<32>, mask : UInt<4>, extra : UInt<9>}} @[RegisterRouter.scala 54:18]
    _T_277 is invalid @[RegisterRouter.scala 54:18]
    node _T_281 = eq(_T_26.a.bits.opcode, UInt<3>("h04")) @[RegisterRouter.scala 55:36]
    _T_277.bits.read <= _T_281 @[RegisterRouter.scala 55:19]
    node _T_282 = shr(_T_26.a.bits.address, 2) @[Edges.scala 183:34]
    _T_277.bits.index <= _T_282 @[RegisterRouter.scala 56:19]
    _T_277.bits.data <= _T_26.a.bits.data @[RegisterRouter.scala 57:19]
    _T_277.bits.mask <= _T_26.a.bits.mask @[RegisterRouter.scala 58:19]
    node _T_283 = cat(_T_26.a.bits.source, _T_26.a.bits.size) @[Cat.scala 30:58]
    _T_277.bits.extra <= _T_283 @[RegisterRouter.scala 59:19]
    wire _T_288 : {flip ready : UInt<1>, valid : UInt<1>, bits : {read : UInt<1>, data : UInt<32>, extra : UInt<9>}} @[RegisterRouter.scala 62:24]
    _T_288 is invalid @[RegisterRouter.scala 62:24]
    wire _T_295 : {flip ready : UInt<1>, valid : UInt<1>, bits : {read : UInt<1>, index : UInt<10>, data : UInt<32>, mask : UInt<4>, extra : UInt<9>}} @[RegisterRouter.scala 62:24]
    _T_295 is invalid @[RegisterRouter.scala 62:24]
    _T_295.bits <- _T_277.bits @[RegisterRouter.scala 62:24]
    node _T_299 = not(UInt<10>("h01f")) @[RegisterRouter.scala 62:24]
    node _T_365 = xor(_T_295.bits.index, UInt<10>("h00")) @[RegisterRouter.scala 62:24]
    node _T_366 = and(_T_365, _T_299) @[RegisterRouter.scala 62:24]
    node _T_368 = eq(_T_366, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_369 = xor(_T_295.bits.index, UInt<10>("h00")) @[RegisterRouter.scala 62:24]
    node _T_370 = and(_T_369, _T_299) @[RegisterRouter.scala 62:24]
    node _T_372 = eq(_T_370, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_374 = xor(_T_295.bits.index, UInt<10>("h05")) @[RegisterRouter.scala 62:24]
    node _T_375 = and(_T_374, _T_299) @[RegisterRouter.scala 62:24]
    node _T_377 = eq(_T_375, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_378 = xor(_T_295.bits.index, UInt<10>("h05")) @[RegisterRouter.scala 62:24]
    node _T_379 = and(_T_378, _T_299) @[RegisterRouter.scala 62:24]
    node _T_381 = eq(_T_379, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_383 = xor(_T_295.bits.index, UInt<10>("h0a")) @[RegisterRouter.scala 62:24]
    node _T_384 = and(_T_383, _T_299) @[RegisterRouter.scala 62:24]
    node _T_386 = eq(_T_384, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_387 = xor(_T_295.bits.index, UInt<10>("h0a")) @[RegisterRouter.scala 62:24]
    node _T_388 = and(_T_387, _T_299) @[RegisterRouter.scala 62:24]
    node _T_390 = eq(_T_388, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_392 = xor(_T_295.bits.index, UInt<10>("h014")) @[RegisterRouter.scala 62:24]
    node _T_393 = and(_T_392, _T_299) @[RegisterRouter.scala 62:24]
    node _T_395 = eq(_T_393, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_396 = xor(_T_295.bits.index, UInt<10>("h014")) @[RegisterRouter.scala 62:24]
    node _T_397 = and(_T_396, _T_299) @[RegisterRouter.scala 62:24]
    node _T_399 = eq(_T_397, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_401 = xor(_T_295.bits.index, UInt<10>("h01d")) @[RegisterRouter.scala 62:24]
    node _T_402 = and(_T_401, _T_299) @[RegisterRouter.scala 62:24]
    node _T_404 = eq(_T_402, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_405 = xor(_T_295.bits.index, UInt<10>("h01d")) @[RegisterRouter.scala 62:24]
    node _T_406 = and(_T_405, _T_299) @[RegisterRouter.scala 62:24]
    node _T_408 = eq(_T_406, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_410 = xor(_T_295.bits.index, UInt<10>("h01")) @[RegisterRouter.scala 62:24]
    node _T_411 = and(_T_410, _T_299) @[RegisterRouter.scala 62:24]
    node _T_413 = eq(_T_411, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_414 = xor(_T_295.bits.index, UInt<10>("h01")) @[RegisterRouter.scala 62:24]
    node _T_415 = and(_T_414, _T_299) @[RegisterRouter.scala 62:24]
    node _T_417 = eq(_T_415, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_419 = xor(_T_295.bits.index, UInt<10>("h06")) @[RegisterRouter.scala 62:24]
    node _T_420 = and(_T_419, _T_299) @[RegisterRouter.scala 62:24]
    node _T_422 = eq(_T_420, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_423 = xor(_T_295.bits.index, UInt<10>("h06")) @[RegisterRouter.scala 62:24]
    node _T_424 = and(_T_423, _T_299) @[RegisterRouter.scala 62:24]
    node _T_426 = eq(_T_424, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_428 = xor(_T_295.bits.index, UInt<10>("h01c")) @[RegisterRouter.scala 62:24]
    node _T_429 = and(_T_428, _T_299) @[RegisterRouter.scala 62:24]
    node _T_431 = eq(_T_429, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_432 = xor(_T_295.bits.index, UInt<10>("h01c")) @[RegisterRouter.scala 62:24]
    node _T_433 = and(_T_432, _T_299) @[RegisterRouter.scala 62:24]
    node _T_435 = eq(_T_433, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_437 = xor(_T_295.bits.index, UInt<10>("h015")) @[RegisterRouter.scala 62:24]
    node _T_438 = and(_T_437, _T_299) @[RegisterRouter.scala 62:24]
    node _T_440 = eq(_T_438, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_441 = xor(_T_295.bits.index, UInt<10>("h015")) @[RegisterRouter.scala 62:24]
    node _T_442 = and(_T_441, _T_299) @[RegisterRouter.scala 62:24]
    node _T_444 = eq(_T_442, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_446 = xor(_T_295.bits.index, UInt<10>("h012")) @[RegisterRouter.scala 62:24]
    node _T_447 = and(_T_446, _T_299) @[RegisterRouter.scala 62:24]
    node _T_449 = eq(_T_447, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_450 = xor(_T_295.bits.index, UInt<10>("h012")) @[RegisterRouter.scala 62:24]
    node _T_451 = and(_T_450, _T_299) @[RegisterRouter.scala 62:24]
    node _T_453 = eq(_T_451, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_455 = xor(_T_295.bits.index, UInt<10>("h010")) @[RegisterRouter.scala 62:24]
    node _T_456 = and(_T_455, _T_299) @[RegisterRouter.scala 62:24]
    node _T_458 = eq(_T_456, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_459 = xor(_T_295.bits.index, UInt<10>("h010")) @[RegisterRouter.scala 62:24]
    node _T_460 = and(_T_459, _T_299) @[RegisterRouter.scala 62:24]
    node _T_462 = eq(_T_460, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_464 = xor(_T_295.bits.index, UInt<10>("h0b")) @[RegisterRouter.scala 62:24]
    node _T_465 = and(_T_464, _T_299) @[RegisterRouter.scala 62:24]
    node _T_467 = eq(_T_465, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_468 = xor(_T_295.bits.index, UInt<10>("h0b")) @[RegisterRouter.scala 62:24]
    node _T_469 = and(_T_468, _T_299) @[RegisterRouter.scala 62:24]
    node _T_471 = eq(_T_469, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_473 = xor(_T_295.bits.index, UInt<10>("h013")) @[RegisterRouter.scala 62:24]
    node _T_474 = and(_T_473, _T_299) @[RegisterRouter.scala 62:24]
    node _T_476 = eq(_T_474, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_477 = xor(_T_295.bits.index, UInt<10>("h013")) @[RegisterRouter.scala 62:24]
    node _T_478 = and(_T_477, _T_299) @[RegisterRouter.scala 62:24]
    node _T_480 = eq(_T_478, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_482 = xor(_T_295.bits.index, UInt<10>("h04")) @[RegisterRouter.scala 62:24]
    node _T_483 = and(_T_482, _T_299) @[RegisterRouter.scala 62:24]
    node _T_485 = eq(_T_483, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_486 = xor(_T_295.bits.index, UInt<10>("h04")) @[RegisterRouter.scala 62:24]
    node _T_487 = and(_T_486, _T_299) @[RegisterRouter.scala 62:24]
    node _T_489 = eq(_T_487, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    wire _T_493 : UInt<1>[29] @[RegisterRouter.scala 62:24]
    _T_493 is invalid @[RegisterRouter.scala 62:24]
    wire _T_528 : UInt<1>[29] @[RegisterRouter.scala 62:24]
    _T_528 is invalid @[RegisterRouter.scala 62:24]
    wire _T_563 : UInt<1>[29] @[RegisterRouter.scala 62:24]
    _T_563 is invalid @[RegisterRouter.scala 62:24]
    wire _T_598 : UInt<1>[29] @[RegisterRouter.scala 62:24]
    _T_598 is invalid @[RegisterRouter.scala 62:24]
    node _T_662 = bits(_T_295.bits.mask, 0, 0) @[Bitwise.scala 27:51]
    node _T_663 = bits(_T_295.bits.mask, 1, 1) @[Bitwise.scala 27:51]
    node _T_664 = bits(_T_295.bits.mask, 2, 2) @[Bitwise.scala 27:51]
    node _T_665 = bits(_T_295.bits.mask, 3, 3) @[Bitwise.scala 27:51]
    node _T_666 = bits(_T_662, 0, 0) @[Bitwise.scala 72:15]
    node _T_669 = mux(_T_666, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_670 = bits(_T_663, 0, 0) @[Bitwise.scala 72:15]
    node _T_673 = mux(_T_670, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_674 = bits(_T_664, 0, 0) @[Bitwise.scala 72:15]
    node _T_677 = mux(_T_674, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_678 = bits(_T_665, 0, 0) @[Bitwise.scala 72:15]
    node _T_681 = mux(_T_678, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_682 = cat(_T_673, _T_669) @[Cat.scala 30:58]
    node _T_683 = cat(_T_681, _T_677) @[Cat.scala 30:58]
    node _T_684 = cat(_T_683, _T_682) @[Cat.scala 30:58]
    node _T_685 = bits(_T_295.bits.mask, 0, 0) @[Bitwise.scala 27:51]
    node _T_686 = bits(_T_295.bits.mask, 1, 1) @[Bitwise.scala 27:51]
    node _T_687 = bits(_T_295.bits.mask, 2, 2) @[Bitwise.scala 27:51]
    node _T_688 = bits(_T_295.bits.mask, 3, 3) @[Bitwise.scala 27:51]
    node _T_689 = bits(_T_685, 0, 0) @[Bitwise.scala 72:15]
    node _T_692 = mux(_T_689, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_693 = bits(_T_686, 0, 0) @[Bitwise.scala 72:15]
    node _T_696 = mux(_T_693, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_697 = bits(_T_687, 0, 0) @[Bitwise.scala 72:15]
    node _T_700 = mux(_T_697, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_701 = bits(_T_688, 0, 0) @[Bitwise.scala 72:15]
    node _T_704 = mux(_T_701, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_705 = cat(_T_696, _T_692) @[Cat.scala 30:58]
    node _T_706 = cat(_T_704, _T_700) @[Cat.scala 30:58]
    node _T_707 = cat(_T_706, _T_705) @[Cat.scala 30:58]
    node _T_708 = bits(_T_684, 11, 0) @[RegisterRouter.scala 62:24]
    node _T_710 = neq(_T_708, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_711 = bits(_T_684, 11, 0) @[RegisterRouter.scala 62:24]
    node _T_712 = not(_T_711) @[RegisterRouter.scala 62:24]
    node _T_714 = eq(_T_712, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_715 = bits(_T_707, 11, 0) @[RegisterRouter.scala 62:24]
    node _T_717 = neq(_T_715, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_718 = bits(_T_707, 11, 0) @[RegisterRouter.scala 62:24]
    node _T_719 = not(_T_718) @[RegisterRouter.scala 62:24]
    node _T_721 = eq(_T_719, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_722 = and(_T_493[0], _T_710) @[RegisterRouter.scala 62:24]
    node _T_723 = and(_T_563[0], _T_717) @[RegisterRouter.scala 62:24]
    node _T_724 = and(_T_528[0], _T_714) @[RegisterRouter.scala 62:24]
    node _T_725 = and(_T_598[0], _T_721) @[RegisterRouter.scala 62:24]
    node _T_728 = bits(_T_295.bits.data, 11, 0) @[RegisterRouter.scala 62:24]
    when _T_725 : @[RegField.scala 135:88]
      ctrl.sck.div <= _T_728 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_731 = and(_T_722, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_732 = and(UInt<1>("h01"), _T_723) @[RegisterRouter.scala 62:24]
    node _T_733 = and(_T_724, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_734 = and(UInt<1>("h01"), _T_725) @[RegisterRouter.scala 62:24]
    node _T_736 = eq(_T_710, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_739 = eq(_T_714, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_742 = eq(_T_717, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_745 = eq(_T_721, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_747 = shl(ctrl.sck.div, 0) @[RegisterRouter.scala 62:24]
    node _T_749 = not(UInt<12>("h00")) @[RegisterRouter.scala 62:24]
    node _T_750 = and(_T_747, _T_749) @[RegisterRouter.scala 62:24]
    node _T_751 = or(UInt<1>("h00"), _T_750) @[RegisterRouter.scala 62:24]
    node _T_752 = bits(_T_684, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_754 = neq(_T_752, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_755 = bits(_T_684, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_756 = not(_T_755) @[RegisterRouter.scala 62:24]
    node _T_758 = eq(_T_756, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_759 = bits(_T_707, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_761 = neq(_T_759, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_762 = bits(_T_707, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_763 = not(_T_762) @[RegisterRouter.scala 62:24]
    node _T_765 = eq(_T_763, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_766 = and(_T_493[1], _T_754) @[RegisterRouter.scala 62:24]
    node _T_767 = and(_T_563[1], _T_761) @[RegisterRouter.scala 62:24]
    node _T_768 = and(_T_528[1], _T_758) @[RegisterRouter.scala 62:24]
    node _T_769 = and(_T_598[1], _T_765) @[RegisterRouter.scala 62:24]
    node _T_772 = bits(_T_295.bits.data, 0, 0) @[RegisterRouter.scala 62:24]
    when _T_769 : @[RegField.scala 135:88]
      ctrl.cs.dflt[0] <= _T_772 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_775 = and(_T_766, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_776 = and(UInt<1>("h01"), _T_767) @[RegisterRouter.scala 62:24]
    node _T_777 = and(_T_768, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_778 = and(UInt<1>("h01"), _T_769) @[RegisterRouter.scala 62:24]
    node _T_780 = eq(_T_754, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_783 = eq(_T_758, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_786 = eq(_T_761, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_789 = eq(_T_765, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_791 = shl(ctrl.cs.dflt[0], 0) @[RegisterRouter.scala 62:24]
    node _T_793 = not(UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_794 = and(_T_791, _T_793) @[RegisterRouter.scala 62:24]
    node _T_795 = or(UInt<1>("h00"), _T_794) @[RegisterRouter.scala 62:24]
    node _T_796 = bits(_T_684, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_798 = neq(_T_796, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_799 = bits(_T_684, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_800 = not(_T_799) @[RegisterRouter.scala 62:24]
    node _T_802 = eq(_T_800, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_803 = bits(_T_707, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_805 = neq(_T_803, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_806 = bits(_T_707, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_807 = not(_T_806) @[RegisterRouter.scala 62:24]
    node _T_809 = eq(_T_807, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_810 = and(_T_493[2], _T_798) @[RegisterRouter.scala 62:24]
    node _T_811 = and(_T_563[2], _T_805) @[RegisterRouter.scala 62:24]
    node _T_812 = and(_T_528[2], _T_802) @[RegisterRouter.scala 62:24]
    node _T_813 = and(_T_598[2], _T_809) @[RegisterRouter.scala 62:24]
    node _T_816 = bits(_T_295.bits.data, 1, 1) @[RegisterRouter.scala 62:24]
    when _T_813 : @[RegField.scala 135:88]
      ctrl.cs.dflt[1] <= _T_816 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_819 = and(_T_810, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_820 = and(UInt<1>("h01"), _T_811) @[RegisterRouter.scala 62:24]
    node _T_821 = and(_T_812, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_822 = and(UInt<1>("h01"), _T_813) @[RegisterRouter.scala 62:24]
    node _T_824 = eq(_T_798, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_827 = eq(_T_802, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_830 = eq(_T_805, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_833 = eq(_T_809, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_835 = shl(ctrl.cs.dflt[1], 1) @[RegisterRouter.scala 62:24]
    node _T_837 = not(UInt<2>("h00")) @[RegisterRouter.scala 62:24]
    node _T_838 = and(_T_835, _T_837) @[RegisterRouter.scala 62:24]
    node _T_839 = or(_T_795, _T_838) @[RegisterRouter.scala 62:24]
    node _T_840 = bits(_T_684, 2, 2) @[RegisterRouter.scala 62:24]
    node _T_842 = neq(_T_840, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_843 = bits(_T_684, 2, 2) @[RegisterRouter.scala 62:24]
    node _T_844 = not(_T_843) @[RegisterRouter.scala 62:24]
    node _T_846 = eq(_T_844, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_847 = bits(_T_707, 2, 2) @[RegisterRouter.scala 62:24]
    node _T_849 = neq(_T_847, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_850 = bits(_T_707, 2, 2) @[RegisterRouter.scala 62:24]
    node _T_851 = not(_T_850) @[RegisterRouter.scala 62:24]
    node _T_853 = eq(_T_851, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_854 = and(_T_493[3], _T_842) @[RegisterRouter.scala 62:24]
    node _T_855 = and(_T_563[3], _T_849) @[RegisterRouter.scala 62:24]
    node _T_856 = and(_T_528[3], _T_846) @[RegisterRouter.scala 62:24]
    node _T_857 = and(_T_598[3], _T_853) @[RegisterRouter.scala 62:24]
    node _T_860 = bits(_T_295.bits.data, 2, 2) @[RegisterRouter.scala 62:24]
    when _T_857 : @[RegField.scala 135:88]
      ctrl.cs.dflt[2] <= _T_860 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_863 = and(_T_854, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_864 = and(UInt<1>("h01"), _T_855) @[RegisterRouter.scala 62:24]
    node _T_865 = and(_T_856, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_866 = and(UInt<1>("h01"), _T_857) @[RegisterRouter.scala 62:24]
    node _T_868 = eq(_T_842, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_871 = eq(_T_846, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_874 = eq(_T_849, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_877 = eq(_T_853, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_879 = shl(ctrl.cs.dflt[2], 2) @[RegisterRouter.scala 62:24]
    node _T_881 = not(UInt<3>("h00")) @[RegisterRouter.scala 62:24]
    node _T_882 = and(_T_879, _T_881) @[RegisterRouter.scala 62:24]
    node _T_883 = or(_T_839, _T_882) @[RegisterRouter.scala 62:24]
    node _T_884 = bits(_T_684, 3, 3) @[RegisterRouter.scala 62:24]
    node _T_886 = neq(_T_884, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_887 = bits(_T_684, 3, 3) @[RegisterRouter.scala 62:24]
    node _T_888 = not(_T_887) @[RegisterRouter.scala 62:24]
    node _T_890 = eq(_T_888, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_891 = bits(_T_707, 3, 3) @[RegisterRouter.scala 62:24]
    node _T_893 = neq(_T_891, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_894 = bits(_T_707, 3, 3) @[RegisterRouter.scala 62:24]
    node _T_895 = not(_T_894) @[RegisterRouter.scala 62:24]
    node _T_897 = eq(_T_895, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_898 = and(_T_493[4], _T_886) @[RegisterRouter.scala 62:24]
    node _T_899 = and(_T_563[4], _T_893) @[RegisterRouter.scala 62:24]
    node _T_900 = and(_T_528[4], _T_890) @[RegisterRouter.scala 62:24]
    node _T_901 = and(_T_598[4], _T_897) @[RegisterRouter.scala 62:24]
    node _T_904 = bits(_T_295.bits.data, 3, 3) @[RegisterRouter.scala 62:24]
    when _T_901 : @[RegField.scala 135:88]
      ctrl.cs.dflt[3] <= _T_904 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_907 = and(_T_898, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_908 = and(UInt<1>("h01"), _T_899) @[RegisterRouter.scala 62:24]
    node _T_909 = and(_T_900, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_910 = and(UInt<1>("h01"), _T_901) @[RegisterRouter.scala 62:24]
    node _T_912 = eq(_T_886, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_915 = eq(_T_890, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_918 = eq(_T_893, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_921 = eq(_T_897, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_923 = shl(ctrl.cs.dflt[3], 3) @[RegisterRouter.scala 62:24]
    node _T_925 = not(UInt<4>("h00")) @[RegisterRouter.scala 62:24]
    node _T_926 = and(_T_923, _T_925) @[RegisterRouter.scala 62:24]
    node _T_927 = or(_T_883, _T_926) @[RegisterRouter.scala 62:24]
    node _T_928 = bits(_T_684, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_930 = neq(_T_928, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_931 = bits(_T_684, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_932 = not(_T_931) @[RegisterRouter.scala 62:24]
    node _T_934 = eq(_T_932, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_935 = bits(_T_707, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_937 = neq(_T_935, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_938 = bits(_T_707, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_939 = not(_T_938) @[RegisterRouter.scala 62:24]
    node _T_941 = eq(_T_939, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_942 = and(_T_493[5], _T_930) @[RegisterRouter.scala 62:24]
    node _T_943 = and(_T_563[5], _T_937) @[RegisterRouter.scala 62:24]
    node _T_944 = and(_T_528[5], _T_934) @[RegisterRouter.scala 62:24]
    node _T_945 = and(_T_598[5], _T_941) @[RegisterRouter.scala 62:24]
    node _T_948 = bits(_T_295.bits.data, 7, 0) @[RegisterRouter.scala 62:24]
    when _T_945 : @[RegField.scala 135:88]
      ctrl.dla.cssck <= _T_948 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_951 = and(_T_942, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_952 = and(UInt<1>("h01"), _T_943) @[RegisterRouter.scala 62:24]
    node _T_953 = and(_T_944, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_954 = and(UInt<1>("h01"), _T_945) @[RegisterRouter.scala 62:24]
    node _T_956 = eq(_T_930, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_959 = eq(_T_934, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_962 = eq(_T_937, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_965 = eq(_T_941, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_967 = shl(ctrl.dla.cssck, 0) @[RegisterRouter.scala 62:24]
    node _T_969 = not(UInt<8>("h00")) @[RegisterRouter.scala 62:24]
    node _T_970 = and(_T_967, _T_969) @[RegisterRouter.scala 62:24]
    node _T_971 = or(UInt<1>("h00"), _T_970) @[RegisterRouter.scala 62:24]
    node _T_972 = bits(_T_684, 23, 16) @[RegisterRouter.scala 62:24]
    node _T_974 = neq(_T_972, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_975 = bits(_T_684, 23, 16) @[RegisterRouter.scala 62:24]
    node _T_976 = not(_T_975) @[RegisterRouter.scala 62:24]
    node _T_978 = eq(_T_976, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_979 = bits(_T_707, 23, 16) @[RegisterRouter.scala 62:24]
    node _T_981 = neq(_T_979, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_982 = bits(_T_707, 23, 16) @[RegisterRouter.scala 62:24]
    node _T_983 = not(_T_982) @[RegisterRouter.scala 62:24]
    node _T_985 = eq(_T_983, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_986 = and(_T_493[6], _T_974) @[RegisterRouter.scala 62:24]
    node _T_987 = and(_T_563[6], _T_981) @[RegisterRouter.scala 62:24]
    node _T_988 = and(_T_528[6], _T_978) @[RegisterRouter.scala 62:24]
    node _T_989 = and(_T_598[6], _T_985) @[RegisterRouter.scala 62:24]
    node _T_992 = bits(_T_295.bits.data, 23, 16) @[RegisterRouter.scala 62:24]
    when _T_989 : @[RegField.scala 135:88]
      ctrl.dla.sckcs <= _T_992 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_995 = and(_T_986, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_996 = and(UInt<1>("h01"), _T_987) @[RegisterRouter.scala 62:24]
    node _T_997 = and(_T_988, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_998 = and(UInt<1>("h01"), _T_989) @[RegisterRouter.scala 62:24]
    node _T_1000 = eq(_T_974, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1003 = eq(_T_978, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1006 = eq(_T_981, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1009 = eq(_T_985, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1011 = shl(ctrl.dla.sckcs, 16) @[RegisterRouter.scala 62:24]
    node _T_1013 = not(UInt<24>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1014 = and(_T_1011, _T_1013) @[RegisterRouter.scala 62:24]
    node _T_1015 = or(_T_971, _T_1014) @[RegisterRouter.scala 62:24]
    node _T_1016 = bits(_T_684, 3, 0) @[RegisterRouter.scala 62:24]
    node _T_1018 = neq(_T_1016, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1019 = bits(_T_684, 3, 0) @[RegisterRouter.scala 62:24]
    node _T_1020 = not(_T_1019) @[RegisterRouter.scala 62:24]
    node _T_1022 = eq(_T_1020, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1023 = bits(_T_707, 3, 0) @[RegisterRouter.scala 62:24]
    node _T_1025 = neq(_T_1023, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1026 = bits(_T_707, 3, 0) @[RegisterRouter.scala 62:24]
    node _T_1027 = not(_T_1026) @[RegisterRouter.scala 62:24]
    node _T_1029 = eq(_T_1027, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1030 = and(_T_493[7], _T_1018) @[RegisterRouter.scala 62:24]
    node _T_1031 = and(_T_563[7], _T_1025) @[RegisterRouter.scala 62:24]
    node _T_1032 = and(_T_528[7], _T_1022) @[RegisterRouter.scala 62:24]
    node _T_1033 = and(_T_598[7], _T_1029) @[RegisterRouter.scala 62:24]
    node _T_1036 = bits(_T_295.bits.data, 3, 0) @[RegisterRouter.scala 62:24]
    when _T_1033 : @[RegField.scala 135:88]
      ctrl.wm.tx <= _T_1036 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1039 = and(_T_1030, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1040 = and(UInt<1>("h01"), _T_1031) @[RegisterRouter.scala 62:24]
    node _T_1041 = and(_T_1032, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1042 = and(UInt<1>("h01"), _T_1033) @[RegisterRouter.scala 62:24]
    node _T_1044 = eq(_T_1018, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1047 = eq(_T_1022, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1050 = eq(_T_1025, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1053 = eq(_T_1029, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1055 = shl(ctrl.wm.tx, 0) @[RegisterRouter.scala 62:24]
    node _T_1057 = not(UInt<4>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1058 = and(_T_1055, _T_1057) @[RegisterRouter.scala 62:24]
    node _T_1059 = or(UInt<1>("h00"), _T_1058) @[RegisterRouter.scala 62:24]
    node _T_1060 = bits(_T_684, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1062 = neq(_T_1060, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1063 = bits(_T_684, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1064 = not(_T_1063) @[RegisterRouter.scala 62:24]
    node _T_1066 = eq(_T_1064, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1067 = bits(_T_707, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1069 = neq(_T_1067, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1070 = bits(_T_707, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1071 = not(_T_1070) @[RegisterRouter.scala 62:24]
    node _T_1073 = eq(_T_1071, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1074 = and(_T_493[8], _T_1062) @[RegisterRouter.scala 62:24]
    node _T_1075 = and(_T_563[8], _T_1069) @[RegisterRouter.scala 62:24]
    node _T_1076 = and(_T_528[8], _T_1066) @[RegisterRouter.scala 62:24]
    node _T_1077 = and(_T_598[8], _T_1073) @[RegisterRouter.scala 62:24]
    node _T_1080 = bits(_T_295.bits.data, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1083 = and(_T_1074, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1084 = and(UInt<1>("h01"), _T_1075) @[RegisterRouter.scala 62:24]
    node _T_1085 = and(_T_1076, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1086 = and(UInt<1>("h01"), _T_1077) @[RegisterRouter.scala 62:24]
    node _T_1088 = eq(_T_1062, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1091 = eq(_T_1066, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1094 = eq(_T_1069, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1097 = eq(_T_1073, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1099 = shl(fifo.io.ip.txwm, 0) @[RegisterRouter.scala 62:24]
    node _T_1101 = not(UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1102 = and(_T_1099, _T_1101) @[RegisterRouter.scala 62:24]
    node _T_1103 = or(UInt<1>("h00"), _T_1102) @[RegisterRouter.scala 62:24]
    node _T_1104 = bits(_T_684, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1106 = neq(_T_1104, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1107 = bits(_T_684, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1108 = not(_T_1107) @[RegisterRouter.scala 62:24]
    node _T_1110 = eq(_T_1108, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1111 = bits(_T_707, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1113 = neq(_T_1111, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1114 = bits(_T_707, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1115 = not(_T_1114) @[RegisterRouter.scala 62:24]
    node _T_1117 = eq(_T_1115, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1118 = and(_T_493[9], _T_1106) @[RegisterRouter.scala 62:24]
    node _T_1119 = and(_T_563[9], _T_1113) @[RegisterRouter.scala 62:24]
    node _T_1120 = and(_T_528[9], _T_1110) @[RegisterRouter.scala 62:24]
    node _T_1121 = and(_T_598[9], _T_1117) @[RegisterRouter.scala 62:24]
    node _T_1124 = bits(_T_295.bits.data, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1127 = and(_T_1118, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1128 = and(UInt<1>("h01"), _T_1119) @[RegisterRouter.scala 62:24]
    node _T_1129 = and(_T_1120, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1130 = and(UInt<1>("h01"), _T_1121) @[RegisterRouter.scala 62:24]
    node _T_1132 = eq(_T_1106, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1135 = eq(_T_1110, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1138 = eq(_T_1113, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1141 = eq(_T_1117, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1143 = shl(fifo.io.ip.rxwm, 1) @[RegisterRouter.scala 62:24]
    node _T_1145 = not(UInt<2>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1146 = and(_T_1143, _T_1145) @[RegisterRouter.scala 62:24]
    node _T_1147 = or(_T_1103, _T_1146) @[RegisterRouter.scala 62:24]
    node _T_1148 = bits(_T_684, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1150 = neq(_T_1148, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1151 = bits(_T_684, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1152 = not(_T_1151) @[RegisterRouter.scala 62:24]
    node _T_1154 = eq(_T_1152, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1155 = bits(_T_707, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1157 = neq(_T_1155, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1158 = bits(_T_707, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1159 = not(_T_1158) @[RegisterRouter.scala 62:24]
    node _T_1161 = eq(_T_1159, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1162 = and(_T_493[10], _T_1150) @[RegisterRouter.scala 62:24]
    node _T_1163 = and(_T_563[10], _T_1157) @[RegisterRouter.scala 62:24]
    node _T_1164 = and(_T_528[10], _T_1154) @[RegisterRouter.scala 62:24]
    node _T_1165 = and(_T_598[10], _T_1161) @[RegisterRouter.scala 62:24]
    node _T_1168 = bits(_T_295.bits.data, 0, 0) @[RegisterRouter.scala 62:24]
    when _T_1165 : @[RegField.scala 135:88]
      ctrl.sck.pha <= _T_1168 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1171 = and(_T_1162, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1172 = and(UInt<1>("h01"), _T_1163) @[RegisterRouter.scala 62:24]
    node _T_1173 = and(_T_1164, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1174 = and(UInt<1>("h01"), _T_1165) @[RegisterRouter.scala 62:24]
    node _T_1176 = eq(_T_1150, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1179 = eq(_T_1154, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1182 = eq(_T_1157, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1185 = eq(_T_1161, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1187 = shl(ctrl.sck.pha, 0) @[RegisterRouter.scala 62:24]
    node _T_1189 = not(UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1190 = and(_T_1187, _T_1189) @[RegisterRouter.scala 62:24]
    node _T_1191 = or(UInt<1>("h00"), _T_1190) @[RegisterRouter.scala 62:24]
    node _T_1192 = bits(_T_684, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1194 = neq(_T_1192, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1195 = bits(_T_684, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1196 = not(_T_1195) @[RegisterRouter.scala 62:24]
    node _T_1198 = eq(_T_1196, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1199 = bits(_T_707, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1201 = neq(_T_1199, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1202 = bits(_T_707, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1203 = not(_T_1202) @[RegisterRouter.scala 62:24]
    node _T_1205 = eq(_T_1203, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1206 = and(_T_493[11], _T_1194) @[RegisterRouter.scala 62:24]
    node _T_1207 = and(_T_563[11], _T_1201) @[RegisterRouter.scala 62:24]
    node _T_1208 = and(_T_528[11], _T_1198) @[RegisterRouter.scala 62:24]
    node _T_1209 = and(_T_598[11], _T_1205) @[RegisterRouter.scala 62:24]
    node _T_1212 = bits(_T_295.bits.data, 1, 1) @[RegisterRouter.scala 62:24]
    when _T_1209 : @[RegField.scala 135:88]
      ctrl.sck.pol <= _T_1212 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1215 = and(_T_1206, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1216 = and(UInt<1>("h01"), _T_1207) @[RegisterRouter.scala 62:24]
    node _T_1217 = and(_T_1208, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1218 = and(UInt<1>("h01"), _T_1209) @[RegisterRouter.scala 62:24]
    node _T_1220 = eq(_T_1194, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1223 = eq(_T_1198, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1226 = eq(_T_1201, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1229 = eq(_T_1205, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1231 = shl(ctrl.sck.pol, 1) @[RegisterRouter.scala 62:24]
    node _T_1233 = not(UInt<2>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1234 = and(_T_1231, _T_1233) @[RegisterRouter.scala 62:24]
    node _T_1235 = or(_T_1191, _T_1234) @[RegisterRouter.scala 62:24]
    node _T_1236 = bits(_T_684, 1, 0) @[RegisterRouter.scala 62:24]
    node _T_1238 = neq(_T_1236, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1239 = bits(_T_684, 1, 0) @[RegisterRouter.scala 62:24]
    node _T_1240 = not(_T_1239) @[RegisterRouter.scala 62:24]
    node _T_1242 = eq(_T_1240, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1243 = bits(_T_707, 1, 0) @[RegisterRouter.scala 62:24]
    node _T_1245 = neq(_T_1243, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1246 = bits(_T_707, 1, 0) @[RegisterRouter.scala 62:24]
    node _T_1247 = not(_T_1246) @[RegisterRouter.scala 62:24]
    node _T_1249 = eq(_T_1247, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1250 = and(_T_493[12], _T_1238) @[RegisterRouter.scala 62:24]
    node _T_1251 = and(_T_563[12], _T_1245) @[RegisterRouter.scala 62:24]
    node _T_1252 = and(_T_528[12], _T_1242) @[RegisterRouter.scala 62:24]
    node _T_1253 = and(_T_598[12], _T_1249) @[RegisterRouter.scala 62:24]
    node _T_1256 = bits(_T_295.bits.data, 1, 0) @[RegisterRouter.scala 62:24]
    when _T_1253 : @[RegField.scala 135:88]
      ctrl.cs.mode <= _T_1256 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1259 = and(_T_1250, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1260 = and(UInt<1>("h01"), _T_1251) @[RegisterRouter.scala 62:24]
    node _T_1261 = and(_T_1252, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1262 = and(UInt<1>("h01"), _T_1253) @[RegisterRouter.scala 62:24]
    node _T_1264 = eq(_T_1238, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1267 = eq(_T_1242, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1270 = eq(_T_1245, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1273 = eq(_T_1249, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1275 = shl(ctrl.cs.mode, 0) @[RegisterRouter.scala 62:24]
    node _T_1277 = not(UInt<2>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1278 = and(_T_1275, _T_1277) @[RegisterRouter.scala 62:24]
    node _T_1279 = or(UInt<1>("h00"), _T_1278) @[RegisterRouter.scala 62:24]
    node _T_1280 = bits(_T_684, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1282 = neq(_T_1280, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1283 = bits(_T_684, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1284 = not(_T_1283) @[RegisterRouter.scala 62:24]
    node _T_1286 = eq(_T_1284, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1287 = bits(_T_707, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1289 = neq(_T_1287, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1290 = bits(_T_707, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1291 = not(_T_1290) @[RegisterRouter.scala 62:24]
    node _T_1293 = eq(_T_1291, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1294 = and(_T_493[13], _T_1282) @[RegisterRouter.scala 62:24]
    node _T_1295 = and(_T_563[13], _T_1289) @[RegisterRouter.scala 62:24]
    node _T_1296 = and(_T_528[13], _T_1286) @[RegisterRouter.scala 62:24]
    node _T_1297 = and(_T_598[13], _T_1293) @[RegisterRouter.scala 62:24]
    node _T_1300 = bits(_T_295.bits.data, 0, 0) @[RegisterRouter.scala 62:24]
    when _T_1297 : @[RegField.scala 135:88]
      ie.txwm <= _T_1300 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1303 = and(_T_1294, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1304 = and(UInt<1>("h01"), _T_1295) @[RegisterRouter.scala 62:24]
    node _T_1305 = and(_T_1296, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1306 = and(UInt<1>("h01"), _T_1297) @[RegisterRouter.scala 62:24]
    node _T_1308 = eq(_T_1282, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1311 = eq(_T_1286, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1314 = eq(_T_1289, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1317 = eq(_T_1293, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1319 = shl(ie.txwm, 0) @[RegisterRouter.scala 62:24]
    node _T_1321 = not(UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1322 = and(_T_1319, _T_1321) @[RegisterRouter.scala 62:24]
    node _T_1323 = or(UInt<1>("h00"), _T_1322) @[RegisterRouter.scala 62:24]
    node _T_1324 = bits(_T_684, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1326 = neq(_T_1324, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1327 = bits(_T_684, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1328 = not(_T_1327) @[RegisterRouter.scala 62:24]
    node _T_1330 = eq(_T_1328, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1331 = bits(_T_707, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1333 = neq(_T_1331, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1334 = bits(_T_707, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1335 = not(_T_1334) @[RegisterRouter.scala 62:24]
    node _T_1337 = eq(_T_1335, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1338 = and(_T_493[14], _T_1326) @[RegisterRouter.scala 62:24]
    node _T_1339 = and(_T_563[14], _T_1333) @[RegisterRouter.scala 62:24]
    node _T_1340 = and(_T_528[14], _T_1330) @[RegisterRouter.scala 62:24]
    node _T_1341 = and(_T_598[14], _T_1337) @[RegisterRouter.scala 62:24]
    node _T_1344 = bits(_T_295.bits.data, 1, 1) @[RegisterRouter.scala 62:24]
    when _T_1341 : @[RegField.scala 135:88]
      ie.rxwm <= _T_1344 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1347 = and(_T_1338, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1348 = and(UInt<1>("h01"), _T_1339) @[RegisterRouter.scala 62:24]
    node _T_1349 = and(_T_1340, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1350 = and(UInt<1>("h01"), _T_1341) @[RegisterRouter.scala 62:24]
    node _T_1352 = eq(_T_1326, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1355 = eq(_T_1330, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1358 = eq(_T_1333, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1361 = eq(_T_1337, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1363 = shl(ie.rxwm, 1) @[RegisterRouter.scala 62:24]
    node _T_1365 = not(UInt<2>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1366 = and(_T_1363, _T_1365) @[RegisterRouter.scala 62:24]
    node _T_1367 = or(_T_1323, _T_1366) @[RegisterRouter.scala 62:24]
    node _T_1368 = bits(_T_684, 3, 0) @[RegisterRouter.scala 62:24]
    node _T_1370 = neq(_T_1368, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1371 = bits(_T_684, 3, 0) @[RegisterRouter.scala 62:24]
    node _T_1372 = not(_T_1371) @[RegisterRouter.scala 62:24]
    node _T_1374 = eq(_T_1372, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1375 = bits(_T_707, 3, 0) @[RegisterRouter.scala 62:24]
    node _T_1377 = neq(_T_1375, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1378 = bits(_T_707, 3, 0) @[RegisterRouter.scala 62:24]
    node _T_1379 = not(_T_1378) @[RegisterRouter.scala 62:24]
    node _T_1381 = eq(_T_1379, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1382 = and(_T_493[15], _T_1370) @[RegisterRouter.scala 62:24]
    node _T_1383 = and(_T_563[15], _T_1377) @[RegisterRouter.scala 62:24]
    node _T_1384 = and(_T_528[15], _T_1374) @[RegisterRouter.scala 62:24]
    node _T_1385 = and(_T_598[15], _T_1381) @[RegisterRouter.scala 62:24]
    node _T_1388 = bits(_T_295.bits.data, 3, 0) @[RegisterRouter.scala 62:24]
    when _T_1385 : @[RegField.scala 135:88]
      ctrl.wm.rx <= _T_1388 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1391 = and(_T_1382, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1392 = and(UInt<1>("h01"), _T_1383) @[RegisterRouter.scala 62:24]
    node _T_1393 = and(_T_1384, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1394 = and(UInt<1>("h01"), _T_1385) @[RegisterRouter.scala 62:24]
    node _T_1396 = eq(_T_1370, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1399 = eq(_T_1374, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1402 = eq(_T_1377, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1405 = eq(_T_1381, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1407 = shl(ctrl.wm.rx, 0) @[RegisterRouter.scala 62:24]
    node _T_1409 = not(UInt<4>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1410 = and(_T_1407, _T_1409) @[RegisterRouter.scala 62:24]
    node _T_1411 = or(UInt<1>("h00"), _T_1410) @[RegisterRouter.scala 62:24]
    node _T_1412 = bits(_T_684, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1414 = neq(_T_1412, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1415 = bits(_T_684, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1416 = not(_T_1415) @[RegisterRouter.scala 62:24]
    node _T_1418 = eq(_T_1416, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1419 = bits(_T_707, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1421 = neq(_T_1419, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1422 = bits(_T_707, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1423 = not(_T_1422) @[RegisterRouter.scala 62:24]
    node _T_1425 = eq(_T_1423, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1426 = and(_T_493[16], _T_1414) @[RegisterRouter.scala 62:24]
    node _T_1427 = and(_T_563[16], _T_1421) @[RegisterRouter.scala 62:24]
    node _T_1428 = and(_T_528[16], _T_1418) @[RegisterRouter.scala 62:24]
    node _T_1429 = and(_T_598[16], _T_1425) @[RegisterRouter.scala 62:24]
    node _T_1432 = bits(_T_295.bits.data, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1435 = eq(_T_265, UInt<1>("h00")) @[RegMapFIFO.scala 18:33]
    node _T_1436 = and(_T_1429, _T_1435) @[RegMapFIFO.scala 18:30]
    fifo.io.tx.valid <= _T_1436 @[RegMapFIFO.scala 18:21]
    fifo.io.tx.bits <= _T_1432 @[RegMapFIFO.scala 19:20]
    node _T_1438 = and(_T_1426, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1439 = and(UInt<1>("h01"), _T_1427) @[RegisterRouter.scala 62:24]
    node _T_1440 = and(_T_1428, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1441 = and(UInt<1>("h01"), _T_1429) @[RegisterRouter.scala 62:24]
    node _T_1443 = eq(_T_1414, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1446 = eq(_T_1418, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1449 = eq(_T_1421, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1452 = eq(_T_1425, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1454 = shl(UInt<1>("h00"), 0) @[RegisterRouter.scala 62:24]
    node _T_1456 = not(UInt<8>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1457 = and(_T_1454, _T_1456) @[RegisterRouter.scala 62:24]
    node _T_1458 = or(UInt<1>("h00"), _T_1457) @[RegisterRouter.scala 62:24]
    node _T_1459 = bits(_T_684, 30, 8) @[RegisterRouter.scala 62:24]
    node _T_1461 = neq(_T_1459, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1462 = bits(_T_684, 30, 8) @[RegisterRouter.scala 62:24]
    node _T_1463 = not(_T_1462) @[RegisterRouter.scala 62:24]
    node _T_1465 = eq(_T_1463, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1466 = bits(_T_707, 30, 8) @[RegisterRouter.scala 62:24]
    node _T_1468 = neq(_T_1466, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1469 = bits(_T_707, 30, 8) @[RegisterRouter.scala 62:24]
    node _T_1470 = not(_T_1469) @[RegisterRouter.scala 62:24]
    node _T_1472 = eq(_T_1470, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1473 = and(_T_493[17], _T_1461) @[RegisterRouter.scala 62:24]
    node _T_1474 = and(_T_563[17], _T_1468) @[RegisterRouter.scala 62:24]
    node _T_1475 = and(_T_528[17], _T_1465) @[RegisterRouter.scala 62:24]
    node _T_1476 = and(_T_598[17], _T_1472) @[RegisterRouter.scala 62:24]
    node _T_1479 = bits(_T_295.bits.data, 30, 8) @[RegisterRouter.scala 62:24]
    node _T_1482 = and(_T_1473, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1483 = and(UInt<1>("h01"), _T_1474) @[RegisterRouter.scala 62:24]
    node _T_1484 = and(_T_1475, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1485 = and(UInt<1>("h01"), _T_1476) @[RegisterRouter.scala 62:24]
    node _T_1487 = eq(_T_1461, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1490 = eq(_T_1465, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1493 = eq(_T_1468, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1496 = eq(_T_1472, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1498 = shl(UInt<1>("h00"), 8) @[RegisterRouter.scala 62:24]
    node _T_1500 = not(UInt<31>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1501 = and(_T_1498, _T_1500) @[RegisterRouter.scala 62:24]
    node _T_1502 = or(_T_1458, _T_1501) @[RegisterRouter.scala 62:24]
    node _T_1503 = bits(_T_684, 31, 31) @[RegisterRouter.scala 62:24]
    node _T_1505 = neq(_T_1503, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1506 = bits(_T_684, 31, 31) @[RegisterRouter.scala 62:24]
    node _T_1507 = not(_T_1506) @[RegisterRouter.scala 62:24]
    node _T_1509 = eq(_T_1507, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1510 = bits(_T_707, 31, 31) @[RegisterRouter.scala 62:24]
    node _T_1512 = neq(_T_1510, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1513 = bits(_T_707, 31, 31) @[RegisterRouter.scala 62:24]
    node _T_1514 = not(_T_1513) @[RegisterRouter.scala 62:24]
    node _T_1516 = eq(_T_1514, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1517 = and(_T_493[18], _T_1505) @[RegisterRouter.scala 62:24]
    node _T_1518 = and(_T_563[18], _T_1512) @[RegisterRouter.scala 62:24]
    node _T_1519 = and(_T_528[18], _T_1509) @[RegisterRouter.scala 62:24]
    node _T_1520 = and(_T_598[18], _T_1516) @[RegisterRouter.scala 62:24]
    node _T_1523 = bits(_T_295.bits.data, 31, 31) @[RegisterRouter.scala 62:24]
    node _T_1525 = bits(_T_1523, 0, 0) @[RegMapFIFO.scala 26:33]
    node _T_1526 = and(_T_1520, _T_1525) @[RegMapFIFO.scala 26:26]
    _T_265 <= _T_1526 @[RegMapFIFO.scala 26:17]
    node _T_1528 = and(_T_1517, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1529 = and(UInt<1>("h01"), _T_1518) @[RegisterRouter.scala 62:24]
    node _T_1530 = and(_T_1519, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1531 = and(UInt<1>("h01"), _T_1520) @[RegisterRouter.scala 62:24]
    node _T_1533 = eq(_T_1505, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1536 = eq(_T_1509, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1539 = eq(_T_1512, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1542 = eq(_T_1516, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1544 = shl(_T_269, 31) @[RegisterRouter.scala 62:24]
    node _T_1546 = not(UInt<32>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1547 = and(_T_1544, _T_1546) @[RegisterRouter.scala 62:24]
    node _T_1548 = or(_T_1502, _T_1547) @[RegisterRouter.scala 62:24]
    node _T_1549 = bits(_T_684, 1, 0) @[RegisterRouter.scala 62:24]
    node _T_1551 = neq(_T_1549, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1552 = bits(_T_684, 1, 0) @[RegisterRouter.scala 62:24]
    node _T_1553 = not(_T_1552) @[RegisterRouter.scala 62:24]
    node _T_1555 = eq(_T_1553, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1556 = bits(_T_707, 1, 0) @[RegisterRouter.scala 62:24]
    node _T_1558 = neq(_T_1556, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1559 = bits(_T_707, 1, 0) @[RegisterRouter.scala 62:24]
    node _T_1560 = not(_T_1559) @[RegisterRouter.scala 62:24]
    node _T_1562 = eq(_T_1560, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1563 = and(_T_493[19], _T_1551) @[RegisterRouter.scala 62:24]
    node _T_1564 = and(_T_563[19], _T_1558) @[RegisterRouter.scala 62:24]
    node _T_1565 = and(_T_528[19], _T_1555) @[RegisterRouter.scala 62:24]
    node _T_1566 = and(_T_598[19], _T_1562) @[RegisterRouter.scala 62:24]
    node _T_1569 = bits(_T_295.bits.data, 1, 0) @[RegisterRouter.scala 62:24]
    when _T_1566 : @[RegField.scala 135:88]
      ctrl.fmt.proto <= _T_1569 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1572 = and(_T_1563, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1573 = and(UInt<1>("h01"), _T_1564) @[RegisterRouter.scala 62:24]
    node _T_1574 = and(_T_1565, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1575 = and(UInt<1>("h01"), _T_1566) @[RegisterRouter.scala 62:24]
    node _T_1577 = eq(_T_1551, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1580 = eq(_T_1555, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1583 = eq(_T_1558, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1586 = eq(_T_1562, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1588 = shl(ctrl.fmt.proto, 0) @[RegisterRouter.scala 62:24]
    node _T_1590 = not(UInt<2>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1591 = and(_T_1588, _T_1590) @[RegisterRouter.scala 62:24]
    node _T_1592 = or(UInt<1>("h00"), _T_1591) @[RegisterRouter.scala 62:24]
    node _T_1593 = bits(_T_684, 2, 2) @[RegisterRouter.scala 62:24]
    node _T_1595 = neq(_T_1593, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1596 = bits(_T_684, 2, 2) @[RegisterRouter.scala 62:24]
    node _T_1597 = not(_T_1596) @[RegisterRouter.scala 62:24]
    node _T_1599 = eq(_T_1597, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1600 = bits(_T_707, 2, 2) @[RegisterRouter.scala 62:24]
    node _T_1602 = neq(_T_1600, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1603 = bits(_T_707, 2, 2) @[RegisterRouter.scala 62:24]
    node _T_1604 = not(_T_1603) @[RegisterRouter.scala 62:24]
    node _T_1606 = eq(_T_1604, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1607 = and(_T_493[20], _T_1595) @[RegisterRouter.scala 62:24]
    node _T_1608 = and(_T_563[20], _T_1602) @[RegisterRouter.scala 62:24]
    node _T_1609 = and(_T_528[20], _T_1599) @[RegisterRouter.scala 62:24]
    node _T_1610 = and(_T_598[20], _T_1606) @[RegisterRouter.scala 62:24]
    node _T_1613 = bits(_T_295.bits.data, 2, 2) @[RegisterRouter.scala 62:24]
    when _T_1610 : @[RegField.scala 135:88]
      ctrl.fmt.endian <= _T_1613 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1616 = and(_T_1607, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1617 = and(UInt<1>("h01"), _T_1608) @[RegisterRouter.scala 62:24]
    node _T_1618 = and(_T_1609, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1619 = and(UInt<1>("h01"), _T_1610) @[RegisterRouter.scala 62:24]
    node _T_1621 = eq(_T_1595, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1624 = eq(_T_1599, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1627 = eq(_T_1602, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1630 = eq(_T_1606, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1632 = shl(ctrl.fmt.endian, 2) @[RegisterRouter.scala 62:24]
    node _T_1634 = not(UInt<3>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1635 = and(_T_1632, _T_1634) @[RegisterRouter.scala 62:24]
    node _T_1636 = or(_T_1592, _T_1635) @[RegisterRouter.scala 62:24]
    node _T_1637 = bits(_T_684, 3, 3) @[RegisterRouter.scala 62:24]
    node _T_1639 = neq(_T_1637, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1640 = bits(_T_684, 3, 3) @[RegisterRouter.scala 62:24]
    node _T_1641 = not(_T_1640) @[RegisterRouter.scala 62:24]
    node _T_1643 = eq(_T_1641, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1644 = bits(_T_707, 3, 3) @[RegisterRouter.scala 62:24]
    node _T_1646 = neq(_T_1644, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1647 = bits(_T_707, 3, 3) @[RegisterRouter.scala 62:24]
    node _T_1648 = not(_T_1647) @[RegisterRouter.scala 62:24]
    node _T_1650 = eq(_T_1648, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1651 = and(_T_493[21], _T_1639) @[RegisterRouter.scala 62:24]
    node _T_1652 = and(_T_563[21], _T_1646) @[RegisterRouter.scala 62:24]
    node _T_1653 = and(_T_528[21], _T_1643) @[RegisterRouter.scala 62:24]
    node _T_1654 = and(_T_598[21], _T_1650) @[RegisterRouter.scala 62:24]
    node _T_1657 = bits(_T_295.bits.data, 3, 3) @[RegisterRouter.scala 62:24]
    when _T_1654 : @[RegField.scala 135:88]
      ctrl.fmt.iodir <= _T_1657 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1660 = and(_T_1651, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1661 = and(UInt<1>("h01"), _T_1652) @[RegisterRouter.scala 62:24]
    node _T_1662 = and(_T_1653, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1663 = and(UInt<1>("h01"), _T_1654) @[RegisterRouter.scala 62:24]
    node _T_1665 = eq(_T_1639, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1668 = eq(_T_1643, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1671 = eq(_T_1646, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1674 = eq(_T_1650, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1676 = shl(ctrl.fmt.iodir, 3) @[RegisterRouter.scala 62:24]
    node _T_1678 = not(UInt<4>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1679 = and(_T_1676, _T_1678) @[RegisterRouter.scala 62:24]
    node _T_1680 = or(_T_1636, _T_1679) @[RegisterRouter.scala 62:24]
    node _T_1681 = bits(_T_684, 19, 16) @[RegisterRouter.scala 62:24]
    node _T_1683 = neq(_T_1681, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1684 = bits(_T_684, 19, 16) @[RegisterRouter.scala 62:24]
    node _T_1685 = not(_T_1684) @[RegisterRouter.scala 62:24]
    node _T_1687 = eq(_T_1685, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1688 = bits(_T_707, 19, 16) @[RegisterRouter.scala 62:24]
    node _T_1690 = neq(_T_1688, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1691 = bits(_T_707, 19, 16) @[RegisterRouter.scala 62:24]
    node _T_1692 = not(_T_1691) @[RegisterRouter.scala 62:24]
    node _T_1694 = eq(_T_1692, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1695 = and(_T_493[22], _T_1683) @[RegisterRouter.scala 62:24]
    node _T_1696 = and(_T_563[22], _T_1690) @[RegisterRouter.scala 62:24]
    node _T_1697 = and(_T_528[22], _T_1687) @[RegisterRouter.scala 62:24]
    node _T_1698 = and(_T_598[22], _T_1694) @[RegisterRouter.scala 62:24]
    node _T_1701 = bits(_T_295.bits.data, 19, 16) @[RegisterRouter.scala 62:24]
    when _T_1698 : @[RegField.scala 135:88]
      ctrl.fmt.len <= _T_1701 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1704 = and(_T_1695, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1705 = and(UInt<1>("h01"), _T_1696) @[RegisterRouter.scala 62:24]
    node _T_1706 = and(_T_1697, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1707 = and(UInt<1>("h01"), _T_1698) @[RegisterRouter.scala 62:24]
    node _T_1709 = eq(_T_1683, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1712 = eq(_T_1687, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1715 = eq(_T_1690, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1718 = eq(_T_1694, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1720 = shl(ctrl.fmt.len, 16) @[RegisterRouter.scala 62:24]
    node _T_1722 = not(UInt<20>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1723 = and(_T_1720, _T_1722) @[RegisterRouter.scala 62:24]
    node _T_1724 = or(_T_1680, _T_1723) @[RegisterRouter.scala 62:24]
    node _T_1725 = bits(_T_684, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1727 = neq(_T_1725, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1728 = bits(_T_684, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1729 = not(_T_1728) @[RegisterRouter.scala 62:24]
    node _T_1731 = eq(_T_1729, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1732 = bits(_T_707, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1734 = neq(_T_1732, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1735 = bits(_T_707, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1736 = not(_T_1735) @[RegisterRouter.scala 62:24]
    node _T_1738 = eq(_T_1736, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1739 = and(_T_493[23], _T_1727) @[RegisterRouter.scala 62:24]
    node _T_1740 = and(_T_563[23], _T_1734) @[RegisterRouter.scala 62:24]
    node _T_1741 = and(_T_528[23], _T_1731) @[RegisterRouter.scala 62:24]
    node _T_1742 = and(_T_598[23], _T_1738) @[RegisterRouter.scala 62:24]
    node _T_1745 = bits(_T_295.bits.data, 7, 0) @[RegisterRouter.scala 62:24]
    when _T_1742 : @[RegField.scala 135:88]
      ctrl.dla.intercs <= _T_1745 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1748 = and(_T_1739, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1749 = and(UInt<1>("h01"), _T_1740) @[RegisterRouter.scala 62:24]
    node _T_1750 = and(_T_1741, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1751 = and(UInt<1>("h01"), _T_1742) @[RegisterRouter.scala 62:24]
    node _T_1753 = eq(_T_1727, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1756 = eq(_T_1731, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1759 = eq(_T_1734, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1762 = eq(_T_1738, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1764 = shl(ctrl.dla.intercs, 0) @[RegisterRouter.scala 62:24]
    node _T_1766 = not(UInt<8>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1767 = and(_T_1764, _T_1766) @[RegisterRouter.scala 62:24]
    node _T_1768 = or(UInt<1>("h00"), _T_1767) @[RegisterRouter.scala 62:24]
    node _T_1769 = bits(_T_684, 23, 16) @[RegisterRouter.scala 62:24]
    node _T_1771 = neq(_T_1769, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1772 = bits(_T_684, 23, 16) @[RegisterRouter.scala 62:24]
    node _T_1773 = not(_T_1772) @[RegisterRouter.scala 62:24]
    node _T_1775 = eq(_T_1773, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1776 = bits(_T_707, 23, 16) @[RegisterRouter.scala 62:24]
    node _T_1778 = neq(_T_1776, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1779 = bits(_T_707, 23, 16) @[RegisterRouter.scala 62:24]
    node _T_1780 = not(_T_1779) @[RegisterRouter.scala 62:24]
    node _T_1782 = eq(_T_1780, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1783 = and(_T_493[24], _T_1771) @[RegisterRouter.scala 62:24]
    node _T_1784 = and(_T_563[24], _T_1778) @[RegisterRouter.scala 62:24]
    node _T_1785 = and(_T_528[24], _T_1775) @[RegisterRouter.scala 62:24]
    node _T_1786 = and(_T_598[24], _T_1782) @[RegisterRouter.scala 62:24]
    node _T_1789 = bits(_T_295.bits.data, 23, 16) @[RegisterRouter.scala 62:24]
    when _T_1786 : @[RegField.scala 135:88]
      ctrl.dla.interxfr <= _T_1789 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1792 = and(_T_1783, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1793 = and(UInt<1>("h01"), _T_1784) @[RegisterRouter.scala 62:24]
    node _T_1794 = and(_T_1785, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1795 = and(UInt<1>("h01"), _T_1786) @[RegisterRouter.scala 62:24]
    node _T_1797 = eq(_T_1771, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1800 = eq(_T_1775, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1803 = eq(_T_1778, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1806 = eq(_T_1782, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1808 = shl(ctrl.dla.interxfr, 16) @[RegisterRouter.scala 62:24]
    node _T_1810 = not(UInt<24>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1811 = and(_T_1808, _T_1810) @[RegisterRouter.scala 62:24]
    node _T_1812 = or(_T_1768, _T_1811) @[RegisterRouter.scala 62:24]
    node _T_1813 = bits(_T_684, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1815 = neq(_T_1813, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1816 = bits(_T_684, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1817 = not(_T_1816) @[RegisterRouter.scala 62:24]
    node _T_1819 = eq(_T_1817, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1820 = bits(_T_707, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1822 = neq(_T_1820, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1823 = bits(_T_707, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1824 = not(_T_1823) @[RegisterRouter.scala 62:24]
    node _T_1826 = eq(_T_1824, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1827 = and(_T_493[25], _T_1815) @[RegisterRouter.scala 62:24]
    node _T_1828 = and(_T_563[25], _T_1822) @[RegisterRouter.scala 62:24]
    node _T_1829 = and(_T_528[25], _T_1819) @[RegisterRouter.scala 62:24]
    node _T_1830 = and(_T_598[25], _T_1826) @[RegisterRouter.scala 62:24]
    fifo.io.rx.ready <= _T_1828 @[RegMapFIFO.scala 41:21]
    node _T_1833 = bits(_T_295.bits.data, 7, 0) @[RegisterRouter.scala 62:24]
    node _T_1836 = and(_T_1827, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1837 = and(UInt<1>("h01"), _T_1828) @[RegisterRouter.scala 62:24]
    node _T_1838 = and(_T_1829, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1839 = and(UInt<1>("h01"), _T_1830) @[RegisterRouter.scala 62:24]
    node _T_1841 = eq(_T_1815, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1844 = eq(_T_1819, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1847 = eq(_T_1822, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1850 = eq(_T_1826, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1852 = shl(fifo.io.rx.bits, 0) @[RegisterRouter.scala 62:24]
    node _T_1854 = not(UInt<8>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1855 = and(_T_1852, _T_1854) @[RegisterRouter.scala 62:24]
    node _T_1856 = or(UInt<1>("h00"), _T_1855) @[RegisterRouter.scala 62:24]
    node _T_1857 = bits(_T_684, 30, 8) @[RegisterRouter.scala 62:24]
    node _T_1859 = neq(_T_1857, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1860 = bits(_T_684, 30, 8) @[RegisterRouter.scala 62:24]
    node _T_1861 = not(_T_1860) @[RegisterRouter.scala 62:24]
    node _T_1863 = eq(_T_1861, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1864 = bits(_T_707, 30, 8) @[RegisterRouter.scala 62:24]
    node _T_1866 = neq(_T_1864, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1867 = bits(_T_707, 30, 8) @[RegisterRouter.scala 62:24]
    node _T_1868 = not(_T_1867) @[RegisterRouter.scala 62:24]
    node _T_1870 = eq(_T_1868, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1871 = and(_T_493[26], _T_1859) @[RegisterRouter.scala 62:24]
    node _T_1872 = and(_T_563[26], _T_1866) @[RegisterRouter.scala 62:24]
    node _T_1873 = and(_T_528[26], _T_1863) @[RegisterRouter.scala 62:24]
    node _T_1874 = and(_T_598[26], _T_1870) @[RegisterRouter.scala 62:24]
    node _T_1877 = bits(_T_295.bits.data, 30, 8) @[RegisterRouter.scala 62:24]
    node _T_1880 = and(_T_1871, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1881 = and(UInt<1>("h01"), _T_1872) @[RegisterRouter.scala 62:24]
    node _T_1882 = and(_T_1873, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1883 = and(UInt<1>("h01"), _T_1874) @[RegisterRouter.scala 62:24]
    node _T_1885 = eq(_T_1859, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1888 = eq(_T_1863, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1891 = eq(_T_1866, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1894 = eq(_T_1870, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1896 = shl(UInt<1>("h00"), 8) @[RegisterRouter.scala 62:24]
    node _T_1898 = not(UInt<31>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1899 = and(_T_1896, _T_1898) @[RegisterRouter.scala 62:24]
    node _T_1900 = or(_T_1856, _T_1899) @[RegisterRouter.scala 62:24]
    node _T_1901 = bits(_T_684, 31, 31) @[RegisterRouter.scala 62:24]
    node _T_1903 = neq(_T_1901, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1904 = bits(_T_684, 31, 31) @[RegisterRouter.scala 62:24]
    node _T_1905 = not(_T_1904) @[RegisterRouter.scala 62:24]
    node _T_1907 = eq(_T_1905, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1908 = bits(_T_707, 31, 31) @[RegisterRouter.scala 62:24]
    node _T_1910 = neq(_T_1908, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1911 = bits(_T_707, 31, 31) @[RegisterRouter.scala 62:24]
    node _T_1912 = not(_T_1911) @[RegisterRouter.scala 62:24]
    node _T_1914 = eq(_T_1912, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1915 = and(_T_493[27], _T_1903) @[RegisterRouter.scala 62:24]
    node _T_1916 = and(_T_563[27], _T_1910) @[RegisterRouter.scala 62:24]
    node _T_1917 = and(_T_528[27], _T_1907) @[RegisterRouter.scala 62:24]
    node _T_1918 = and(_T_598[27], _T_1914) @[RegisterRouter.scala 62:24]
    node _T_1921 = bits(_T_295.bits.data, 31, 31) @[RegisterRouter.scala 62:24]
    node _T_1924 = and(_T_1915, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1925 = and(UInt<1>("h01"), _T_1916) @[RegisterRouter.scala 62:24]
    node _T_1926 = and(_T_1917, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1927 = and(UInt<1>("h01"), _T_1918) @[RegisterRouter.scala 62:24]
    node _T_1929 = eq(_T_1903, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1932 = eq(_T_1907, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1935 = eq(_T_1910, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1938 = eq(_T_1914, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1940 = shl(_T_272, 31) @[RegisterRouter.scala 62:24]
    node _T_1942 = not(UInt<32>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1943 = and(_T_1940, _T_1942) @[RegisterRouter.scala 62:24]
    node _T_1944 = or(_T_1900, _T_1943) @[RegisterRouter.scala 62:24]
    node _T_1945 = bits(_T_684, 1, 0) @[RegisterRouter.scala 62:24]
    node _T_1947 = neq(_T_1945, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1948 = bits(_T_684, 1, 0) @[RegisterRouter.scala 62:24]
    node _T_1949 = not(_T_1948) @[RegisterRouter.scala 62:24]
    node _T_1951 = eq(_T_1949, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1952 = bits(_T_707, 1, 0) @[RegisterRouter.scala 62:24]
    node _T_1954 = neq(_T_1952, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1955 = bits(_T_707, 1, 0) @[RegisterRouter.scala 62:24]
    node _T_1956 = not(_T_1955) @[RegisterRouter.scala 62:24]
    node _T_1958 = eq(_T_1956, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1959 = and(_T_493[28], _T_1947) @[RegisterRouter.scala 62:24]
    node _T_1960 = and(_T_563[28], _T_1954) @[RegisterRouter.scala 62:24]
    node _T_1961 = and(_T_528[28], _T_1951) @[RegisterRouter.scala 62:24]
    node _T_1962 = and(_T_598[28], _T_1958) @[RegisterRouter.scala 62:24]
    node _T_1965 = bits(_T_295.bits.data, 1, 0) @[RegisterRouter.scala 62:24]
    when _T_1962 : @[RegField.scala 135:88]
      ctrl.cs.id <= _T_1965 @[RegField.scala 135:92]
      skip @[RegField.scala 135:88]
    node _T_1968 = and(_T_1959, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1969 = and(UInt<1>("h01"), _T_1960) @[RegisterRouter.scala 62:24]
    node _T_1970 = and(_T_1961, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    node _T_1971 = and(UInt<1>("h01"), _T_1962) @[RegisterRouter.scala 62:24]
    node _T_1973 = eq(_T_1947, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1976 = eq(_T_1951, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1979 = eq(_T_1954, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1982 = eq(_T_1958, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1984 = shl(ctrl.cs.id, 0) @[RegisterRouter.scala 62:24]
    node _T_1986 = not(UInt<2>("h00")) @[RegisterRouter.scala 62:24]
    node _T_1987 = and(_T_1984, _T_1986) @[RegisterRouter.scala 62:24]
    node _T_1988 = or(UInt<1>("h00"), _T_1987) @[RegisterRouter.scala 62:24]
    node _T_1989 = bits(_T_295.bits.index, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_1990 = bits(_T_295.bits.index, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_1991 = bits(_T_295.bits.index, 2, 2) @[RegisterRouter.scala 62:24]
    node _T_1992 = bits(_T_295.bits.index, 3, 3) @[RegisterRouter.scala 62:24]
    node _T_1993 = bits(_T_295.bits.index, 4, 4) @[RegisterRouter.scala 62:24]
    node _T_1994 = bits(_T_295.bits.index, 5, 5) @[RegisterRouter.scala 62:24]
    node _T_1995 = bits(_T_295.bits.index, 6, 6) @[RegisterRouter.scala 62:24]
    node _T_1996 = bits(_T_295.bits.index, 7, 7) @[RegisterRouter.scala 62:24]
    node _T_1997 = bits(_T_295.bits.index, 8, 8) @[RegisterRouter.scala 62:24]
    node _T_1998 = bits(_T_295.bits.index, 9, 9) @[RegisterRouter.scala 62:24]
    node _T_1999 = cat(_T_1990, _T_1989) @[Cat.scala 30:58]
    node _T_2000 = cat(_T_1993, _T_1992) @[Cat.scala 30:58]
    node _T_2001 = cat(_T_2000, _T_1991) @[Cat.scala 30:58]
    node _T_2002 = cat(_T_2001, _T_1999) @[Cat.scala 30:58]
    node _T_2003 = bits(_T_295.bits.index, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_2004 = bits(_T_295.bits.index, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_2005 = bits(_T_295.bits.index, 2, 2) @[RegisterRouter.scala 62:24]
    node _T_2006 = bits(_T_295.bits.index, 3, 3) @[RegisterRouter.scala 62:24]
    node _T_2007 = bits(_T_295.bits.index, 4, 4) @[RegisterRouter.scala 62:24]
    node _T_2008 = bits(_T_295.bits.index, 5, 5) @[RegisterRouter.scala 62:24]
    node _T_2009 = bits(_T_295.bits.index, 6, 6) @[RegisterRouter.scala 62:24]
    node _T_2010 = bits(_T_295.bits.index, 7, 7) @[RegisterRouter.scala 62:24]
    node _T_2011 = bits(_T_295.bits.index, 8, 8) @[RegisterRouter.scala 62:24]
    node _T_2012 = bits(_T_295.bits.index, 9, 9) @[RegisterRouter.scala 62:24]
    node _T_2013 = cat(_T_2004, _T_2003) @[Cat.scala 30:58]
    node _T_2014 = cat(_T_2007, _T_2006) @[Cat.scala 30:58]
    node _T_2015 = cat(_T_2014, _T_2005) @[Cat.scala 30:58]
    node _T_2016 = cat(_T_2015, _T_2013) @[Cat.scala 30:58]
    node _T_2018 = dshl(UInt<1>("h01"), _T_2002) @[OneHot.scala 45:35]
    node _T_2019 = bits(_T_2018, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_2020 = bits(_T_2018, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_2021 = bits(_T_2018, 2, 2) @[RegisterRouter.scala 62:24]
    node _T_2022 = bits(_T_2018, 3, 3) @[RegisterRouter.scala 62:24]
    node _T_2023 = bits(_T_2018, 4, 4) @[RegisterRouter.scala 62:24]
    node _T_2024 = bits(_T_2018, 5, 5) @[RegisterRouter.scala 62:24]
    node _T_2025 = bits(_T_2018, 6, 6) @[RegisterRouter.scala 62:24]
    node _T_2026 = bits(_T_2018, 7, 7) @[RegisterRouter.scala 62:24]
    node _T_2027 = bits(_T_2018, 8, 8) @[RegisterRouter.scala 62:24]
    node _T_2028 = bits(_T_2018, 9, 9) @[RegisterRouter.scala 62:24]
    node _T_2029 = bits(_T_2018, 10, 10) @[RegisterRouter.scala 62:24]
    node _T_2030 = bits(_T_2018, 11, 11) @[RegisterRouter.scala 62:24]
    node _T_2031 = bits(_T_2018, 12, 12) @[RegisterRouter.scala 62:24]
    node _T_2032 = bits(_T_2018, 13, 13) @[RegisterRouter.scala 62:24]
    node _T_2033 = bits(_T_2018, 14, 14) @[RegisterRouter.scala 62:24]
    node _T_2034 = bits(_T_2018, 15, 15) @[RegisterRouter.scala 62:24]
    node _T_2035 = bits(_T_2018, 16, 16) @[RegisterRouter.scala 62:24]
    node _T_2036 = bits(_T_2018, 17, 17) @[RegisterRouter.scala 62:24]
    node _T_2037 = bits(_T_2018, 18, 18) @[RegisterRouter.scala 62:24]
    node _T_2038 = bits(_T_2018, 19, 19) @[RegisterRouter.scala 62:24]
    node _T_2039 = bits(_T_2018, 20, 20) @[RegisterRouter.scala 62:24]
    node _T_2040 = bits(_T_2018, 21, 21) @[RegisterRouter.scala 62:24]
    node _T_2041 = bits(_T_2018, 22, 22) @[RegisterRouter.scala 62:24]
    node _T_2042 = bits(_T_2018, 23, 23) @[RegisterRouter.scala 62:24]
    node _T_2043 = bits(_T_2018, 24, 24) @[RegisterRouter.scala 62:24]
    node _T_2044 = bits(_T_2018, 25, 25) @[RegisterRouter.scala 62:24]
    node _T_2045 = bits(_T_2018, 26, 26) @[RegisterRouter.scala 62:24]
    node _T_2046 = bits(_T_2018, 27, 27) @[RegisterRouter.scala 62:24]
    node _T_2047 = bits(_T_2018, 28, 28) @[RegisterRouter.scala 62:24]
    node _T_2048 = bits(_T_2018, 29, 29) @[RegisterRouter.scala 62:24]
    node _T_2049 = bits(_T_2018, 30, 30) @[RegisterRouter.scala 62:24]
    node _T_2050 = bits(_T_2018, 31, 31) @[RegisterRouter.scala 62:24]
    node _T_2052 = dshl(UInt<1>("h01"), _T_2016) @[OneHot.scala 45:35]
    node _T_2053 = bits(_T_2052, 0, 0) @[RegisterRouter.scala 62:24]
    node _T_2054 = bits(_T_2052, 1, 1) @[RegisterRouter.scala 62:24]
    node _T_2055 = bits(_T_2052, 2, 2) @[RegisterRouter.scala 62:24]
    node _T_2056 = bits(_T_2052, 3, 3) @[RegisterRouter.scala 62:24]
    node _T_2057 = bits(_T_2052, 4, 4) @[RegisterRouter.scala 62:24]
    node _T_2058 = bits(_T_2052, 5, 5) @[RegisterRouter.scala 62:24]
    node _T_2059 = bits(_T_2052, 6, 6) @[RegisterRouter.scala 62:24]
    node _T_2060 = bits(_T_2052, 7, 7) @[RegisterRouter.scala 62:24]
    node _T_2061 = bits(_T_2052, 8, 8) @[RegisterRouter.scala 62:24]
    node _T_2062 = bits(_T_2052, 9, 9) @[RegisterRouter.scala 62:24]
    node _T_2063 = bits(_T_2052, 10, 10) @[RegisterRouter.scala 62:24]
    node _T_2064 = bits(_T_2052, 11, 11) @[RegisterRouter.scala 62:24]
    node _T_2065 = bits(_T_2052, 12, 12) @[RegisterRouter.scala 62:24]
    node _T_2066 = bits(_T_2052, 13, 13) @[RegisterRouter.scala 62:24]
    node _T_2067 = bits(_T_2052, 14, 14) @[RegisterRouter.scala 62:24]
    node _T_2068 = bits(_T_2052, 15, 15) @[RegisterRouter.scala 62:24]
    node _T_2069 = bits(_T_2052, 16, 16) @[RegisterRouter.scala 62:24]
    node _T_2070 = bits(_T_2052, 17, 17) @[RegisterRouter.scala 62:24]
    node _T_2071 = bits(_T_2052, 18, 18) @[RegisterRouter.scala 62:24]
    node _T_2072 = bits(_T_2052, 19, 19) @[RegisterRouter.scala 62:24]
    node _T_2073 = bits(_T_2052, 20, 20) @[RegisterRouter.scala 62:24]
    node _T_2074 = bits(_T_2052, 21, 21) @[RegisterRouter.scala 62:24]
    node _T_2075 = bits(_T_2052, 22, 22) @[RegisterRouter.scala 62:24]
    node _T_2076 = bits(_T_2052, 23, 23) @[RegisterRouter.scala 62:24]
    node _T_2077 = bits(_T_2052, 24, 24) @[RegisterRouter.scala 62:24]
    node _T_2078 = bits(_T_2052, 25, 25) @[RegisterRouter.scala 62:24]
    node _T_2079 = bits(_T_2052, 26, 26) @[RegisterRouter.scala 62:24]
    node _T_2080 = bits(_T_2052, 27, 27) @[RegisterRouter.scala 62:24]
    node _T_2081 = bits(_T_2052, 28, 28) @[RegisterRouter.scala 62:24]
    node _T_2082 = bits(_T_2052, 29, 29) @[RegisterRouter.scala 62:24]
    node _T_2083 = bits(_T_2052, 30, 30) @[RegisterRouter.scala 62:24]
    node _T_2084 = bits(_T_2052, 31, 31) @[RegisterRouter.scala 62:24]
    node _T_2085 = and(_T_277.valid, _T_295.ready) @[RegisterRouter.scala 62:24]
    node _T_2086 = and(_T_2085, _T_295.bits.read) @[RegisterRouter.scala 62:24]
    wire _T_2088 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2088 is invalid @[RegisterRouter.scala 62:24]
    node _T_2089 = and(_T_2086, _T_2019) @[RegisterRouter.scala 62:24]
    node _T_2090 = and(_T_2089, _T_368) @[RegisterRouter.scala 62:24]
    _T_2088 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[0] <= _T_2090 @[ReduceOthers.scala 39:69]
    node _T_2093 = eq(_T_368, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2094 = or(_T_2088, _T_2093) @[RegisterRouter.scala 62:24]
    wire _T_2096 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2096 is invalid @[RegisterRouter.scala 62:24]
    node _T_2097 = and(_T_2086, _T_2020) @[RegisterRouter.scala 62:24]
    node _T_2098 = and(_T_2097, _T_413) @[RegisterRouter.scala 62:24]
    _T_2096 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[11] <= _T_2098 @[ReduceOthers.scala 39:69]
    _T_493[10] <= _T_2098 @[ReduceOthers.scala 39:69]
    node _T_2101 = eq(_T_413, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2102 = or(_T_2096, _T_2101) @[RegisterRouter.scala 62:24]
    wire _T_2104 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2104 is invalid @[RegisterRouter.scala 62:24]
    node _T_2105 = and(_T_2086, _T_2021) @[RegisterRouter.scala 62:24]
    node _T_2106 = and(_T_2105, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2104 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2109 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2110 = or(_T_2104, _T_2109) @[RegisterRouter.scala 62:24]
    wire _T_2112 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2112 is invalid @[RegisterRouter.scala 62:24]
    node _T_2113 = and(_T_2086, _T_2022) @[RegisterRouter.scala 62:24]
    node _T_2114 = and(_T_2113, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2112 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2117 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2118 = or(_T_2112, _T_2117) @[RegisterRouter.scala 62:24]
    wire _T_2120 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2120 is invalid @[RegisterRouter.scala 62:24]
    node _T_2121 = and(_T_2086, _T_2023) @[RegisterRouter.scala 62:24]
    node _T_2122 = and(_T_2121, _T_485) @[RegisterRouter.scala 62:24]
    _T_2120 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[28] <= _T_2122 @[ReduceOthers.scala 39:69]
    node _T_2125 = eq(_T_485, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2126 = or(_T_2120, _T_2125) @[RegisterRouter.scala 62:24]
    wire _T_2128 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2128 is invalid @[RegisterRouter.scala 62:24]
    node _T_2129 = and(_T_2086, _T_2024) @[RegisterRouter.scala 62:24]
    node _T_2130 = and(_T_2129, _T_377) @[RegisterRouter.scala 62:24]
    _T_2128 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[4] <= _T_2130 @[ReduceOthers.scala 39:69]
    _T_493[3] <= _T_2130 @[ReduceOthers.scala 39:69]
    _T_493[2] <= _T_2130 @[ReduceOthers.scala 39:69]
    _T_493[1] <= _T_2130 @[ReduceOthers.scala 39:69]
    node _T_2133 = eq(_T_377, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2134 = or(_T_2128, _T_2133) @[RegisterRouter.scala 62:24]
    wire _T_2136 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2136 is invalid @[RegisterRouter.scala 62:24]
    node _T_2137 = and(_T_2086, _T_2025) @[RegisterRouter.scala 62:24]
    node _T_2138 = and(_T_2137, _T_422) @[RegisterRouter.scala 62:24]
    _T_2136 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[12] <= _T_2138 @[ReduceOthers.scala 39:69]
    node _T_2141 = eq(_T_422, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2142 = or(_T_2136, _T_2141) @[RegisterRouter.scala 62:24]
    wire _T_2144 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2144 is invalid @[RegisterRouter.scala 62:24]
    node _T_2145 = and(_T_2086, _T_2026) @[RegisterRouter.scala 62:24]
    node _T_2146 = and(_T_2145, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2144 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2149 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2150 = or(_T_2144, _T_2149) @[RegisterRouter.scala 62:24]
    wire _T_2152 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2152 is invalid @[RegisterRouter.scala 62:24]
    node _T_2153 = and(_T_2086, _T_2027) @[RegisterRouter.scala 62:24]
    node _T_2154 = and(_T_2153, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2152 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2157 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2158 = or(_T_2152, _T_2157) @[RegisterRouter.scala 62:24]
    wire _T_2160 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2160 is invalid @[RegisterRouter.scala 62:24]
    node _T_2161 = and(_T_2086, _T_2028) @[RegisterRouter.scala 62:24]
    node _T_2162 = and(_T_2161, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2160 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2165 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2166 = or(_T_2160, _T_2165) @[RegisterRouter.scala 62:24]
    wire _T_2168 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2168 is invalid @[RegisterRouter.scala 62:24]
    node _T_2169 = and(_T_2086, _T_2029) @[RegisterRouter.scala 62:24]
    node _T_2170 = and(_T_2169, _T_386) @[RegisterRouter.scala 62:24]
    _T_2168 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[6] <= _T_2170 @[ReduceOthers.scala 39:69]
    _T_493[5] <= _T_2170 @[ReduceOthers.scala 39:69]
    node _T_2173 = eq(_T_386, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2174 = or(_T_2168, _T_2173) @[RegisterRouter.scala 62:24]
    wire _T_2176 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2176 is invalid @[RegisterRouter.scala 62:24]
    node _T_2177 = and(_T_2086, _T_2030) @[RegisterRouter.scala 62:24]
    node _T_2178 = and(_T_2177, _T_467) @[RegisterRouter.scala 62:24]
    _T_2176 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[24] <= _T_2178 @[ReduceOthers.scala 39:69]
    _T_493[23] <= _T_2178 @[ReduceOthers.scala 39:69]
    node _T_2181 = eq(_T_467, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2182 = or(_T_2176, _T_2181) @[RegisterRouter.scala 62:24]
    wire _T_2184 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2184 is invalid @[RegisterRouter.scala 62:24]
    node _T_2185 = and(_T_2086, _T_2031) @[RegisterRouter.scala 62:24]
    node _T_2186 = and(_T_2185, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2184 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2189 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2190 = or(_T_2184, _T_2189) @[RegisterRouter.scala 62:24]
    wire _T_2192 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2192 is invalid @[RegisterRouter.scala 62:24]
    node _T_2193 = and(_T_2086, _T_2032) @[RegisterRouter.scala 62:24]
    node _T_2194 = and(_T_2193, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2192 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2197 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2198 = or(_T_2192, _T_2197) @[RegisterRouter.scala 62:24]
    wire _T_2200 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2200 is invalid @[RegisterRouter.scala 62:24]
    node _T_2201 = and(_T_2086, _T_2033) @[RegisterRouter.scala 62:24]
    node _T_2202 = and(_T_2201, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2200 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2205 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2206 = or(_T_2200, _T_2205) @[RegisterRouter.scala 62:24]
    wire _T_2208 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2208 is invalid @[RegisterRouter.scala 62:24]
    node _T_2209 = and(_T_2086, _T_2034) @[RegisterRouter.scala 62:24]
    node _T_2210 = and(_T_2209, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2208 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2213 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2214 = or(_T_2208, _T_2213) @[RegisterRouter.scala 62:24]
    wire _T_2216 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2216 is invalid @[RegisterRouter.scala 62:24]
    node _T_2217 = and(_T_2086, _T_2035) @[RegisterRouter.scala 62:24]
    node _T_2218 = and(_T_2217, _T_458) @[RegisterRouter.scala 62:24]
    _T_2216 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[22] <= _T_2218 @[ReduceOthers.scala 39:69]
    _T_493[21] <= _T_2218 @[ReduceOthers.scala 39:69]
    _T_493[20] <= _T_2218 @[ReduceOthers.scala 39:69]
    _T_493[19] <= _T_2218 @[ReduceOthers.scala 39:69]
    node _T_2221 = eq(_T_458, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2222 = or(_T_2216, _T_2221) @[RegisterRouter.scala 62:24]
    wire _T_2224 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2224 is invalid @[RegisterRouter.scala 62:24]
    node _T_2225 = and(_T_2086, _T_2036) @[RegisterRouter.scala 62:24]
    node _T_2226 = and(_T_2225, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2224 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2229 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2230 = or(_T_2224, _T_2229) @[RegisterRouter.scala 62:24]
    wire _T_2232 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2232 is invalid @[RegisterRouter.scala 62:24]
    node _T_2233 = and(_T_2086, _T_2037) @[RegisterRouter.scala 62:24]
    node _T_2234 = and(_T_2233, _T_449) @[RegisterRouter.scala 62:24]
    _T_2232 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[18] <= _T_2234 @[ReduceOthers.scala 39:69]
    _T_493[17] <= _T_2234 @[ReduceOthers.scala 39:69]
    _T_493[16] <= _T_2234 @[ReduceOthers.scala 39:69]
    node _T_2237 = eq(_T_449, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2238 = or(_T_2232, _T_2237) @[RegisterRouter.scala 62:24]
    wire _T_2240 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2240 is invalid @[RegisterRouter.scala 62:24]
    node _T_2241 = and(_T_2086, _T_2038) @[RegisterRouter.scala 62:24]
    node _T_2242 = and(_T_2241, _T_476) @[RegisterRouter.scala 62:24]
    _T_2240 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[27] <= _T_2242 @[ReduceOthers.scala 39:69]
    _T_493[26] <= _T_2242 @[ReduceOthers.scala 39:69]
    _T_493[25] <= _T_2242 @[ReduceOthers.scala 39:69]
    node _T_2245 = eq(_T_476, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2246 = or(_T_2240, _T_2245) @[RegisterRouter.scala 62:24]
    wire _T_2248 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2248 is invalid @[RegisterRouter.scala 62:24]
    node _T_2249 = and(_T_2086, _T_2039) @[RegisterRouter.scala 62:24]
    node _T_2250 = and(_T_2249, _T_395) @[RegisterRouter.scala 62:24]
    _T_2248 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[7] <= _T_2250 @[ReduceOthers.scala 39:69]
    node _T_2253 = eq(_T_395, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2254 = or(_T_2248, _T_2253) @[RegisterRouter.scala 62:24]
    wire _T_2256 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2256 is invalid @[RegisterRouter.scala 62:24]
    node _T_2257 = and(_T_2086, _T_2040) @[RegisterRouter.scala 62:24]
    node _T_2258 = and(_T_2257, _T_440) @[RegisterRouter.scala 62:24]
    _T_2256 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[15] <= _T_2258 @[ReduceOthers.scala 39:69]
    node _T_2261 = eq(_T_440, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2262 = or(_T_2256, _T_2261) @[RegisterRouter.scala 62:24]
    wire _T_2264 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2264 is invalid @[RegisterRouter.scala 62:24]
    node _T_2265 = and(_T_2086, _T_2041) @[RegisterRouter.scala 62:24]
    node _T_2266 = and(_T_2265, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2264 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2269 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2270 = or(_T_2264, _T_2269) @[RegisterRouter.scala 62:24]
    wire _T_2272 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2272 is invalid @[RegisterRouter.scala 62:24]
    node _T_2273 = and(_T_2086, _T_2042) @[RegisterRouter.scala 62:24]
    node _T_2274 = and(_T_2273, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2272 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2277 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2278 = or(_T_2272, _T_2277) @[RegisterRouter.scala 62:24]
    wire _T_2280 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2280 is invalid @[RegisterRouter.scala 62:24]
    node _T_2281 = and(_T_2086, _T_2043) @[RegisterRouter.scala 62:24]
    node _T_2282 = and(_T_2281, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2280 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2285 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2286 = or(_T_2280, _T_2285) @[RegisterRouter.scala 62:24]
    wire _T_2288 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2288 is invalid @[RegisterRouter.scala 62:24]
    node _T_2289 = and(_T_2086, _T_2044) @[RegisterRouter.scala 62:24]
    node _T_2290 = and(_T_2289, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2288 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2293 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2294 = or(_T_2288, _T_2293) @[RegisterRouter.scala 62:24]
    wire _T_2296 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2296 is invalid @[RegisterRouter.scala 62:24]
    node _T_2297 = and(_T_2086, _T_2045) @[RegisterRouter.scala 62:24]
    node _T_2298 = and(_T_2297, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2296 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2301 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2302 = or(_T_2296, _T_2301) @[RegisterRouter.scala 62:24]
    wire _T_2304 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2304 is invalid @[RegisterRouter.scala 62:24]
    node _T_2305 = and(_T_2086, _T_2046) @[RegisterRouter.scala 62:24]
    node _T_2306 = and(_T_2305, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2304 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2309 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2310 = or(_T_2304, _T_2309) @[RegisterRouter.scala 62:24]
    wire _T_2312 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2312 is invalid @[RegisterRouter.scala 62:24]
    node _T_2313 = and(_T_2086, _T_2047) @[RegisterRouter.scala 62:24]
    node _T_2314 = and(_T_2313, _T_431) @[RegisterRouter.scala 62:24]
    _T_2312 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[14] <= _T_2314 @[ReduceOthers.scala 39:69]
    _T_493[13] <= _T_2314 @[ReduceOthers.scala 39:69]
    node _T_2317 = eq(_T_431, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2318 = or(_T_2312, _T_2317) @[RegisterRouter.scala 62:24]
    wire _T_2320 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2320 is invalid @[RegisterRouter.scala 62:24]
    node _T_2321 = and(_T_2086, _T_2048) @[RegisterRouter.scala 62:24]
    node _T_2322 = and(_T_2321, _T_404) @[RegisterRouter.scala 62:24]
    _T_2320 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_493[9] <= _T_2322 @[ReduceOthers.scala 39:69]
    _T_493[8] <= _T_2322 @[ReduceOthers.scala 39:69]
    node _T_2325 = eq(_T_404, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2326 = or(_T_2320, _T_2325) @[RegisterRouter.scala 62:24]
    wire _T_2328 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2328 is invalid @[RegisterRouter.scala 62:24]
    node _T_2329 = and(_T_2086, _T_2049) @[RegisterRouter.scala 62:24]
    node _T_2330 = and(_T_2329, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2328 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2333 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2334 = or(_T_2328, _T_2333) @[RegisterRouter.scala 62:24]
    wire _T_2336 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2336 is invalid @[RegisterRouter.scala 62:24]
    node _T_2337 = and(_T_2086, _T_2050) @[RegisterRouter.scala 62:24]
    node _T_2338 = and(_T_2337, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2336 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2341 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2342 = or(_T_2336, _T_2341) @[RegisterRouter.scala 62:24]
    wire _T_2345 : UInt<1>[32] @[RegisterRouter.scala 62:24]
    _T_2345 is invalid @[RegisterRouter.scala 62:24]
    _T_2345[0] <= _T_2094 @[RegisterRouter.scala 62:24]
    _T_2345[1] <= _T_2102 @[RegisterRouter.scala 62:24]
    _T_2345[2] <= _T_2110 @[RegisterRouter.scala 62:24]
    _T_2345[3] <= _T_2118 @[RegisterRouter.scala 62:24]
    _T_2345[4] <= _T_2126 @[RegisterRouter.scala 62:24]
    _T_2345[5] <= _T_2134 @[RegisterRouter.scala 62:24]
    _T_2345[6] <= _T_2142 @[RegisterRouter.scala 62:24]
    _T_2345[7] <= _T_2150 @[RegisterRouter.scala 62:24]
    _T_2345[8] <= _T_2158 @[RegisterRouter.scala 62:24]
    _T_2345[9] <= _T_2166 @[RegisterRouter.scala 62:24]
    _T_2345[10] <= _T_2174 @[RegisterRouter.scala 62:24]
    _T_2345[11] <= _T_2182 @[RegisterRouter.scala 62:24]
    _T_2345[12] <= _T_2190 @[RegisterRouter.scala 62:24]
    _T_2345[13] <= _T_2198 @[RegisterRouter.scala 62:24]
    _T_2345[14] <= _T_2206 @[RegisterRouter.scala 62:24]
    _T_2345[15] <= _T_2214 @[RegisterRouter.scala 62:24]
    _T_2345[16] <= _T_2222 @[RegisterRouter.scala 62:24]
    _T_2345[17] <= _T_2230 @[RegisterRouter.scala 62:24]
    _T_2345[18] <= _T_2238 @[RegisterRouter.scala 62:24]
    _T_2345[19] <= _T_2246 @[RegisterRouter.scala 62:24]
    _T_2345[20] <= _T_2254 @[RegisterRouter.scala 62:24]
    _T_2345[21] <= _T_2262 @[RegisterRouter.scala 62:24]
    _T_2345[22] <= _T_2270 @[RegisterRouter.scala 62:24]
    _T_2345[23] <= _T_2278 @[RegisterRouter.scala 62:24]
    _T_2345[24] <= _T_2286 @[RegisterRouter.scala 62:24]
    _T_2345[25] <= _T_2294 @[RegisterRouter.scala 62:24]
    _T_2345[26] <= _T_2302 @[RegisterRouter.scala 62:24]
    _T_2345[27] <= _T_2310 @[RegisterRouter.scala 62:24]
    _T_2345[28] <= _T_2318 @[RegisterRouter.scala 62:24]
    _T_2345[29] <= _T_2326 @[RegisterRouter.scala 62:24]
    _T_2345[30] <= _T_2334 @[RegisterRouter.scala 62:24]
    _T_2345[31] <= _T_2342 @[RegisterRouter.scala 62:24]
    node _T_2380 = and(_T_277.valid, _T_295.ready) @[RegisterRouter.scala 62:24]
    node _T_2382 = eq(_T_295.bits.read, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2383 = and(_T_2380, _T_2382) @[RegisterRouter.scala 62:24]
    wire _T_2385 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2385 is invalid @[RegisterRouter.scala 62:24]
    node _T_2386 = and(_T_2383, _T_2019) @[RegisterRouter.scala 62:24]
    node _T_2387 = and(_T_2386, _T_368) @[RegisterRouter.scala 62:24]
    _T_2385 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[0] <= _T_2387 @[ReduceOthers.scala 39:69]
    node _T_2390 = eq(_T_368, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2391 = or(_T_2385, _T_2390) @[RegisterRouter.scala 62:24]
    wire _T_2393 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2393 is invalid @[RegisterRouter.scala 62:24]
    node _T_2394 = and(_T_2383, _T_2020) @[RegisterRouter.scala 62:24]
    node _T_2395 = and(_T_2394, _T_413) @[RegisterRouter.scala 62:24]
    _T_2393 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[11] <= _T_2395 @[ReduceOthers.scala 39:69]
    _T_528[10] <= _T_2395 @[ReduceOthers.scala 39:69]
    node _T_2398 = eq(_T_413, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2399 = or(_T_2393, _T_2398) @[RegisterRouter.scala 62:24]
    wire _T_2401 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2401 is invalid @[RegisterRouter.scala 62:24]
    node _T_2402 = and(_T_2383, _T_2021) @[RegisterRouter.scala 62:24]
    node _T_2403 = and(_T_2402, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2401 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2406 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2407 = or(_T_2401, _T_2406) @[RegisterRouter.scala 62:24]
    wire _T_2409 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2409 is invalid @[RegisterRouter.scala 62:24]
    node _T_2410 = and(_T_2383, _T_2022) @[RegisterRouter.scala 62:24]
    node _T_2411 = and(_T_2410, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2409 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2414 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2415 = or(_T_2409, _T_2414) @[RegisterRouter.scala 62:24]
    wire _T_2417 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2417 is invalid @[RegisterRouter.scala 62:24]
    node _T_2418 = and(_T_2383, _T_2023) @[RegisterRouter.scala 62:24]
    node _T_2419 = and(_T_2418, _T_485) @[RegisterRouter.scala 62:24]
    _T_2417 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[28] <= _T_2419 @[ReduceOthers.scala 39:69]
    node _T_2422 = eq(_T_485, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2423 = or(_T_2417, _T_2422) @[RegisterRouter.scala 62:24]
    wire _T_2425 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2425 is invalid @[RegisterRouter.scala 62:24]
    node _T_2426 = and(_T_2383, _T_2024) @[RegisterRouter.scala 62:24]
    node _T_2427 = and(_T_2426, _T_377) @[RegisterRouter.scala 62:24]
    _T_2425 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[4] <= _T_2427 @[ReduceOthers.scala 39:69]
    _T_528[3] <= _T_2427 @[ReduceOthers.scala 39:69]
    _T_528[2] <= _T_2427 @[ReduceOthers.scala 39:69]
    _T_528[1] <= _T_2427 @[ReduceOthers.scala 39:69]
    node _T_2430 = eq(_T_377, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2431 = or(_T_2425, _T_2430) @[RegisterRouter.scala 62:24]
    wire _T_2433 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2433 is invalid @[RegisterRouter.scala 62:24]
    node _T_2434 = and(_T_2383, _T_2025) @[RegisterRouter.scala 62:24]
    node _T_2435 = and(_T_2434, _T_422) @[RegisterRouter.scala 62:24]
    _T_2433 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[12] <= _T_2435 @[ReduceOthers.scala 39:69]
    node _T_2438 = eq(_T_422, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2439 = or(_T_2433, _T_2438) @[RegisterRouter.scala 62:24]
    wire _T_2441 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2441 is invalid @[RegisterRouter.scala 62:24]
    node _T_2442 = and(_T_2383, _T_2026) @[RegisterRouter.scala 62:24]
    node _T_2443 = and(_T_2442, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2441 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2446 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2447 = or(_T_2441, _T_2446) @[RegisterRouter.scala 62:24]
    wire _T_2449 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2449 is invalid @[RegisterRouter.scala 62:24]
    node _T_2450 = and(_T_2383, _T_2027) @[RegisterRouter.scala 62:24]
    node _T_2451 = and(_T_2450, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2449 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2454 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2455 = or(_T_2449, _T_2454) @[RegisterRouter.scala 62:24]
    wire _T_2457 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2457 is invalid @[RegisterRouter.scala 62:24]
    node _T_2458 = and(_T_2383, _T_2028) @[RegisterRouter.scala 62:24]
    node _T_2459 = and(_T_2458, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2457 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2462 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2463 = or(_T_2457, _T_2462) @[RegisterRouter.scala 62:24]
    wire _T_2465 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2465 is invalid @[RegisterRouter.scala 62:24]
    node _T_2466 = and(_T_2383, _T_2029) @[RegisterRouter.scala 62:24]
    node _T_2467 = and(_T_2466, _T_386) @[RegisterRouter.scala 62:24]
    _T_2465 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[6] <= _T_2467 @[ReduceOthers.scala 39:69]
    _T_528[5] <= _T_2467 @[ReduceOthers.scala 39:69]
    node _T_2470 = eq(_T_386, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2471 = or(_T_2465, _T_2470) @[RegisterRouter.scala 62:24]
    wire _T_2473 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2473 is invalid @[RegisterRouter.scala 62:24]
    node _T_2474 = and(_T_2383, _T_2030) @[RegisterRouter.scala 62:24]
    node _T_2475 = and(_T_2474, _T_467) @[RegisterRouter.scala 62:24]
    _T_2473 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[24] <= _T_2475 @[ReduceOthers.scala 39:69]
    _T_528[23] <= _T_2475 @[ReduceOthers.scala 39:69]
    node _T_2478 = eq(_T_467, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2479 = or(_T_2473, _T_2478) @[RegisterRouter.scala 62:24]
    wire _T_2481 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2481 is invalid @[RegisterRouter.scala 62:24]
    node _T_2482 = and(_T_2383, _T_2031) @[RegisterRouter.scala 62:24]
    node _T_2483 = and(_T_2482, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2481 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2486 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2487 = or(_T_2481, _T_2486) @[RegisterRouter.scala 62:24]
    wire _T_2489 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2489 is invalid @[RegisterRouter.scala 62:24]
    node _T_2490 = and(_T_2383, _T_2032) @[RegisterRouter.scala 62:24]
    node _T_2491 = and(_T_2490, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2489 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2494 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2495 = or(_T_2489, _T_2494) @[RegisterRouter.scala 62:24]
    wire _T_2497 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2497 is invalid @[RegisterRouter.scala 62:24]
    node _T_2498 = and(_T_2383, _T_2033) @[RegisterRouter.scala 62:24]
    node _T_2499 = and(_T_2498, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2497 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2502 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2503 = or(_T_2497, _T_2502) @[RegisterRouter.scala 62:24]
    wire _T_2505 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2505 is invalid @[RegisterRouter.scala 62:24]
    node _T_2506 = and(_T_2383, _T_2034) @[RegisterRouter.scala 62:24]
    node _T_2507 = and(_T_2506, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2505 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2510 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2511 = or(_T_2505, _T_2510) @[RegisterRouter.scala 62:24]
    wire _T_2513 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2513 is invalid @[RegisterRouter.scala 62:24]
    node _T_2514 = and(_T_2383, _T_2035) @[RegisterRouter.scala 62:24]
    node _T_2515 = and(_T_2514, _T_458) @[RegisterRouter.scala 62:24]
    _T_2513 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[22] <= _T_2515 @[ReduceOthers.scala 39:69]
    _T_528[21] <= _T_2515 @[ReduceOthers.scala 39:69]
    _T_528[20] <= _T_2515 @[ReduceOthers.scala 39:69]
    _T_528[19] <= _T_2515 @[ReduceOthers.scala 39:69]
    node _T_2518 = eq(_T_458, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2519 = or(_T_2513, _T_2518) @[RegisterRouter.scala 62:24]
    wire _T_2521 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2521 is invalid @[RegisterRouter.scala 62:24]
    node _T_2522 = and(_T_2383, _T_2036) @[RegisterRouter.scala 62:24]
    node _T_2523 = and(_T_2522, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2521 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2526 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2527 = or(_T_2521, _T_2526) @[RegisterRouter.scala 62:24]
    wire _T_2529 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2529 is invalid @[RegisterRouter.scala 62:24]
    node _T_2530 = and(_T_2383, _T_2037) @[RegisterRouter.scala 62:24]
    node _T_2531 = and(_T_2530, _T_449) @[RegisterRouter.scala 62:24]
    _T_2529 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[18] <= _T_2531 @[ReduceOthers.scala 39:69]
    _T_528[17] <= _T_2531 @[ReduceOthers.scala 39:69]
    _T_528[16] <= _T_2531 @[ReduceOthers.scala 39:69]
    node _T_2534 = eq(_T_449, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2535 = or(_T_2529, _T_2534) @[RegisterRouter.scala 62:24]
    wire _T_2537 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2537 is invalid @[RegisterRouter.scala 62:24]
    node _T_2538 = and(_T_2383, _T_2038) @[RegisterRouter.scala 62:24]
    node _T_2539 = and(_T_2538, _T_476) @[RegisterRouter.scala 62:24]
    _T_2537 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[27] <= _T_2539 @[ReduceOthers.scala 39:69]
    _T_528[26] <= _T_2539 @[ReduceOthers.scala 39:69]
    _T_528[25] <= _T_2539 @[ReduceOthers.scala 39:69]
    node _T_2542 = eq(_T_476, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2543 = or(_T_2537, _T_2542) @[RegisterRouter.scala 62:24]
    wire _T_2545 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2545 is invalid @[RegisterRouter.scala 62:24]
    node _T_2546 = and(_T_2383, _T_2039) @[RegisterRouter.scala 62:24]
    node _T_2547 = and(_T_2546, _T_395) @[RegisterRouter.scala 62:24]
    _T_2545 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[7] <= _T_2547 @[ReduceOthers.scala 39:69]
    node _T_2550 = eq(_T_395, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2551 = or(_T_2545, _T_2550) @[RegisterRouter.scala 62:24]
    wire _T_2553 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2553 is invalid @[RegisterRouter.scala 62:24]
    node _T_2554 = and(_T_2383, _T_2040) @[RegisterRouter.scala 62:24]
    node _T_2555 = and(_T_2554, _T_440) @[RegisterRouter.scala 62:24]
    _T_2553 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[15] <= _T_2555 @[ReduceOthers.scala 39:69]
    node _T_2558 = eq(_T_440, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2559 = or(_T_2553, _T_2558) @[RegisterRouter.scala 62:24]
    wire _T_2561 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2561 is invalid @[RegisterRouter.scala 62:24]
    node _T_2562 = and(_T_2383, _T_2041) @[RegisterRouter.scala 62:24]
    node _T_2563 = and(_T_2562, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2561 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2566 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2567 = or(_T_2561, _T_2566) @[RegisterRouter.scala 62:24]
    wire _T_2569 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2569 is invalid @[RegisterRouter.scala 62:24]
    node _T_2570 = and(_T_2383, _T_2042) @[RegisterRouter.scala 62:24]
    node _T_2571 = and(_T_2570, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2569 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2574 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2575 = or(_T_2569, _T_2574) @[RegisterRouter.scala 62:24]
    wire _T_2577 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2577 is invalid @[RegisterRouter.scala 62:24]
    node _T_2578 = and(_T_2383, _T_2043) @[RegisterRouter.scala 62:24]
    node _T_2579 = and(_T_2578, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2577 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2582 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2583 = or(_T_2577, _T_2582) @[RegisterRouter.scala 62:24]
    wire _T_2585 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2585 is invalid @[RegisterRouter.scala 62:24]
    node _T_2586 = and(_T_2383, _T_2044) @[RegisterRouter.scala 62:24]
    node _T_2587 = and(_T_2586, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2585 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2590 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2591 = or(_T_2585, _T_2590) @[RegisterRouter.scala 62:24]
    wire _T_2593 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2593 is invalid @[RegisterRouter.scala 62:24]
    node _T_2594 = and(_T_2383, _T_2045) @[RegisterRouter.scala 62:24]
    node _T_2595 = and(_T_2594, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2593 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2598 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2599 = or(_T_2593, _T_2598) @[RegisterRouter.scala 62:24]
    wire _T_2601 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2601 is invalid @[RegisterRouter.scala 62:24]
    node _T_2602 = and(_T_2383, _T_2046) @[RegisterRouter.scala 62:24]
    node _T_2603 = and(_T_2602, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2601 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2606 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2607 = or(_T_2601, _T_2606) @[RegisterRouter.scala 62:24]
    wire _T_2609 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2609 is invalid @[RegisterRouter.scala 62:24]
    node _T_2610 = and(_T_2383, _T_2047) @[RegisterRouter.scala 62:24]
    node _T_2611 = and(_T_2610, _T_431) @[RegisterRouter.scala 62:24]
    _T_2609 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[14] <= _T_2611 @[ReduceOthers.scala 39:69]
    _T_528[13] <= _T_2611 @[ReduceOthers.scala 39:69]
    node _T_2614 = eq(_T_431, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2615 = or(_T_2609, _T_2614) @[RegisterRouter.scala 62:24]
    wire _T_2617 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2617 is invalid @[RegisterRouter.scala 62:24]
    node _T_2618 = and(_T_2383, _T_2048) @[RegisterRouter.scala 62:24]
    node _T_2619 = and(_T_2618, _T_404) @[RegisterRouter.scala 62:24]
    _T_2617 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_528[9] <= _T_2619 @[ReduceOthers.scala 39:69]
    _T_528[8] <= _T_2619 @[ReduceOthers.scala 39:69]
    node _T_2622 = eq(_T_404, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2623 = or(_T_2617, _T_2622) @[RegisterRouter.scala 62:24]
    wire _T_2625 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2625 is invalid @[RegisterRouter.scala 62:24]
    node _T_2626 = and(_T_2383, _T_2049) @[RegisterRouter.scala 62:24]
    node _T_2627 = and(_T_2626, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2625 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2630 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2631 = or(_T_2625, _T_2630) @[RegisterRouter.scala 62:24]
    wire _T_2633 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2633 is invalid @[RegisterRouter.scala 62:24]
    node _T_2634 = and(_T_2383, _T_2050) @[RegisterRouter.scala 62:24]
    node _T_2635 = and(_T_2634, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2633 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2638 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2639 = or(_T_2633, _T_2638) @[RegisterRouter.scala 62:24]
    wire _T_2642 : UInt<1>[32] @[RegisterRouter.scala 62:24]
    _T_2642 is invalid @[RegisterRouter.scala 62:24]
    _T_2642[0] <= _T_2391 @[RegisterRouter.scala 62:24]
    _T_2642[1] <= _T_2399 @[RegisterRouter.scala 62:24]
    _T_2642[2] <= _T_2407 @[RegisterRouter.scala 62:24]
    _T_2642[3] <= _T_2415 @[RegisterRouter.scala 62:24]
    _T_2642[4] <= _T_2423 @[RegisterRouter.scala 62:24]
    _T_2642[5] <= _T_2431 @[RegisterRouter.scala 62:24]
    _T_2642[6] <= _T_2439 @[RegisterRouter.scala 62:24]
    _T_2642[7] <= _T_2447 @[RegisterRouter.scala 62:24]
    _T_2642[8] <= _T_2455 @[RegisterRouter.scala 62:24]
    _T_2642[9] <= _T_2463 @[RegisterRouter.scala 62:24]
    _T_2642[10] <= _T_2471 @[RegisterRouter.scala 62:24]
    _T_2642[11] <= _T_2479 @[RegisterRouter.scala 62:24]
    _T_2642[12] <= _T_2487 @[RegisterRouter.scala 62:24]
    _T_2642[13] <= _T_2495 @[RegisterRouter.scala 62:24]
    _T_2642[14] <= _T_2503 @[RegisterRouter.scala 62:24]
    _T_2642[15] <= _T_2511 @[RegisterRouter.scala 62:24]
    _T_2642[16] <= _T_2519 @[RegisterRouter.scala 62:24]
    _T_2642[17] <= _T_2527 @[RegisterRouter.scala 62:24]
    _T_2642[18] <= _T_2535 @[RegisterRouter.scala 62:24]
    _T_2642[19] <= _T_2543 @[RegisterRouter.scala 62:24]
    _T_2642[20] <= _T_2551 @[RegisterRouter.scala 62:24]
    _T_2642[21] <= _T_2559 @[RegisterRouter.scala 62:24]
    _T_2642[22] <= _T_2567 @[RegisterRouter.scala 62:24]
    _T_2642[23] <= _T_2575 @[RegisterRouter.scala 62:24]
    _T_2642[24] <= _T_2583 @[RegisterRouter.scala 62:24]
    _T_2642[25] <= _T_2591 @[RegisterRouter.scala 62:24]
    _T_2642[26] <= _T_2599 @[RegisterRouter.scala 62:24]
    _T_2642[27] <= _T_2607 @[RegisterRouter.scala 62:24]
    _T_2642[28] <= _T_2615 @[RegisterRouter.scala 62:24]
    _T_2642[29] <= _T_2623 @[RegisterRouter.scala 62:24]
    _T_2642[30] <= _T_2631 @[RegisterRouter.scala 62:24]
    _T_2642[31] <= _T_2639 @[RegisterRouter.scala 62:24]
    node _T_2677 = and(_T_295.valid, _T_288.ready) @[RegisterRouter.scala 62:24]
    node _T_2678 = and(_T_2677, _T_295.bits.read) @[RegisterRouter.scala 62:24]
    wire _T_2680 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2680 is invalid @[RegisterRouter.scala 62:24]
    node _T_2681 = and(_T_2678, _T_2053) @[RegisterRouter.scala 62:24]
    node _T_2682 = and(_T_2681, _T_372) @[RegisterRouter.scala 62:24]
    _T_2680 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[0] <= _T_2682 @[ReduceOthers.scala 39:69]
    node _T_2685 = eq(_T_372, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2686 = or(_T_2680, _T_2685) @[RegisterRouter.scala 62:24]
    wire _T_2688 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2688 is invalid @[RegisterRouter.scala 62:24]
    node _T_2689 = and(_T_2678, _T_2054) @[RegisterRouter.scala 62:24]
    node _T_2690 = and(_T_2689, _T_417) @[RegisterRouter.scala 62:24]
    _T_2688 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[11] <= _T_2690 @[ReduceOthers.scala 39:69]
    _T_563[10] <= _T_2690 @[ReduceOthers.scala 39:69]
    node _T_2693 = eq(_T_417, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2694 = or(_T_2688, _T_2693) @[RegisterRouter.scala 62:24]
    wire _T_2696 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2696 is invalid @[RegisterRouter.scala 62:24]
    node _T_2697 = and(_T_2678, _T_2055) @[RegisterRouter.scala 62:24]
    node _T_2698 = and(_T_2697, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2696 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2701 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2702 = or(_T_2696, _T_2701) @[RegisterRouter.scala 62:24]
    wire _T_2704 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2704 is invalid @[RegisterRouter.scala 62:24]
    node _T_2705 = and(_T_2678, _T_2056) @[RegisterRouter.scala 62:24]
    node _T_2706 = and(_T_2705, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2704 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2709 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2710 = or(_T_2704, _T_2709) @[RegisterRouter.scala 62:24]
    wire _T_2712 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2712 is invalid @[RegisterRouter.scala 62:24]
    node _T_2713 = and(_T_2678, _T_2057) @[RegisterRouter.scala 62:24]
    node _T_2714 = and(_T_2713, _T_489) @[RegisterRouter.scala 62:24]
    _T_2712 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[28] <= _T_2714 @[ReduceOthers.scala 39:69]
    node _T_2717 = eq(_T_489, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2718 = or(_T_2712, _T_2717) @[RegisterRouter.scala 62:24]
    wire _T_2720 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2720 is invalid @[RegisterRouter.scala 62:24]
    node _T_2721 = and(_T_2678, _T_2058) @[RegisterRouter.scala 62:24]
    node _T_2722 = and(_T_2721, _T_381) @[RegisterRouter.scala 62:24]
    _T_2720 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[4] <= _T_2722 @[ReduceOthers.scala 39:69]
    _T_563[3] <= _T_2722 @[ReduceOthers.scala 39:69]
    _T_563[2] <= _T_2722 @[ReduceOthers.scala 39:69]
    _T_563[1] <= _T_2722 @[ReduceOthers.scala 39:69]
    node _T_2725 = eq(_T_381, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2726 = or(_T_2720, _T_2725) @[RegisterRouter.scala 62:24]
    wire _T_2728 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2728 is invalid @[RegisterRouter.scala 62:24]
    node _T_2729 = and(_T_2678, _T_2059) @[RegisterRouter.scala 62:24]
    node _T_2730 = and(_T_2729, _T_426) @[RegisterRouter.scala 62:24]
    _T_2728 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[12] <= _T_2730 @[ReduceOthers.scala 39:69]
    node _T_2733 = eq(_T_426, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2734 = or(_T_2728, _T_2733) @[RegisterRouter.scala 62:24]
    wire _T_2736 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2736 is invalid @[RegisterRouter.scala 62:24]
    node _T_2737 = and(_T_2678, _T_2060) @[RegisterRouter.scala 62:24]
    node _T_2738 = and(_T_2737, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2736 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2741 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2742 = or(_T_2736, _T_2741) @[RegisterRouter.scala 62:24]
    wire _T_2744 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2744 is invalid @[RegisterRouter.scala 62:24]
    node _T_2745 = and(_T_2678, _T_2061) @[RegisterRouter.scala 62:24]
    node _T_2746 = and(_T_2745, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2744 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2749 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2750 = or(_T_2744, _T_2749) @[RegisterRouter.scala 62:24]
    wire _T_2752 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2752 is invalid @[RegisterRouter.scala 62:24]
    node _T_2753 = and(_T_2678, _T_2062) @[RegisterRouter.scala 62:24]
    node _T_2754 = and(_T_2753, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2752 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2757 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2758 = or(_T_2752, _T_2757) @[RegisterRouter.scala 62:24]
    wire _T_2760 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2760 is invalid @[RegisterRouter.scala 62:24]
    node _T_2761 = and(_T_2678, _T_2063) @[RegisterRouter.scala 62:24]
    node _T_2762 = and(_T_2761, _T_390) @[RegisterRouter.scala 62:24]
    _T_2760 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[6] <= _T_2762 @[ReduceOthers.scala 39:69]
    _T_563[5] <= _T_2762 @[ReduceOthers.scala 39:69]
    node _T_2765 = eq(_T_390, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2766 = or(_T_2760, _T_2765) @[RegisterRouter.scala 62:24]
    wire _T_2768 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2768 is invalid @[RegisterRouter.scala 62:24]
    node _T_2769 = and(_T_2678, _T_2064) @[RegisterRouter.scala 62:24]
    node _T_2770 = and(_T_2769, _T_471) @[RegisterRouter.scala 62:24]
    _T_2768 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[24] <= _T_2770 @[ReduceOthers.scala 39:69]
    _T_563[23] <= _T_2770 @[ReduceOthers.scala 39:69]
    node _T_2773 = eq(_T_471, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2774 = or(_T_2768, _T_2773) @[RegisterRouter.scala 62:24]
    wire _T_2776 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2776 is invalid @[RegisterRouter.scala 62:24]
    node _T_2777 = and(_T_2678, _T_2065) @[RegisterRouter.scala 62:24]
    node _T_2778 = and(_T_2777, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2776 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2781 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2782 = or(_T_2776, _T_2781) @[RegisterRouter.scala 62:24]
    wire _T_2784 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2784 is invalid @[RegisterRouter.scala 62:24]
    node _T_2785 = and(_T_2678, _T_2066) @[RegisterRouter.scala 62:24]
    node _T_2786 = and(_T_2785, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2784 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2789 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2790 = or(_T_2784, _T_2789) @[RegisterRouter.scala 62:24]
    wire _T_2792 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2792 is invalid @[RegisterRouter.scala 62:24]
    node _T_2793 = and(_T_2678, _T_2067) @[RegisterRouter.scala 62:24]
    node _T_2794 = and(_T_2793, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2792 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2797 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2798 = or(_T_2792, _T_2797) @[RegisterRouter.scala 62:24]
    wire _T_2800 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2800 is invalid @[RegisterRouter.scala 62:24]
    node _T_2801 = and(_T_2678, _T_2068) @[RegisterRouter.scala 62:24]
    node _T_2802 = and(_T_2801, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2800 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2805 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2806 = or(_T_2800, _T_2805) @[RegisterRouter.scala 62:24]
    wire _T_2808 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2808 is invalid @[RegisterRouter.scala 62:24]
    node _T_2809 = and(_T_2678, _T_2069) @[RegisterRouter.scala 62:24]
    node _T_2810 = and(_T_2809, _T_462) @[RegisterRouter.scala 62:24]
    _T_2808 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[22] <= _T_2810 @[ReduceOthers.scala 39:69]
    _T_563[21] <= _T_2810 @[ReduceOthers.scala 39:69]
    _T_563[20] <= _T_2810 @[ReduceOthers.scala 39:69]
    _T_563[19] <= _T_2810 @[ReduceOthers.scala 39:69]
    node _T_2813 = eq(_T_462, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2814 = or(_T_2808, _T_2813) @[RegisterRouter.scala 62:24]
    wire _T_2816 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2816 is invalid @[RegisterRouter.scala 62:24]
    node _T_2817 = and(_T_2678, _T_2070) @[RegisterRouter.scala 62:24]
    node _T_2818 = and(_T_2817, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2816 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2821 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2822 = or(_T_2816, _T_2821) @[RegisterRouter.scala 62:24]
    wire _T_2824 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2824 is invalid @[RegisterRouter.scala 62:24]
    node _T_2825 = and(_T_2678, _T_2071) @[RegisterRouter.scala 62:24]
    node _T_2826 = and(_T_2825, _T_453) @[RegisterRouter.scala 62:24]
    _T_2824 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[18] <= _T_2826 @[ReduceOthers.scala 39:69]
    _T_563[17] <= _T_2826 @[ReduceOthers.scala 39:69]
    _T_563[16] <= _T_2826 @[ReduceOthers.scala 39:69]
    node _T_2829 = eq(_T_453, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2830 = or(_T_2824, _T_2829) @[RegisterRouter.scala 62:24]
    wire _T_2832 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2832 is invalid @[RegisterRouter.scala 62:24]
    node _T_2833 = and(_T_2678, _T_2072) @[RegisterRouter.scala 62:24]
    node _T_2834 = and(_T_2833, _T_480) @[RegisterRouter.scala 62:24]
    _T_2832 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[27] <= _T_2834 @[ReduceOthers.scala 39:69]
    _T_563[26] <= _T_2834 @[ReduceOthers.scala 39:69]
    _T_563[25] <= _T_2834 @[ReduceOthers.scala 39:69]
    node _T_2837 = eq(_T_480, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2838 = or(_T_2832, _T_2837) @[RegisterRouter.scala 62:24]
    wire _T_2840 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2840 is invalid @[RegisterRouter.scala 62:24]
    node _T_2841 = and(_T_2678, _T_2073) @[RegisterRouter.scala 62:24]
    node _T_2842 = and(_T_2841, _T_399) @[RegisterRouter.scala 62:24]
    _T_2840 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[7] <= _T_2842 @[ReduceOthers.scala 39:69]
    node _T_2845 = eq(_T_399, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2846 = or(_T_2840, _T_2845) @[RegisterRouter.scala 62:24]
    wire _T_2848 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2848 is invalid @[RegisterRouter.scala 62:24]
    node _T_2849 = and(_T_2678, _T_2074) @[RegisterRouter.scala 62:24]
    node _T_2850 = and(_T_2849, _T_444) @[RegisterRouter.scala 62:24]
    _T_2848 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[15] <= _T_2850 @[ReduceOthers.scala 39:69]
    node _T_2853 = eq(_T_444, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2854 = or(_T_2848, _T_2853) @[RegisterRouter.scala 62:24]
    wire _T_2856 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2856 is invalid @[RegisterRouter.scala 62:24]
    node _T_2857 = and(_T_2678, _T_2075) @[RegisterRouter.scala 62:24]
    node _T_2858 = and(_T_2857, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2856 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2861 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2862 = or(_T_2856, _T_2861) @[RegisterRouter.scala 62:24]
    wire _T_2864 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2864 is invalid @[RegisterRouter.scala 62:24]
    node _T_2865 = and(_T_2678, _T_2076) @[RegisterRouter.scala 62:24]
    node _T_2866 = and(_T_2865, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2864 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2869 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2870 = or(_T_2864, _T_2869) @[RegisterRouter.scala 62:24]
    wire _T_2872 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2872 is invalid @[RegisterRouter.scala 62:24]
    node _T_2873 = and(_T_2678, _T_2077) @[RegisterRouter.scala 62:24]
    node _T_2874 = and(_T_2873, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2872 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2877 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2878 = or(_T_2872, _T_2877) @[RegisterRouter.scala 62:24]
    wire _T_2880 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2880 is invalid @[RegisterRouter.scala 62:24]
    node _T_2881 = and(_T_2678, _T_2078) @[RegisterRouter.scala 62:24]
    node _T_2882 = and(_T_2881, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2880 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2885 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2886 = or(_T_2880, _T_2885) @[RegisterRouter.scala 62:24]
    wire _T_2888 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2888 is invalid @[RegisterRouter.scala 62:24]
    node _T_2889 = and(_T_2678, _T_2079) @[RegisterRouter.scala 62:24]
    node _T_2890 = and(_T_2889, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2888 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2893 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2894 = or(_T_2888, _T_2893) @[RegisterRouter.scala 62:24]
    wire _T_2896 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2896 is invalid @[RegisterRouter.scala 62:24]
    node _T_2897 = and(_T_2678, _T_2080) @[RegisterRouter.scala 62:24]
    node _T_2898 = and(_T_2897, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2896 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2901 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2902 = or(_T_2896, _T_2901) @[RegisterRouter.scala 62:24]
    wire _T_2904 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2904 is invalid @[RegisterRouter.scala 62:24]
    node _T_2905 = and(_T_2678, _T_2081) @[RegisterRouter.scala 62:24]
    node _T_2906 = and(_T_2905, _T_435) @[RegisterRouter.scala 62:24]
    _T_2904 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[14] <= _T_2906 @[ReduceOthers.scala 39:69]
    _T_563[13] <= _T_2906 @[ReduceOthers.scala 39:69]
    node _T_2909 = eq(_T_435, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2910 = or(_T_2904, _T_2909) @[RegisterRouter.scala 62:24]
    wire _T_2912 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2912 is invalid @[RegisterRouter.scala 62:24]
    node _T_2913 = and(_T_2678, _T_2082) @[RegisterRouter.scala 62:24]
    node _T_2914 = and(_T_2913, _T_408) @[RegisterRouter.scala 62:24]
    _T_2912 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_563[9] <= _T_2914 @[ReduceOthers.scala 39:69]
    _T_563[8] <= _T_2914 @[ReduceOthers.scala 39:69]
    node _T_2917 = eq(_T_408, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2918 = or(_T_2912, _T_2917) @[RegisterRouter.scala 62:24]
    wire _T_2920 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2920 is invalid @[RegisterRouter.scala 62:24]
    node _T_2921 = and(_T_2678, _T_2083) @[RegisterRouter.scala 62:24]
    node _T_2922 = and(_T_2921, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2920 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2925 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2926 = or(_T_2920, _T_2925) @[RegisterRouter.scala 62:24]
    wire _T_2928 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2928 is invalid @[RegisterRouter.scala 62:24]
    node _T_2929 = and(_T_2678, _T_2084) @[RegisterRouter.scala 62:24]
    node _T_2930 = and(_T_2929, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2928 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2933 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2934 = or(_T_2928, _T_2933) @[RegisterRouter.scala 62:24]
    wire _T_2937 : UInt<1>[32] @[RegisterRouter.scala 62:24]
    _T_2937 is invalid @[RegisterRouter.scala 62:24]
    _T_2937[0] <= _T_2686 @[RegisterRouter.scala 62:24]
    _T_2937[1] <= _T_2694 @[RegisterRouter.scala 62:24]
    _T_2937[2] <= _T_2702 @[RegisterRouter.scala 62:24]
    _T_2937[3] <= _T_2710 @[RegisterRouter.scala 62:24]
    _T_2937[4] <= _T_2718 @[RegisterRouter.scala 62:24]
    _T_2937[5] <= _T_2726 @[RegisterRouter.scala 62:24]
    _T_2937[6] <= _T_2734 @[RegisterRouter.scala 62:24]
    _T_2937[7] <= _T_2742 @[RegisterRouter.scala 62:24]
    _T_2937[8] <= _T_2750 @[RegisterRouter.scala 62:24]
    _T_2937[9] <= _T_2758 @[RegisterRouter.scala 62:24]
    _T_2937[10] <= _T_2766 @[RegisterRouter.scala 62:24]
    _T_2937[11] <= _T_2774 @[RegisterRouter.scala 62:24]
    _T_2937[12] <= _T_2782 @[RegisterRouter.scala 62:24]
    _T_2937[13] <= _T_2790 @[RegisterRouter.scala 62:24]
    _T_2937[14] <= _T_2798 @[RegisterRouter.scala 62:24]
    _T_2937[15] <= _T_2806 @[RegisterRouter.scala 62:24]
    _T_2937[16] <= _T_2814 @[RegisterRouter.scala 62:24]
    _T_2937[17] <= _T_2822 @[RegisterRouter.scala 62:24]
    _T_2937[18] <= _T_2830 @[RegisterRouter.scala 62:24]
    _T_2937[19] <= _T_2838 @[RegisterRouter.scala 62:24]
    _T_2937[20] <= _T_2846 @[RegisterRouter.scala 62:24]
    _T_2937[21] <= _T_2854 @[RegisterRouter.scala 62:24]
    _T_2937[22] <= _T_2862 @[RegisterRouter.scala 62:24]
    _T_2937[23] <= _T_2870 @[RegisterRouter.scala 62:24]
    _T_2937[24] <= _T_2878 @[RegisterRouter.scala 62:24]
    _T_2937[25] <= _T_2886 @[RegisterRouter.scala 62:24]
    _T_2937[26] <= _T_2894 @[RegisterRouter.scala 62:24]
    _T_2937[27] <= _T_2902 @[RegisterRouter.scala 62:24]
    _T_2937[28] <= _T_2910 @[RegisterRouter.scala 62:24]
    _T_2937[29] <= _T_2918 @[RegisterRouter.scala 62:24]
    _T_2937[30] <= _T_2926 @[RegisterRouter.scala 62:24]
    _T_2937[31] <= _T_2934 @[RegisterRouter.scala 62:24]
    node _T_2972 = and(_T_295.valid, _T_288.ready) @[RegisterRouter.scala 62:24]
    node _T_2974 = eq(_T_295.bits.read, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2975 = and(_T_2972, _T_2974) @[RegisterRouter.scala 62:24]
    wire _T_2977 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2977 is invalid @[RegisterRouter.scala 62:24]
    node _T_2978 = and(_T_2975, _T_2053) @[RegisterRouter.scala 62:24]
    node _T_2979 = and(_T_2978, _T_372) @[RegisterRouter.scala 62:24]
    _T_2977 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[0] <= _T_2979 @[ReduceOthers.scala 39:69]
    node _T_2982 = eq(_T_372, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2983 = or(_T_2977, _T_2982) @[RegisterRouter.scala 62:24]
    wire _T_2985 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2985 is invalid @[RegisterRouter.scala 62:24]
    node _T_2986 = and(_T_2975, _T_2054) @[RegisterRouter.scala 62:24]
    node _T_2987 = and(_T_2986, _T_417) @[RegisterRouter.scala 62:24]
    _T_2985 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[11] <= _T_2987 @[ReduceOthers.scala 39:69]
    _T_598[10] <= _T_2987 @[ReduceOthers.scala 39:69]
    node _T_2990 = eq(_T_417, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2991 = or(_T_2985, _T_2990) @[RegisterRouter.scala 62:24]
    wire _T_2993 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_2993 is invalid @[RegisterRouter.scala 62:24]
    node _T_2994 = and(_T_2975, _T_2055) @[RegisterRouter.scala 62:24]
    node _T_2995 = and(_T_2994, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_2993 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_2998 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_2999 = or(_T_2993, _T_2998) @[RegisterRouter.scala 62:24]
    wire _T_3001 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3001 is invalid @[RegisterRouter.scala 62:24]
    node _T_3002 = and(_T_2975, _T_2056) @[RegisterRouter.scala 62:24]
    node _T_3003 = and(_T_3002, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3001 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3006 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3007 = or(_T_3001, _T_3006) @[RegisterRouter.scala 62:24]
    wire _T_3009 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3009 is invalid @[RegisterRouter.scala 62:24]
    node _T_3010 = and(_T_2975, _T_2057) @[RegisterRouter.scala 62:24]
    node _T_3011 = and(_T_3010, _T_489) @[RegisterRouter.scala 62:24]
    _T_3009 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[28] <= _T_3011 @[ReduceOthers.scala 39:69]
    node _T_3014 = eq(_T_489, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3015 = or(_T_3009, _T_3014) @[RegisterRouter.scala 62:24]
    wire _T_3017 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3017 is invalid @[RegisterRouter.scala 62:24]
    node _T_3018 = and(_T_2975, _T_2058) @[RegisterRouter.scala 62:24]
    node _T_3019 = and(_T_3018, _T_381) @[RegisterRouter.scala 62:24]
    _T_3017 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[4] <= _T_3019 @[ReduceOthers.scala 39:69]
    _T_598[3] <= _T_3019 @[ReduceOthers.scala 39:69]
    _T_598[2] <= _T_3019 @[ReduceOthers.scala 39:69]
    _T_598[1] <= _T_3019 @[ReduceOthers.scala 39:69]
    node _T_3022 = eq(_T_381, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3023 = or(_T_3017, _T_3022) @[RegisterRouter.scala 62:24]
    wire _T_3025 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3025 is invalid @[RegisterRouter.scala 62:24]
    node _T_3026 = and(_T_2975, _T_2059) @[RegisterRouter.scala 62:24]
    node _T_3027 = and(_T_3026, _T_426) @[RegisterRouter.scala 62:24]
    _T_3025 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[12] <= _T_3027 @[ReduceOthers.scala 39:69]
    node _T_3030 = eq(_T_426, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3031 = or(_T_3025, _T_3030) @[RegisterRouter.scala 62:24]
    wire _T_3033 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3033 is invalid @[RegisterRouter.scala 62:24]
    node _T_3034 = and(_T_2975, _T_2060) @[RegisterRouter.scala 62:24]
    node _T_3035 = and(_T_3034, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3033 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3038 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3039 = or(_T_3033, _T_3038) @[RegisterRouter.scala 62:24]
    wire _T_3041 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3041 is invalid @[RegisterRouter.scala 62:24]
    node _T_3042 = and(_T_2975, _T_2061) @[RegisterRouter.scala 62:24]
    node _T_3043 = and(_T_3042, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3041 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3046 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3047 = or(_T_3041, _T_3046) @[RegisterRouter.scala 62:24]
    wire _T_3049 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3049 is invalid @[RegisterRouter.scala 62:24]
    node _T_3050 = and(_T_2975, _T_2062) @[RegisterRouter.scala 62:24]
    node _T_3051 = and(_T_3050, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3049 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3054 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3055 = or(_T_3049, _T_3054) @[RegisterRouter.scala 62:24]
    wire _T_3057 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3057 is invalid @[RegisterRouter.scala 62:24]
    node _T_3058 = and(_T_2975, _T_2063) @[RegisterRouter.scala 62:24]
    node _T_3059 = and(_T_3058, _T_390) @[RegisterRouter.scala 62:24]
    _T_3057 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[6] <= _T_3059 @[ReduceOthers.scala 39:69]
    _T_598[5] <= _T_3059 @[ReduceOthers.scala 39:69]
    node _T_3062 = eq(_T_390, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3063 = or(_T_3057, _T_3062) @[RegisterRouter.scala 62:24]
    wire _T_3065 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3065 is invalid @[RegisterRouter.scala 62:24]
    node _T_3066 = and(_T_2975, _T_2064) @[RegisterRouter.scala 62:24]
    node _T_3067 = and(_T_3066, _T_471) @[RegisterRouter.scala 62:24]
    _T_3065 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[24] <= _T_3067 @[ReduceOthers.scala 39:69]
    _T_598[23] <= _T_3067 @[ReduceOthers.scala 39:69]
    node _T_3070 = eq(_T_471, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3071 = or(_T_3065, _T_3070) @[RegisterRouter.scala 62:24]
    wire _T_3073 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3073 is invalid @[RegisterRouter.scala 62:24]
    node _T_3074 = and(_T_2975, _T_2065) @[RegisterRouter.scala 62:24]
    node _T_3075 = and(_T_3074, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3073 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3078 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3079 = or(_T_3073, _T_3078) @[RegisterRouter.scala 62:24]
    wire _T_3081 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3081 is invalid @[RegisterRouter.scala 62:24]
    node _T_3082 = and(_T_2975, _T_2066) @[RegisterRouter.scala 62:24]
    node _T_3083 = and(_T_3082, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3081 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3086 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3087 = or(_T_3081, _T_3086) @[RegisterRouter.scala 62:24]
    wire _T_3089 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3089 is invalid @[RegisterRouter.scala 62:24]
    node _T_3090 = and(_T_2975, _T_2067) @[RegisterRouter.scala 62:24]
    node _T_3091 = and(_T_3090, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3089 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3094 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3095 = or(_T_3089, _T_3094) @[RegisterRouter.scala 62:24]
    wire _T_3097 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3097 is invalid @[RegisterRouter.scala 62:24]
    node _T_3098 = and(_T_2975, _T_2068) @[RegisterRouter.scala 62:24]
    node _T_3099 = and(_T_3098, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3097 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3102 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3103 = or(_T_3097, _T_3102) @[RegisterRouter.scala 62:24]
    wire _T_3105 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3105 is invalid @[RegisterRouter.scala 62:24]
    node _T_3106 = and(_T_2975, _T_2069) @[RegisterRouter.scala 62:24]
    node _T_3107 = and(_T_3106, _T_462) @[RegisterRouter.scala 62:24]
    _T_3105 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[22] <= _T_3107 @[ReduceOthers.scala 39:69]
    _T_598[21] <= _T_3107 @[ReduceOthers.scala 39:69]
    _T_598[20] <= _T_3107 @[ReduceOthers.scala 39:69]
    _T_598[19] <= _T_3107 @[ReduceOthers.scala 39:69]
    node _T_3110 = eq(_T_462, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3111 = or(_T_3105, _T_3110) @[RegisterRouter.scala 62:24]
    wire _T_3113 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3113 is invalid @[RegisterRouter.scala 62:24]
    node _T_3114 = and(_T_2975, _T_2070) @[RegisterRouter.scala 62:24]
    node _T_3115 = and(_T_3114, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3113 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3118 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3119 = or(_T_3113, _T_3118) @[RegisterRouter.scala 62:24]
    wire _T_3121 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3121 is invalid @[RegisterRouter.scala 62:24]
    node _T_3122 = and(_T_2975, _T_2071) @[RegisterRouter.scala 62:24]
    node _T_3123 = and(_T_3122, _T_453) @[RegisterRouter.scala 62:24]
    _T_3121 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[18] <= _T_3123 @[ReduceOthers.scala 39:69]
    _T_598[17] <= _T_3123 @[ReduceOthers.scala 39:69]
    _T_598[16] <= _T_3123 @[ReduceOthers.scala 39:69]
    node _T_3126 = eq(_T_453, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3127 = or(_T_3121, _T_3126) @[RegisterRouter.scala 62:24]
    wire _T_3129 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3129 is invalid @[RegisterRouter.scala 62:24]
    node _T_3130 = and(_T_2975, _T_2072) @[RegisterRouter.scala 62:24]
    node _T_3131 = and(_T_3130, _T_480) @[RegisterRouter.scala 62:24]
    _T_3129 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[27] <= _T_3131 @[ReduceOthers.scala 39:69]
    _T_598[26] <= _T_3131 @[ReduceOthers.scala 39:69]
    _T_598[25] <= _T_3131 @[ReduceOthers.scala 39:69]
    node _T_3134 = eq(_T_480, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3135 = or(_T_3129, _T_3134) @[RegisterRouter.scala 62:24]
    wire _T_3137 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3137 is invalid @[RegisterRouter.scala 62:24]
    node _T_3138 = and(_T_2975, _T_2073) @[RegisterRouter.scala 62:24]
    node _T_3139 = and(_T_3138, _T_399) @[RegisterRouter.scala 62:24]
    _T_3137 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[7] <= _T_3139 @[ReduceOthers.scala 39:69]
    node _T_3142 = eq(_T_399, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3143 = or(_T_3137, _T_3142) @[RegisterRouter.scala 62:24]
    wire _T_3145 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3145 is invalid @[RegisterRouter.scala 62:24]
    node _T_3146 = and(_T_2975, _T_2074) @[RegisterRouter.scala 62:24]
    node _T_3147 = and(_T_3146, _T_444) @[RegisterRouter.scala 62:24]
    _T_3145 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[15] <= _T_3147 @[ReduceOthers.scala 39:69]
    node _T_3150 = eq(_T_444, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3151 = or(_T_3145, _T_3150) @[RegisterRouter.scala 62:24]
    wire _T_3153 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3153 is invalid @[RegisterRouter.scala 62:24]
    node _T_3154 = and(_T_2975, _T_2075) @[RegisterRouter.scala 62:24]
    node _T_3155 = and(_T_3154, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3153 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3158 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3159 = or(_T_3153, _T_3158) @[RegisterRouter.scala 62:24]
    wire _T_3161 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3161 is invalid @[RegisterRouter.scala 62:24]
    node _T_3162 = and(_T_2975, _T_2076) @[RegisterRouter.scala 62:24]
    node _T_3163 = and(_T_3162, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3161 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3166 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3167 = or(_T_3161, _T_3166) @[RegisterRouter.scala 62:24]
    wire _T_3169 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3169 is invalid @[RegisterRouter.scala 62:24]
    node _T_3170 = and(_T_2975, _T_2077) @[RegisterRouter.scala 62:24]
    node _T_3171 = and(_T_3170, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3169 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3174 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3175 = or(_T_3169, _T_3174) @[RegisterRouter.scala 62:24]
    wire _T_3177 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3177 is invalid @[RegisterRouter.scala 62:24]
    node _T_3178 = and(_T_2975, _T_2078) @[RegisterRouter.scala 62:24]
    node _T_3179 = and(_T_3178, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3177 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3182 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3183 = or(_T_3177, _T_3182) @[RegisterRouter.scala 62:24]
    wire _T_3185 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3185 is invalid @[RegisterRouter.scala 62:24]
    node _T_3186 = and(_T_2975, _T_2079) @[RegisterRouter.scala 62:24]
    node _T_3187 = and(_T_3186, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3185 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3190 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3191 = or(_T_3185, _T_3190) @[RegisterRouter.scala 62:24]
    wire _T_3193 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3193 is invalid @[RegisterRouter.scala 62:24]
    node _T_3194 = and(_T_2975, _T_2080) @[RegisterRouter.scala 62:24]
    node _T_3195 = and(_T_3194, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3193 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3198 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3199 = or(_T_3193, _T_3198) @[RegisterRouter.scala 62:24]
    wire _T_3201 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3201 is invalid @[RegisterRouter.scala 62:24]
    node _T_3202 = and(_T_2975, _T_2081) @[RegisterRouter.scala 62:24]
    node _T_3203 = and(_T_3202, _T_435) @[RegisterRouter.scala 62:24]
    _T_3201 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[14] <= _T_3203 @[ReduceOthers.scala 39:69]
    _T_598[13] <= _T_3203 @[ReduceOthers.scala 39:69]
    node _T_3206 = eq(_T_435, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3207 = or(_T_3201, _T_3206) @[RegisterRouter.scala 62:24]
    wire _T_3209 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3209 is invalid @[RegisterRouter.scala 62:24]
    node _T_3210 = and(_T_2975, _T_2082) @[RegisterRouter.scala 62:24]
    node _T_3211 = and(_T_3210, _T_408) @[RegisterRouter.scala 62:24]
    _T_3209 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    _T_598[9] <= _T_3211 @[ReduceOthers.scala 39:69]
    _T_598[8] <= _T_3211 @[ReduceOthers.scala 39:69]
    node _T_3214 = eq(_T_408, UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3215 = or(_T_3209, _T_3214) @[RegisterRouter.scala 62:24]
    wire _T_3217 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3217 is invalid @[RegisterRouter.scala 62:24]
    node _T_3218 = and(_T_2975, _T_2083) @[RegisterRouter.scala 62:24]
    node _T_3219 = and(_T_3218, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3217 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3222 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3223 = or(_T_3217, _T_3222) @[RegisterRouter.scala 62:24]
    wire _T_3225 : UInt<1> @[RegisterRouter.scala 62:24]
    _T_3225 is invalid @[RegisterRouter.scala 62:24]
    node _T_3226 = and(_T_2975, _T_2084) @[RegisterRouter.scala 62:24]
    node _T_3227 = and(_T_3226, UInt<1>("h01")) @[RegisterRouter.scala 62:24]
    _T_3225 <= UInt<1>("h01") @[ReduceOthers.scala 39:69]
    node _T_3230 = eq(UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    node _T_3231 = or(_T_3225, _T_3230) @[RegisterRouter.scala 62:24]
    wire _T_3234 : UInt<1>[32] @[RegisterRouter.scala 62:24]
    _T_3234 is invalid @[RegisterRouter.scala 62:24]
    _T_3234[0] <= _T_2983 @[RegisterRouter.scala 62:24]
    _T_3234[1] <= _T_2991 @[RegisterRouter.scala 62:24]
    _T_3234[2] <= _T_2999 @[RegisterRouter.scala 62:24]
    _T_3234[3] <= _T_3007 @[RegisterRouter.scala 62:24]
    _T_3234[4] <= _T_3015 @[RegisterRouter.scala 62:24]
    _T_3234[5] <= _T_3023 @[RegisterRouter.scala 62:24]
    _T_3234[6] <= _T_3031 @[RegisterRouter.scala 62:24]
    _T_3234[7] <= _T_3039 @[RegisterRouter.scala 62:24]
    _T_3234[8] <= _T_3047 @[RegisterRouter.scala 62:24]
    _T_3234[9] <= _T_3055 @[RegisterRouter.scala 62:24]
    _T_3234[10] <= _T_3063 @[RegisterRouter.scala 62:24]
    _T_3234[11] <= _T_3071 @[RegisterRouter.scala 62:24]
    _T_3234[12] <= _T_3079 @[RegisterRouter.scala 62:24]
    _T_3234[13] <= _T_3087 @[RegisterRouter.scala 62:24]
    _T_3234[14] <= _T_3095 @[RegisterRouter.scala 62:24]
    _T_3234[15] <= _T_3103 @[RegisterRouter.scala 62:24]
    _T_3234[16] <= _T_3111 @[RegisterRouter.scala 62:24]
    _T_3234[17] <= _T_3119 @[RegisterRouter.scala 62:24]
    _T_3234[18] <= _T_3127 @[RegisterRouter.scala 62:24]
    _T_3234[19] <= _T_3135 @[RegisterRouter.scala 62:24]
    _T_3234[20] <= _T_3143 @[RegisterRouter.scala 62:24]
    _T_3234[21] <= _T_3151 @[RegisterRouter.scala 62:24]
    _T_3234[22] <= _T_3159 @[RegisterRouter.scala 62:24]
    _T_3234[23] <= _T_3167 @[RegisterRouter.scala 62:24]
    _T_3234[24] <= _T_3175 @[RegisterRouter.scala 62:24]
    _T_3234[25] <= _T_3183 @[RegisterRouter.scala 62:24]
    _T_3234[26] <= _T_3191 @[RegisterRouter.scala 62:24]
    _T_3234[27] <= _T_3199 @[RegisterRouter.scala 62:24]
    _T_3234[28] <= _T_3207 @[RegisterRouter.scala 62:24]
    _T_3234[29] <= _T_3215 @[RegisterRouter.scala 62:24]
    _T_3234[30] <= _T_3223 @[RegisterRouter.scala 62:24]
    _T_3234[31] <= _T_3231 @[RegisterRouter.scala 62:24]
    node _T_3271 = mux(_T_295.bits.read, _T_2345[_T_2002], _T_2642[_T_2002]) @[RegisterRouter.scala 62:24]
    node _T_3274 = mux(_T_295.bits.read, _T_2937[_T_2016], _T_3234[_T_2016]) @[RegisterRouter.scala 62:24]
    node _T_3275 = and(_T_295.ready, _T_3271) @[RegisterRouter.scala 62:24]
    _T_277.ready <= _T_3275 @[RegisterRouter.scala 62:24]
    node _T_3276 = and(_T_277.valid, _T_3271) @[RegisterRouter.scala 62:24]
    _T_295.valid <= _T_3276 @[RegisterRouter.scala 62:24]
    node _T_3277 = and(_T_288.ready, _T_3274) @[RegisterRouter.scala 62:24]
    _T_295.ready <= _T_3277 @[RegisterRouter.scala 62:24]
    node _T_3278 = and(_T_295.valid, _T_3274) @[RegisterRouter.scala 62:24]
    _T_288.valid <= _T_3278 @[RegisterRouter.scala 62:24]
    _T_288.bits.read <= _T_295.bits.read @[RegisterRouter.scala 62:24]
    wire _T_3281 : UInt<1>[32] @[RegisterRouter.scala 62:24]
    _T_3281 is invalid @[RegisterRouter.scala 62:24]
    _T_3281[0] <= _T_372 @[RegisterRouter.scala 62:24]
    _T_3281[1] <= _T_417 @[RegisterRouter.scala 62:24]
    _T_3281[2] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[3] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[4] <= _T_489 @[RegisterRouter.scala 62:24]
    _T_3281[5] <= _T_381 @[RegisterRouter.scala 62:24]
    _T_3281[6] <= _T_426 @[RegisterRouter.scala 62:24]
    _T_3281[7] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[8] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[9] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[10] <= _T_390 @[RegisterRouter.scala 62:24]
    _T_3281[11] <= _T_471 @[RegisterRouter.scala 62:24]
    _T_3281[12] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[13] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[14] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[15] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[16] <= _T_462 @[RegisterRouter.scala 62:24]
    _T_3281[17] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[18] <= _T_453 @[RegisterRouter.scala 62:24]
    _T_3281[19] <= _T_480 @[RegisterRouter.scala 62:24]
    _T_3281[20] <= _T_399 @[RegisterRouter.scala 62:24]
    _T_3281[21] <= _T_444 @[RegisterRouter.scala 62:24]
    _T_3281[22] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[23] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[24] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[25] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[26] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[27] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[28] <= _T_435 @[RegisterRouter.scala 62:24]
    _T_3281[29] <= _T_408 @[RegisterRouter.scala 62:24]
    _T_3281[30] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    _T_3281[31] <= UInt<1>("h01") @[RegisterRouter.scala 62:24]
    wire _T_3319 : UInt<32>[32] @[RegisterRouter.scala 62:24]
    _T_3319 is invalid @[RegisterRouter.scala 62:24]
    _T_3319[0] <= _T_751 @[RegisterRouter.scala 62:24]
    _T_3319[1] <= _T_1235 @[RegisterRouter.scala 62:24]
    _T_3319[2] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[3] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[4] <= _T_1988 @[RegisterRouter.scala 62:24]
    _T_3319[5] <= _T_927 @[RegisterRouter.scala 62:24]
    _T_3319[6] <= _T_1279 @[RegisterRouter.scala 62:24]
    _T_3319[7] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[8] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[9] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[10] <= _T_1015 @[RegisterRouter.scala 62:24]
    _T_3319[11] <= _T_1812 @[RegisterRouter.scala 62:24]
    _T_3319[12] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[13] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[14] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[15] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[16] <= _T_1724 @[RegisterRouter.scala 62:24]
    _T_3319[17] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[18] <= _T_1548 @[RegisterRouter.scala 62:24]
    _T_3319[19] <= _T_1944 @[RegisterRouter.scala 62:24]
    _T_3319[20] <= _T_1059 @[RegisterRouter.scala 62:24]
    _T_3319[21] <= _T_1411 @[RegisterRouter.scala 62:24]
    _T_3319[22] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[23] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[24] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[25] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[26] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[27] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[28] <= _T_1367 @[RegisterRouter.scala 62:24]
    _T_3319[29] <= _T_1147 @[RegisterRouter.scala 62:24]
    _T_3319[30] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    _T_3319[31] <= UInt<1>("h00") @[RegisterRouter.scala 62:24]
    node _T_3356 = mux(_T_3281[_T_2016], _T_3319[_T_2016], UInt<1>("h00")) @[RegisterRouter.scala 62:24]
    _T_288.bits.data <= _T_3356 @[RegisterRouter.scala 62:24]
    _T_288.bits.extra <= _T_295.bits.extra @[RegisterRouter.scala 62:24]
    _T_277.valid <= _T_26.a.valid @[RegisterRouter.scala 65:15]
    _T_26.a.ready <= _T_277.ready @[RegisterRouter.scala 66:15]
    _T_26.d.valid <= _T_288.valid @[RegisterRouter.scala 67:15]
    _T_288.ready <= _T_26.d.ready @[RegisterRouter.scala 68:15]
    node _T_3357 = bits(_T_288.bits.extra, 8, 2) @[RegisterRouter.scala 72:35]
    node _T_3358 = bits(_T_288.bits.extra, 1, 0) @[RegisterRouter.scala 73:35]
    wire _T_3361 : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<7>, sink : UInt<1>, data : UInt<32>, error : UInt<1>} @[Edges.scala 646:17]
    _T_3361 is invalid @[Edges.scala 646:17]
    _T_3361.opcode <= UInt<1>("h00") @[Edges.scala 647:15]
    _T_3361.param <= UInt<1>("h00") @[Edges.scala 648:15]
    _T_3361.size <= _T_3358 @[Edges.scala 649:15]
    _T_3361.source <= _T_3357 @[Edges.scala 650:15]
    _T_3361.sink <= UInt<1>("h00") @[Edges.scala 651:15]
    _T_3361.data <= UInt<1>("h00") @[Edges.scala 652:15]
    _T_3361.error <= UInt<1>("h00") @[Edges.scala 653:15]
    _T_26.d.bits <- _T_3361 @[RegisterRouter.scala 71:12]
    _T_26.d.bits.data <= _T_288.bits.data @[RegisterRouter.scala 76:17]
    node _T_3368 = mux(_T_288.bits.read, UInt<1>("h01"), UInt<1>("h00")) @[RegisterRouter.scala 77:25]
    _T_26.d.bits.opcode <= _T_3368 @[RegisterRouter.scala 77:19]
    _T_26.b.valid <= UInt<1>("h00") @[RegisterRouter.scala 80:22]
    _T_26.c.ready <= UInt<1>("h01") @[RegisterRouter.scala 81:22]
    _T_26.e.ready <= UInt<1>("h01") @[RegisterRouter.scala 82:22]
    
  module TLMonitor_66 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {a : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<7>, address : UInt<29>, mask : UInt<4>, data : UInt<32>}}, b : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<7>, address : UInt<29>, mask : UInt<4>, data : UInt<32>}}, c : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<7>, address : UInt<29>, data : UInt<32>, error : UInt<1>}}, d : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<7>, sink : UInt<1>, data : UInt<32>, error : UInt<1>}}, e : {ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}}}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T_15 = bits(reset, 0, 0) @[compatibility.scala 247:56]
    when io.in.a.valid : @[Monitor.scala 301:27]
      node _T_17 = leq(io.in.a.bits.opcode, UInt<3>("h07")) @[Bundles.scala 40:24]
      node _T_18 = bits(reset, 0, 0) @[Monitor.scala 33:12]
      node _T_19 = or(_T_17, _T_18) @[Monitor.scala 33:12]
      node _T_21 = eq(_T_19, UInt<1>("h00")) @[Monitor.scala 33:12]
      when _T_21 : @[Monitor.scala 33:12]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel has invalid opcode (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:33 assert (TLMessages.isA(bundle.opcode), \"'A' channel has invalid opcode\" + extra)\n") @[Monitor.scala 33:12]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 33:12]
        skip @[Monitor.scala 33:12]
      node _T_23 = or(io.in.a.bits.source, UInt<7>("h00")) @[Parameters.scala 49:29]
      node _T_24 = bits(_T_23, 6, 0) @[Parameters.scala 49:64]
      node _T_25 = shr(io.in.a.bits.source, 7) @[Parameters.scala 51:10]
      node _T_27 = eq(_T_25, UInt<1>("h00")) @[Parameters.scala 51:32]
      node _T_29 = leq(UInt<1>("h00"), _T_24) @[Parameters.scala 53:34]
      node _T_30 = and(_T_27, _T_29) @[Parameters.scala 51:69]
      node _T_32 = leq(_T_24, UInt<7>("h07f")) @[Parameters.scala 54:20]
      node _T_33 = and(_T_30, _T_32) @[Parameters.scala 53:50]
      wire _T_36 : UInt<1>[1] @[Parameters.scala 255:27]
      _T_36 is invalid @[Parameters.scala 255:27]
      _T_36[0] <= _T_33 @[Parameters.scala 255:27]
      node _T_41 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 104:70]
      node _T_42 = dshl(_T_41, io.in.a.bits.size) @[package.scala 104:77]
      node _T_43 = bits(_T_42, 1, 0) @[package.scala 104:82]
      node _T_44 = not(_T_43) @[package.scala 104:46]
      node _T_45 = and(io.in.a.bits.address, _T_44) @[Edges.scala 21:16]
      node _T_47 = eq(_T_45, UInt<1>("h00")) @[Edges.scala 21:24]
      node _T_48 = bits(io.in.a.bits.size, 0, 0) @[OneHot.scala 49:27]
      node _T_50 = dshl(UInt<1>("h01"), _T_48) @[OneHot.scala 50:12]
      node _T_51 = bits(_T_50, 1, 0) @[OneHot.scala 50:27]
      node _T_53 = or(_T_51, UInt<1>("h01")) @[Misc.scala 237:54]
      node _T_55 = geq(io.in.a.bits.size, UInt<2>("h02")) @[Misc.scala 241:21]
      node _T_57 = bits(_T_53, 1, 1) @[Misc.scala 244:26]
      node _T_58 = bits(io.in.a.bits.address, 1, 1) @[Misc.scala 245:26]
      node _T_60 = eq(_T_58, UInt<1>("h00")) @[Misc.scala 246:20]
      node _T_61 = and(UInt<1>("h01"), _T_60) @[Misc.scala 249:27]
      node _T_62 = and(_T_57, _T_61) @[Misc.scala 250:38]
      node _T_63 = or(_T_55, _T_62) @[Misc.scala 250:29]
      node _T_64 = and(UInt<1>("h01"), _T_58) @[Misc.scala 249:27]
      node _T_65 = and(_T_57, _T_64) @[Misc.scala 250:38]
      node _T_66 = or(_T_55, _T_65) @[Misc.scala 250:29]
      node _T_67 = bits(_T_53, 0, 0) @[Misc.scala 244:26]
      node _T_68 = bits(io.in.a.bits.address, 0, 0) @[Misc.scala 245:26]
      node _T_70 = eq(_T_68, UInt<1>("h00")) @[Misc.scala 246:20]
      node _T_71 = and(_T_61, _T_70) @[Misc.scala 249:27]
      node _T_72 = and(_T_67, _T_71) @[Misc.scala 250:38]
      node _T_73 = or(_T_63, _T_72) @[Misc.scala 250:29]
      node _T_74 = and(_T_61, _T_68) @[Misc.scala 249:27]
      node _T_75 = and(_T_67, _T_74) @[Misc.scala 250:38]
      node _T_76 = or(_T_63, _T_75) @[Misc.scala 250:29]
      node _T_77 = and(_T_64, _T_70) @[Misc.scala 249:27]
      node _T_78 = and(_T_67, _T_77) @[Misc.scala 250:38]
      node _T_79 = or(_T_66, _T_78) @[Misc.scala 250:29]
      node _T_80 = and(_T_64, _T_68) @[Misc.scala 249:27]
      node _T_81 = and(_T_67, _T_80) @[Misc.scala 250:38]
      node _T_82 = or(_T_66, _T_81) @[Misc.scala 250:29]
      node _T_83 = cat(_T_76, _T_73) @[Cat.scala 30:58]
      node _T_84 = cat(_T_82, _T_79) @[Cat.scala 30:58]
      node _T_85 = cat(_T_84, _T_83) @[Cat.scala 30:58]
      node _T_87 = eq(io.in.a.bits.opcode, UInt<3>("h06")) @[Monitor.scala 40:25]
      when _T_87 : @[Monitor.scala 40:54]
        node _T_90 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
        node _T_92 = xor(io.in.a.bits.address, UInt<29>("h010024000")) @[Parameters.scala 119:31]
        node _T_93 = cvt(_T_92) @[Parameters.scala 119:49]
        node _T_95 = and(_T_93, asSInt(UInt<13>("h01000"))) @[Parameters.scala 119:52]
        node _T_96 = asSInt(_T_95) @[Parameters.scala 119:52]
        node _T_98 = eq(_T_96, asSInt(UInt<1>("h00"))) @[Parameters.scala 119:67]
        node _T_99 = and(_T_90, _T_98) @[Parameters.scala 157:56]
        node _T_101 = or(UInt<1>("h00"), _T_99) @[Parameters.scala 159:30]
        node _T_102 = bits(reset, 0, 0) @[Monitor.scala 41:14]
        node _T_103 = or(_T_101, _T_102) @[Monitor.scala 41:14]
        node _T_105 = eq(_T_103, UInt<1>("h00")) @[Monitor.scala 41:14]
        when _T_105 : @[Monitor.scala 41:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries AcquireBlock type unsupported by manager (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:41 assert (edge.manager.supportsAcquireBSafe(edge.address(bundle), bundle.size), \"'A' channel carries AcquireBlock type unsupported by manager\" + extra)\n") @[Monitor.scala 41:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 41:14]
          skip @[Monitor.scala 41:14]
        node _T_107 = bits(reset, 0, 0) @[Monitor.scala 42:14]
        node _T_108 = or(UInt<1>("h00"), _T_107) @[Monitor.scala 42:14]
        node _T_110 = eq(_T_108, UInt<1>("h00")) @[Monitor.scala 42:14]
        when _T_110 : @[Monitor.scala 42:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries AcquireBlock from a client which does not support Probe (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:42 assert (edge.client.supportsProbe(edge.source(bundle), bundle.size), \"'A' channel carries AcquireBlock from a client which does not support Probe\" + extra)\n") @[Monitor.scala 42:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 42:14]
          skip @[Monitor.scala 42:14]
        node _T_111 = bits(reset, 0, 0) @[Monitor.scala 43:14]
        node _T_112 = or(_T_36[0], _T_111) @[Monitor.scala 43:14]
        node _T_114 = eq(_T_112, UInt<1>("h00")) @[Monitor.scala 43:14]
        when _T_114 : @[Monitor.scala 43:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquireBlock carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:43 assert (source_ok, \"'A' channel AcquireBlock carries invalid source ID\" + extra)\n") @[Monitor.scala 43:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 43:14]
          skip @[Monitor.scala 43:14]
        node _T_116 = geq(io.in.a.bits.size, UInt<2>("h02")) @[Monitor.scala 44:27]
        node _T_117 = bits(reset, 0, 0) @[Monitor.scala 44:14]
        node _T_118 = or(_T_116, _T_117) @[Monitor.scala 44:14]
        node _T_120 = eq(_T_118, UInt<1>("h00")) @[Monitor.scala 44:14]
        when _T_120 : @[Monitor.scala 44:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquireBlock smaller than a beat (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:44 assert (bundle.size >= UInt(log2Ceil(edge.manager.beatBytes)), \"'A' channel AcquireBlock smaller than a beat\" + extra)\n") @[Monitor.scala 44:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:14]
          skip @[Monitor.scala 44:14]
        node _T_121 = bits(reset, 0, 0) @[Monitor.scala 45:14]
        node _T_122 = or(_T_47, _T_121) @[Monitor.scala 45:14]
        node _T_124 = eq(_T_122, UInt<1>("h00")) @[Monitor.scala 45:14]
        when _T_124 : @[Monitor.scala 45:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquireBlock address not aligned to size (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:45 assert (is_aligned, \"'A' channel AcquireBlock address not aligned to size\" + extra)\n") @[Monitor.scala 45:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 45:14]
          skip @[Monitor.scala 45:14]
        node _T_126 = leq(io.in.a.bits.param, UInt<2>("h02")) @[Bundles.scala 71:27]
        node _T_127 = bits(reset, 0, 0) @[Monitor.scala 46:14]
        node _T_128 = or(_T_126, _T_127) @[Monitor.scala 46:14]
        node _T_130 = eq(_T_128, UInt<1>("h00")) @[Monitor.scala 46:14]
        when _T_130 : @[Monitor.scala 46:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquireBlock carries invalid grow param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:46 assert (TLPermissions.isGrow(bundle.param), \"'A' channel AcquireBlock carries invalid grow param\" + extra)\n") @[Monitor.scala 46:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 46:14]
          skip @[Monitor.scala 46:14]
        node _T_131 = not(io.in.a.bits.mask) @[Monitor.scala 47:15]
        node _T_133 = eq(_T_131, UInt<1>("h00")) @[Monitor.scala 47:28]
        node _T_134 = bits(reset, 0, 0) @[Monitor.scala 47:14]
        node _T_135 = or(_T_133, _T_134) @[Monitor.scala 47:14]
        node _T_137 = eq(_T_135, UInt<1>("h00")) @[Monitor.scala 47:14]
        when _T_137 : @[Monitor.scala 47:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquireBlock contains invalid mask (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:47 assert (~bundle.mask === UInt(0), \"'A' channel AcquireBlock contains invalid mask\" + extra)\n") @[Monitor.scala 47:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 47:14]
          skip @[Monitor.scala 47:14]
        skip @[Monitor.scala 40:54]
      node _T_139 = eq(io.in.a.bits.opcode, UInt<3>("h07")) @[Monitor.scala 50:25]
      when _T_139 : @[Monitor.scala 50:53]
        node _T_142 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
        node _T_144 = xor(io.in.a.bits.address, UInt<29>("h010024000")) @[Parameters.scala 119:31]
        node _T_145 = cvt(_T_144) @[Parameters.scala 119:49]
        node _T_147 = and(_T_145, asSInt(UInt<13>("h01000"))) @[Parameters.scala 119:52]
        node _T_148 = asSInt(_T_147) @[Parameters.scala 119:52]
        node _T_150 = eq(_T_148, asSInt(UInt<1>("h00"))) @[Parameters.scala 119:67]
        node _T_151 = and(_T_142, _T_150) @[Parameters.scala 157:56]
        node _T_153 = or(UInt<1>("h00"), _T_151) @[Parameters.scala 159:30]
        node _T_154 = bits(reset, 0, 0) @[Monitor.scala 51:14]
        node _T_155 = or(_T_153, _T_154) @[Monitor.scala 51:14]
        node _T_157 = eq(_T_155, UInt<1>("h00")) @[Monitor.scala 51:14]
        when _T_157 : @[Monitor.scala 51:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries AcquirePerm type unsupported by manager (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:51 assert (edge.manager.supportsAcquireBSafe(edge.address(bundle), bundle.size), \"'A' channel carries AcquirePerm type unsupported by manager\" + extra)\n") @[Monitor.scala 51:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:14]
          skip @[Monitor.scala 51:14]
        node _T_159 = bits(reset, 0, 0) @[Monitor.scala 52:14]
        node _T_160 = or(UInt<1>("h00"), _T_159) @[Monitor.scala 52:14]
        node _T_162 = eq(_T_160, UInt<1>("h00")) @[Monitor.scala 52:14]
        when _T_162 : @[Monitor.scala 52:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries AcquirePerm from a client which does not support Probe (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:52 assert (edge.client.supportsProbe(edge.source(bundle), bundle.size), \"'A' channel carries AcquirePerm from a client which does not support Probe\" + extra)\n") @[Monitor.scala 52:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 52:14]
          skip @[Monitor.scala 52:14]
        node _T_163 = bits(reset, 0, 0) @[Monitor.scala 53:14]
        node _T_164 = or(_T_36[0], _T_163) @[Monitor.scala 53:14]
        node _T_166 = eq(_T_164, UInt<1>("h00")) @[Monitor.scala 53:14]
        when _T_166 : @[Monitor.scala 53:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:53 assert (source_ok, \"'A' channel AcquirePerm carries invalid source ID\" + extra)\n") @[Monitor.scala 53:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 53:14]
          skip @[Monitor.scala 53:14]
        node _T_168 = geq(io.in.a.bits.size, UInt<2>("h02")) @[Monitor.scala 54:27]
        node _T_169 = bits(reset, 0, 0) @[Monitor.scala 54:14]
        node _T_170 = or(_T_168, _T_169) @[Monitor.scala 54:14]
        node _T_172 = eq(_T_170, UInt<1>("h00")) @[Monitor.scala 54:14]
        when _T_172 : @[Monitor.scala 54:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm smaller than a beat (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:54 assert (bundle.size >= UInt(log2Ceil(edge.manager.beatBytes)), \"'A' channel AcquirePerm smaller than a beat\" + extra)\n") @[Monitor.scala 54:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 54:14]
          skip @[Monitor.scala 54:14]
        node _T_173 = bits(reset, 0, 0) @[Monitor.scala 55:14]
        node _T_174 = or(_T_47, _T_173) @[Monitor.scala 55:14]
        node _T_176 = eq(_T_174, UInt<1>("h00")) @[Monitor.scala 55:14]
        when _T_176 : @[Monitor.scala 55:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm address not aligned to size (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:55 assert (is_aligned, \"'A' channel AcquirePerm address not aligned to size\" + extra)\n") @[Monitor.scala 55:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 55:14]
          skip @[Monitor.scala 55:14]
        node _T_178 = leq(io.in.a.bits.param, UInt<2>("h02")) @[Bundles.scala 71:27]
        node _T_179 = bits(reset, 0, 0) @[Monitor.scala 56:14]
        node _T_180 = or(_T_178, _T_179) @[Monitor.scala 56:14]
        node _T_182 = eq(_T_180, UInt<1>("h00")) @[Monitor.scala 56:14]
        when _T_182 : @[Monitor.scala 56:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm carries invalid grow param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:56 assert (TLPermissions.isGrow(bundle.param), \"'A' channel AcquirePerm carries invalid grow param\" + extra)\n") @[Monitor.scala 56:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 56:14]
          skip @[Monitor.scala 56:14]
        node _T_184 = neq(io.in.a.bits.param, UInt<2>("h00")) @[Monitor.scala 57:28]
        node _T_185 = bits(reset, 0, 0) @[Monitor.scala 57:14]
        node _T_186 = or(_T_184, _T_185) @[Monitor.scala 57:14]
        node _T_188 = eq(_T_186, UInt<1>("h00")) @[Monitor.scala 57:14]
        when _T_188 : @[Monitor.scala 57:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm requests NtoB (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:57 assert (bundle.param =/= TLPermissions.NtoB, \"'A' channel AcquirePerm requests NtoB\" + extra)\n") @[Monitor.scala 57:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 57:14]
          skip @[Monitor.scala 57:14]
        node _T_189 = not(io.in.a.bits.mask) @[Monitor.scala 58:15]
        node _T_191 = eq(_T_189, UInt<1>("h00")) @[Monitor.scala 58:28]
        node _T_192 = bits(reset, 0, 0) @[Monitor.scala 58:14]
        node _T_193 = or(_T_191, _T_192) @[Monitor.scala 58:14]
        node _T_195 = eq(_T_193, UInt<1>("h00")) @[Monitor.scala 58:14]
        when _T_195 : @[Monitor.scala 58:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm contains invalid mask (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:58 assert (~bundle.mask === UInt(0), \"'A' channel AcquirePerm contains invalid mask\" + extra)\n") @[Monitor.scala 58:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 58:14]
          skip @[Monitor.scala 58:14]
        skip @[Monitor.scala 50:53]
      node _T_197 = eq(io.in.a.bits.opcode, UInt<3>("h04")) @[Monitor.scala 61:25]
      when _T_197 : @[Monitor.scala 61:45]
        node _T_200 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 88:32]
        node _T_202 = leq(io.in.a.bits.size, UInt<2>("h02")) @[Parameters.scala 88:42]
        node _T_203 = and(_T_200, _T_202) @[Parameters.scala 88:37]
        node _T_204 = or(UInt<1>("h00"), _T_203) @[Parameters.scala 157:31]
        node _T_206 = xor(io.in.a.bits.address, UInt<29>("h010024000")) @[Parameters.scala 119:31]
        node _T_207 = cvt(_T_206) @[Parameters.scala 119:49]
        node _T_209 = and(_T_207, asSInt(UInt<13>("h01000"))) @[Parameters.scala 119:52]
        node _T_210 = asSInt(_T_209) @[Parameters.scala 119:52]
        node _T_212 = eq(_T_210, asSInt(UInt<1>("h00"))) @[Parameters.scala 119:67]
        node _T_213 = and(_T_204, _T_212) @[Parameters.scala 157:56]
        node _T_215 = or(UInt<1>("h00"), _T_213) @[Parameters.scala 159:30]
        node _T_216 = bits(reset, 0, 0) @[Monitor.scala 62:14]
        node _T_217 = or(_T_215, _T_216) @[Monitor.scala 62:14]
        node _T_219 = eq(_T_217, UInt<1>("h00")) @[Monitor.scala 62:14]
        when _T_219 : @[Monitor.scala 62:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries Get type unsupported by manager (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:62 assert (edge.manager.supportsGetSafe(edge.address(bundle), bundle.size), \"'A' channel carries Get type unsupported by manager\" + extra)\n") @[Monitor.scala 62:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 62:14]
          skip @[Monitor.scala 62:14]
        node _T_220 = bits(reset, 0, 0) @[Monitor.scala 63:14]
        node _T_221 = or(_T_36[0], _T_220) @[Monitor.scala 63:14]
        node _T_223 = eq(_T_221, UInt<1>("h00")) @[Monitor.scala 63:14]
        when _T_223 : @[Monitor.scala 63:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Get carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:63 assert (source_ok, \"'A' channel Get carries invalid source ID\" + extra)\n") @[Monitor.scala 63:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 63:14]
          skip @[Monitor.scala 63:14]
        node _T_224 = bits(reset, 0, 0) @[Monitor.scala 64:14]
        node _T_225 = or(_T_47, _T_224) @[Monitor.scala 64:14]
        node _T_227 = eq(_T_225, UInt<1>("h00")) @[Monitor.scala 64:14]
        when _T_227 : @[Monitor.scala 64:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Get address not aligned to size (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:64 assert (is_aligned, \"'A' channel Get address not aligned to size\" + extra)\n") @[Monitor.scala 64:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 64:14]
          skip @[Monitor.scala 64:14]
        node _T_229 = eq(io.in.a.bits.param, UInt<1>("h00")) @[Monitor.scala 65:28]
        node _T_230 = bits(reset, 0, 0) @[Monitor.scala 65:14]
        node _T_231 = or(_T_229, _T_230) @[Monitor.scala 65:14]
        node _T_233 = eq(_T_231, UInt<1>("h00")) @[Monitor.scala 65:14]
        when _T_233 : @[Monitor.scala 65:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Get carries invalid param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:65 assert (bundle.param === UInt(0), \"'A' channel Get carries invalid param\" + extra)\n") @[Monitor.scala 65:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 65:14]
          skip @[Monitor.scala 65:14]
        node _T_234 = eq(io.in.a.bits.mask, _T_85) @[Monitor.scala 66:27]
        node _T_235 = bits(reset, 0, 0) @[Monitor.scala 66:14]
        node _T_236 = or(_T_234, _T_235) @[Monitor.scala 66:14]
        node _T_238 = eq(_T_236, UInt<1>("h00")) @[Monitor.scala 66:14]
        when _T_238 : @[Monitor.scala 66:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Get contains invalid mask (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:66 assert (bundle.mask === mask, \"'A' channel Get contains invalid mask\" + extra)\n") @[Monitor.scala 66:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 66:14]
          skip @[Monitor.scala 66:14]
        skip @[Monitor.scala 61:45]
      node _T_240 = eq(io.in.a.bits.opcode, UInt<1>("h00")) @[Monitor.scala 69:25]
      when _T_240 : @[Monitor.scala 69:53]
        node _T_243 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 88:32]
        node _T_245 = leq(io.in.a.bits.size, UInt<2>("h02")) @[Parameters.scala 88:42]
        node _T_246 = and(_T_243, _T_245) @[Parameters.scala 88:37]
        node _T_247 = or(UInt<1>("h00"), _T_246) @[Parameters.scala 157:31]
        node _T_249 = xor(io.in.a.bits.address, UInt<29>("h010024000")) @[Parameters.scala 119:31]
        node _T_250 = cvt(_T_249) @[Parameters.scala 119:49]
        node _T_252 = and(_T_250, asSInt(UInt<13>("h01000"))) @[Parameters.scala 119:52]
        node _T_253 = asSInt(_T_252) @[Parameters.scala 119:52]
        node _T_255 = eq(_T_253, asSInt(UInt<1>("h00"))) @[Parameters.scala 119:67]
        node _T_256 = and(_T_247, _T_255) @[Parameters.scala 157:56]
        node _T_258 = or(UInt<1>("h00"), _T_256) @[Parameters.scala 159:30]
        node _T_259 = bits(reset, 0, 0) @[Monitor.scala 70:14]
        node _T_260 = or(_T_258, _T_259) @[Monitor.scala 70:14]
        node _T_262 = eq(_T_260, UInt<1>("h00")) @[Monitor.scala 70:14]
        when _T_262 : @[Monitor.scala 70:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries PutFull type unsupported by manager (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:70 assert (edge.manager.supportsPutFullSafe(edge.address(bundle), bundle.size), \"'A' channel carries PutFull type unsupported by manager\" + extra)\n") @[Monitor.scala 70:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 70:14]
          skip @[Monitor.scala 70:14]
        node _T_263 = bits(reset, 0, 0) @[Monitor.scala 71:14]
        node _T_264 = or(_T_36[0], _T_263) @[Monitor.scala 71:14]
        node _T_266 = eq(_T_264, UInt<1>("h00")) @[Monitor.scala 71:14]
        when _T_266 : @[Monitor.scala 71:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutFull carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:71 assert (source_ok, \"'A' channel PutFull carries invalid source ID\" + extra)\n") @[Monitor.scala 71:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 71:14]
          skip @[Monitor.scala 71:14]
        node _T_267 = bits(reset, 0, 0) @[Monitor.scala 72:14]
        node _T_268 = or(_T_47, _T_267) @[Monitor.scala 72:14]
        node _T_270 = eq(_T_268, UInt<1>("h00")) @[Monitor.scala 72:14]
        when _T_270 : @[Monitor.scala 72:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutFull address not aligned to size (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:72 assert (is_aligned, \"'A' channel PutFull address not aligned to size\" + extra)\n") @[Monitor.scala 72:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 72:14]
          skip @[Monitor.scala 72:14]
        node _T_272 = eq(io.in.a.bits.param, UInt<1>("h00")) @[Monitor.scala 73:28]
        node _T_273 = bits(reset, 0, 0) @[Monitor.scala 73:14]
        node _T_274 = or(_T_272, _T_273) @[Monitor.scala 73:14]
        node _T_276 = eq(_T_274, UInt<1>("h00")) @[Monitor.scala 73:14]
        when _T_276 : @[Monitor.scala 73:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutFull carries invalid param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:73 assert (bundle.param === UInt(0), \"'A' channel PutFull carries invalid param\" + extra)\n") @[Monitor.scala 73:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 73:14]
          skip @[Monitor.scala 73:14]
        node _T_277 = eq(io.in.a.bits.mask, _T_85) @[Monitor.scala 74:27]
        node _T_278 = bits(reset, 0, 0) @[Monitor.scala 74:14]
        node _T_279 = or(_T_277, _T_278) @[Monitor.scala 74:14]
        node _T_281 = eq(_T_279, UInt<1>("h00")) @[Monitor.scala 74:14]
        when _T_281 : @[Monitor.scala 74:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutFull contains invalid mask (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:74 assert (bundle.mask === mask, \"'A' channel PutFull contains invalid mask\" + extra)\n") @[Monitor.scala 74:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 74:14]
          skip @[Monitor.scala 74:14]
        skip @[Monitor.scala 69:53]
      node _T_283 = eq(io.in.a.bits.opcode, UInt<1>("h01")) @[Monitor.scala 77:25]
      when _T_283 : @[Monitor.scala 77:56]
        node _T_286 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 88:32]
        node _T_288 = leq(io.in.a.bits.size, UInt<2>("h02")) @[Parameters.scala 88:42]
        node _T_289 = and(_T_286, _T_288) @[Parameters.scala 88:37]
        node _T_290 = or(UInt<1>("h00"), _T_289) @[Parameters.scala 157:31]
        node _T_292 = xor(io.in.a.bits.address, UInt<29>("h010024000")) @[Parameters.scala 119:31]
        node _T_293 = cvt(_T_292) @[Parameters.scala 119:49]
        node _T_295 = and(_T_293, asSInt(UInt<13>("h01000"))) @[Parameters.scala 119:52]
        node _T_296 = asSInt(_T_295) @[Parameters.scala 119:52]
        node _T_298 = eq(_T_296, asSInt(UInt<1>("h00"))) @[Parameters.scala 119:67]
        node _T_299 = and(_T_290, _T_298) @[Parameters.scala 157:56]
        node _T_301 = or(UInt<1>("h00"), _T_299) @[Parameters.scala 159:30]
        node _T_302 = bits(reset, 0, 0) @[Monitor.scala 78:14]
        node _T_303 = or(_T_301, _T_302) @[Monitor.scala 78:14]
        node _T_305 = eq(_T_303, UInt<1>("h00")) @[Monitor.scala 78:14]
        when _T_305 : @[Monitor.scala 78:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries PutPartial type unsupported by manager (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:78 assert (edge.manager.supportsPutPartialSafe(edge.address(bundle), bundle.size), \"'A' channel carries PutPartial type unsupported by manager\" + extra)\n") @[Monitor.scala 78:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 78:14]
          skip @[Monitor.scala 78:14]
        node _T_306 = bits(reset, 0, 0) @[Monitor.scala 79:14]
        node _T_307 = or(_T_36[0], _T_306) @[Monitor.scala 79:14]
        node _T_309 = eq(_T_307, UInt<1>("h00")) @[Monitor.scala 79:14]
        when _T_309 : @[Monitor.scala 79:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutPartial carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:79 assert (source_ok, \"'A' channel PutPartial carries invalid source ID\" + extra)\n") @[Monitor.scala 79:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 79:14]
          skip @[Monitor.scala 79:14]
        node _T_310 = bits(reset, 0, 0) @[Monitor.scala 80:14]
        node _T_311 = or(_T_47, _T_310) @[Monitor.scala 80:14]
        node _T_313 = eq(_T_311, UInt<1>("h00")) @[Monitor.scala 80:14]
        when _T_313 : @[Monitor.scala 80:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutPartial address not aligned to size (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:80 assert (is_aligned, \"'A' channel PutPartial address not aligned to size\" + extra)\n") @[Monitor.scala 80:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 80:14]
          skip @[Monitor.scala 80:14]
        node _T_315 = eq(io.in.a.bits.param, UInt<1>("h00")) @[Monitor.scala 81:28]
        node _T_316 = bits(reset, 0, 0) @[Monitor.scala 81:14]
        node _T_317 = or(_T_315, _T_316) @[Monitor.scala 81:14]
        node _T_319 = eq(_T_317, UInt<1>("h00")) @[Monitor.scala 81:14]
        when _T_319 : @[Monitor.scala 81:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutPartial carries invalid param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:81 assert (bundle.param === UInt(0), \"'A' channel PutPartial carries invalid param\" + extra)\n") @[Monitor.scala 81:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 81:14]
          skip @[Monitor.scala 81:14]
        node _T_320 = not(_T_85) @[Monitor.scala 82:30]
        node _T_321 = and(io.in.a.bits.mask, _T_320) @[Monitor.scala 82:28]
        node _T_323 = eq(_T_321, UInt<1>("h00")) @[Monitor.scala 82:37]
        node _T_324 = bits(reset, 0, 0) @[Monitor.scala 82:14]
        node _T_325 = or(_T_323, _T_324) @[Monitor.scala 82:14]
        node _T_327 = eq(_T_325, UInt<1>("h00")) @[Monitor.scala 82:14]
        when _T_327 : @[Monitor.scala 82:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutPartial contains invalid mask (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:82 assert ((bundle.mask & ~mask) === UInt(0), \"'A' channel PutPartial contains invalid mask\" + extra)\n") @[Monitor.scala 82:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 82:14]
          skip @[Monitor.scala 82:14]
        skip @[Monitor.scala 77:56]
      node _T_329 = eq(io.in.a.bits.opcode, UInt<2>("h02")) @[Monitor.scala 85:25]
      when _T_329 : @[Monitor.scala 85:56]
        node _T_332 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
        node _T_334 = xor(io.in.a.bits.address, UInt<29>("h010024000")) @[Parameters.scala 119:31]
        node _T_335 = cvt(_T_334) @[Parameters.scala 119:49]
        node _T_337 = and(_T_335, asSInt(UInt<13>("h01000"))) @[Parameters.scala 119:52]
        node _T_338 = asSInt(_T_337) @[Parameters.scala 119:52]
        node _T_340 = eq(_T_338, asSInt(UInt<1>("h00"))) @[Parameters.scala 119:67]
        node _T_341 = and(_T_332, _T_340) @[Parameters.scala 157:56]
        node _T_343 = or(UInt<1>("h00"), _T_341) @[Parameters.scala 159:30]
        node _T_344 = bits(reset, 0, 0) @[Monitor.scala 86:14]
        node _T_345 = or(_T_343, _T_344) @[Monitor.scala 86:14]
        node _T_347 = eq(_T_345, UInt<1>("h00")) @[Monitor.scala 86:14]
        when _T_347 : @[Monitor.scala 86:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries Arithmetic type unsupported by manager (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:86 assert (edge.manager.supportsArithmeticSafe(edge.address(bundle), bundle.size), \"'A' channel carries Arithmetic type unsupported by manager\" + extra)\n") @[Monitor.scala 86:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 86:14]
          skip @[Monitor.scala 86:14]
        node _T_348 = bits(reset, 0, 0) @[Monitor.scala 87:14]
        node _T_349 = or(_T_36[0], _T_348) @[Monitor.scala 87:14]
        node _T_351 = eq(_T_349, UInt<1>("h00")) @[Monitor.scala 87:14]
        when _T_351 : @[Monitor.scala 87:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Arithmetic carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:87 assert (source_ok, \"'A' channel Arithmetic carries invalid source ID\" + extra)\n") @[Monitor.scala 87:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 87:14]
          skip @[Monitor.scala 87:14]
        node _T_352 = bits(reset, 0, 0) @[Monitor.scala 88:14]
        node _T_353 = or(_T_47, _T_352) @[Monitor.scala 88:14]
        node _T_355 = eq(_T_353, UInt<1>("h00")) @[Monitor.scala 88:14]
        when _T_355 : @[Monitor.scala 88:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Arithmetic address not aligned to size (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:88 assert (is_aligned, \"'A' channel Arithmetic address not aligned to size\" + extra)\n") @[Monitor.scala 88:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 88:14]
          skip @[Monitor.scala 88:14]
        node _T_357 = leq(io.in.a.bits.param, UInt<3>("h04")) @[Bundles.scala 96:33]
        node _T_358 = bits(reset, 0, 0) @[Monitor.scala 89:14]
        node _T_359 = or(_T_357, _T_358) @[Monitor.scala 89:14]
        node _T_361 = eq(_T_359, UInt<1>("h00")) @[Monitor.scala 89:14]
        when _T_361 : @[Monitor.scala 89:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Arithmetic carries invalid opcode param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:89 assert (TLAtomics.isArithmetic(bundle.param), \"'A' channel Arithmetic carries invalid opcode param\" + extra)\n") @[Monitor.scala 89:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 89:14]
          skip @[Monitor.scala 89:14]
        node _T_362 = eq(io.in.a.bits.mask, _T_85) @[Monitor.scala 90:27]
        node _T_363 = bits(reset, 0, 0) @[Monitor.scala 90:14]
        node _T_364 = or(_T_362, _T_363) @[Monitor.scala 90:14]
        node _T_366 = eq(_T_364, UInt<1>("h00")) @[Monitor.scala 90:14]
        when _T_366 : @[Monitor.scala 90:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Arithmetic contains invalid mask (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:90 assert (bundle.mask === mask, \"'A' channel Arithmetic contains invalid mask\" + extra)\n") @[Monitor.scala 90:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 90:14]
          skip @[Monitor.scala 90:14]
        skip @[Monitor.scala 85:56]
      node _T_368 = eq(io.in.a.bits.opcode, UInt<2>("h03")) @[Monitor.scala 93:25]
      when _T_368 : @[Monitor.scala 93:53]
        node _T_371 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
        node _T_373 = xor(io.in.a.bits.address, UInt<29>("h010024000")) @[Parameters.scala 119:31]
        node _T_374 = cvt(_T_373) @[Parameters.scala 119:49]
        node _T_376 = and(_T_374, asSInt(UInt<13>("h01000"))) @[Parameters.scala 119:52]
        node _T_377 = asSInt(_T_376) @[Parameters.scala 119:52]
        node _T_379 = eq(_T_377, asSInt(UInt<1>("h00"))) @[Parameters.scala 119:67]
        node _T_380 = and(_T_371, _T_379) @[Parameters.scala 157:56]
        node _T_382 = or(UInt<1>("h00"), _T_380) @[Parameters.scala 159:30]
        node _T_383 = bits(reset, 0, 0) @[Monitor.scala 94:14]
        node _T_384 = or(_T_382, _T_383) @[Monitor.scala 94:14]
        node _T_386 = eq(_T_384, UInt<1>("h00")) @[Monitor.scala 94:14]
        when _T_386 : @[Monitor.scala 94:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries Logical type unsupported by manager (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:94 assert (edge.manager.supportsLogicalSafe(edge.address(bundle), bundle.size), \"'A' channel carries Logical type unsupported by manager\" + extra)\n") @[Monitor.scala 94:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 94:14]
          skip @[Monitor.scala 94:14]
        node _T_387 = bits(reset, 0, 0) @[Monitor.scala 95:14]
        node _T_388 = or(_T_36[0], _T_387) @[Monitor.scala 95:14]
        node _T_390 = eq(_T_388, UInt<1>("h00")) @[Monitor.scala 95:14]
        when _T_390 : @[Monitor.scala 95:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Logical carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:95 assert (source_ok, \"'A' channel Logical carries invalid source ID\" + extra)\n") @[Monitor.scala 95:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 95:14]
          skip @[Monitor.scala 95:14]
        node _T_391 = bits(reset, 0, 0) @[Monitor.scala 96:14]
        node _T_392 = or(_T_47, _T_391) @[Monitor.scala 96:14]
        node _T_394 = eq(_T_392, UInt<1>("h00")) @[Monitor.scala 96:14]
        when _T_394 : @[Monitor.scala 96:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Logical address not aligned to size (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:96 assert (is_aligned, \"'A' channel Logical address not aligned to size\" + extra)\n") @[Monitor.scala 96:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 96:14]
          skip @[Monitor.scala 96:14]
        node _T_396 = leq(io.in.a.bits.param, UInt<3>("h03")) @[Bundles.scala 103:30]
        node _T_397 = bits(reset, 0, 0) @[Monitor.scala 97:14]
        node _T_398 = or(_T_396, _T_397) @[Monitor.scala 97:14]
        node _T_400 = eq(_T_398, UInt<1>("h00")) @[Monitor.scala 97:14]
        when _T_400 : @[Monitor.scala 97:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Logical carries invalid opcode param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:97 assert (TLAtomics.isLogical(bundle.param), \"'A' channel Logical carries invalid opcode param\" + extra)\n") @[Monitor.scala 97:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 97:14]
          skip @[Monitor.scala 97:14]
        node _T_401 = eq(io.in.a.bits.mask, _T_85) @[Monitor.scala 98:27]
        node _T_402 = bits(reset, 0, 0) @[Monitor.scala 98:14]
        node _T_403 = or(_T_401, _T_402) @[Monitor.scala 98:14]
        node _T_405 = eq(_T_403, UInt<1>("h00")) @[Monitor.scala 98:14]
        when _T_405 : @[Monitor.scala 98:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Logical contains invalid mask (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:98 assert (bundle.mask === mask, \"'A' channel Logical contains invalid mask\" + extra)\n") @[Monitor.scala 98:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 98:14]
          skip @[Monitor.scala 98:14]
        skip @[Monitor.scala 93:53]
      node _T_407 = eq(io.in.a.bits.opcode, UInt<3>("h05")) @[Monitor.scala 101:25]
      when _T_407 : @[Monitor.scala 101:46]
        node _T_410 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
        node _T_412 = xor(io.in.a.bits.address, UInt<29>("h010024000")) @[Parameters.scala 119:31]
        node _T_413 = cvt(_T_412) @[Parameters.scala 119:49]
        node _T_415 = and(_T_413, asSInt(UInt<13>("h01000"))) @[Parameters.scala 119:52]
        node _T_416 = asSInt(_T_415) @[Parameters.scala 119:52]
        node _T_418 = eq(_T_416, asSInt(UInt<1>("h00"))) @[Parameters.scala 119:67]
        node _T_419 = and(_T_410, _T_418) @[Parameters.scala 157:56]
        node _T_421 = or(UInt<1>("h00"), _T_419) @[Parameters.scala 159:30]
        node _T_422 = bits(reset, 0, 0) @[Monitor.scala 102:14]
        node _T_423 = or(_T_421, _T_422) @[Monitor.scala 102:14]
        node _T_425 = eq(_T_423, UInt<1>("h00")) @[Monitor.scala 102:14]
        when _T_425 : @[Monitor.scala 102:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries Hint type unsupported by manager (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:102 assert (edge.manager.supportsHintSafe(edge.address(bundle), bundle.size), \"'A' channel carries Hint type unsupported by manager\" + extra)\n") @[Monitor.scala 102:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 102:14]
          skip @[Monitor.scala 102:14]
        node _T_426 = bits(reset, 0, 0) @[Monitor.scala 103:14]
        node _T_427 = or(_T_36[0], _T_426) @[Monitor.scala 103:14]
        node _T_429 = eq(_T_427, UInt<1>("h00")) @[Monitor.scala 103:14]
        when _T_429 : @[Monitor.scala 103:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Hint carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:103 assert (source_ok, \"'A' channel Hint carries invalid source ID\" + extra)\n") @[Monitor.scala 103:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 103:14]
          skip @[Monitor.scala 103:14]
        node _T_430 = bits(reset, 0, 0) @[Monitor.scala 104:14]
        node _T_431 = or(_T_47, _T_430) @[Monitor.scala 104:14]
        node _T_433 = eq(_T_431, UInt<1>("h00")) @[Monitor.scala 104:14]
        when _T_433 : @[Monitor.scala 104:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Hint address not aligned to size (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:104 assert (is_aligned, \"'A' channel Hint address not aligned to size\" + extra)\n") @[Monitor.scala 104:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 104:14]
          skip @[Monitor.scala 104:14]
        node _T_434 = eq(io.in.a.bits.mask, _T_85) @[Monitor.scala 105:27]
        node _T_435 = bits(reset, 0, 0) @[Monitor.scala 105:14]
        node _T_436 = or(_T_434, _T_435) @[Monitor.scala 105:14]
        node _T_438 = eq(_T_436, UInt<1>("h00")) @[Monitor.scala 105:14]
        when _T_438 : @[Monitor.scala 105:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Hint contains invalid mask (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:105 assert (bundle.mask === mask, \"'A' channel Hint contains invalid mask\" + extra)\n") @[Monitor.scala 105:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 105:14]
          skip @[Monitor.scala 105:14]
        skip @[Monitor.scala 101:46]
      skip @[Monitor.scala 301:27]
    when io.in.d.valid : @[Monitor.scala 302:27]
      node _T_440 = leq(io.in.d.bits.opcode, UInt<3>("h06")) @[Bundles.scala 43:24]
      node _T_441 = bits(reset, 0, 0) @[Monitor.scala 247:12]
      node _T_442 = or(_T_440, _T_441) @[Monitor.scala 247:12]
      node _T_444 = eq(_T_442, UInt<1>("h00")) @[Monitor.scala 247:12]
      when _T_444 : @[Monitor.scala 247:12]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel has invalid opcode (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:247 assert (TLMessages.isD(bundle.opcode), \"'D' channel has invalid opcode\" + extra)\n") @[Monitor.scala 247:12]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 247:12]
        skip @[Monitor.scala 247:12]
      node _T_446 = or(io.in.d.bits.source, UInt<7>("h00")) @[Parameters.scala 49:29]
      node _T_447 = bits(_T_446, 6, 0) @[Parameters.scala 49:64]
      node _T_448 = shr(io.in.d.bits.source, 7) @[Parameters.scala 51:10]
      node _T_450 = eq(_T_448, UInt<1>("h00")) @[Parameters.scala 51:32]
      node _T_452 = leq(UInt<1>("h00"), _T_447) @[Parameters.scala 53:34]
      node _T_453 = and(_T_450, _T_452) @[Parameters.scala 51:69]
      node _T_455 = leq(_T_447, UInt<7>("h07f")) @[Parameters.scala 54:20]
      node _T_456 = and(_T_453, _T_455) @[Parameters.scala 53:50]
      wire _T_459 : UInt<1>[1] @[Parameters.scala 255:27]
      _T_459 is invalid @[Parameters.scala 255:27]
      _T_459[0] <= _T_456 @[Parameters.scala 255:27]
      node _T_465 = lt(io.in.d.bits.sink, UInt<1>("h00")) @[Monitor.scala 250:68]
      node _T_466 = or(UInt<1>("h01"), _T_465) @[Monitor.scala 250:53]
      node _T_468 = eq(io.in.d.bits.opcode, UInt<3>("h06")) @[Monitor.scala 252:25]
      when _T_468 : @[Monitor.scala 252:52]
        node _T_469 = bits(reset, 0, 0) @[Monitor.scala 253:14]
        node _T_470 = or(_T_459[0], _T_469) @[Monitor.scala 253:14]
        node _T_472 = eq(_T_470, UInt<1>("h00")) @[Monitor.scala 253:14]
        when _T_472 : @[Monitor.scala 253:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel ReleaseAck carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:253 assert (source_ok, \"'D' channel ReleaseAck carries invalid source ID\" + extra)\n") @[Monitor.scala 253:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 253:14]
          skip @[Monitor.scala 253:14]
        node _T_473 = bits(reset, 0, 0) @[Monitor.scala 254:14]
        node _T_474 = or(_T_466, _T_473) @[Monitor.scala 254:14]
        node _T_476 = eq(_T_474, UInt<1>("h00")) @[Monitor.scala 254:14]
        when _T_476 : @[Monitor.scala 254:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel ReleaseAck carries invalid sink ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:254 assert (sink_ok, \"'D' channel ReleaseAck carries invalid sink ID\" + extra)\n") @[Monitor.scala 254:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 254:14]
          skip @[Monitor.scala 254:14]
        node _T_478 = geq(io.in.d.bits.size, UInt<2>("h02")) @[Monitor.scala 255:27]
        node _T_479 = bits(reset, 0, 0) @[Monitor.scala 255:14]
        node _T_480 = or(_T_478, _T_479) @[Monitor.scala 255:14]
        node _T_482 = eq(_T_480, UInt<1>("h00")) @[Monitor.scala 255:14]
        when _T_482 : @[Monitor.scala 255:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel ReleaseAck smaller than a beat (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:255 assert (bundle.size >= UInt(log2Ceil(edge.manager.beatBytes)), \"'D' channel ReleaseAck smaller than a beat\" + extra)\n") @[Monitor.scala 255:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 255:14]
          skip @[Monitor.scala 255:14]
        node _T_484 = eq(io.in.d.bits.param, UInt<1>("h00")) @[Monitor.scala 256:28]
        node _T_485 = bits(reset, 0, 0) @[Monitor.scala 256:14]
        node _T_486 = or(_T_484, _T_485) @[Monitor.scala 256:14]
        node _T_488 = eq(_T_486, UInt<1>("h00")) @[Monitor.scala 256:14]
        when _T_488 : @[Monitor.scala 256:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel ReleaseeAck carries invalid param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:256 assert (bundle.param === UInt(0), \"'D' channel ReleaseeAck carries invalid param\" + extra)\n") @[Monitor.scala 256:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 256:14]
          skip @[Monitor.scala 256:14]
        skip @[Monitor.scala 252:52]
      node _T_490 = eq(io.in.d.bits.opcode, UInt<3>("h04")) @[Monitor.scala 259:25]
      when _T_490 : @[Monitor.scala 259:47]
        node _T_491 = bits(reset, 0, 0) @[Monitor.scala 260:14]
        node _T_492 = or(_T_459[0], _T_491) @[Monitor.scala 260:14]
        node _T_494 = eq(_T_492, UInt<1>("h00")) @[Monitor.scala 260:14]
        when _T_494 : @[Monitor.scala 260:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel Grant carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:260 assert (source_ok, \"'D' channel Grant carries invalid source ID\" + extra)\n") @[Monitor.scala 260:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 260:14]
          skip @[Monitor.scala 260:14]
        node _T_495 = bits(reset, 0, 0) @[Monitor.scala 261:14]
        node _T_496 = or(_T_466, _T_495) @[Monitor.scala 261:14]
        node _T_498 = eq(_T_496, UInt<1>("h00")) @[Monitor.scala 261:14]
        when _T_498 : @[Monitor.scala 261:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel Grant carries invalid sink ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:261 assert (sink_ok, \"'D' channel Grant carries invalid sink ID\" + extra)\n") @[Monitor.scala 261:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 261:14]
          skip @[Monitor.scala 261:14]
        node _T_500 = geq(io.in.d.bits.size, UInt<2>("h02")) @[Monitor.scala 262:27]
        node _T_501 = bits(reset, 0, 0) @[Monitor.scala 262:14]
        node _T_502 = or(_T_500, _T_501) @[Monitor.scala 262:14]
        node _T_504 = eq(_T_502, UInt<1>("h00")) @[Monitor.scala 262:14]
        when _T_504 : @[Monitor.scala 262:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel Grant smaller than a beat (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:262 assert (bundle.size >= UInt(log2Ceil(edge.manager.beatBytes)), \"'D' channel Grant smaller than a beat\" + extra)\n") @[Monitor.scala 262:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 262:14]
          skip @[Monitor.scala 262:14]
        node _T_506 = leq(io.in.d.bits.param, UInt<2>("h02")) @[Bundles.scala 65:26]
        node _T_507 = bits(reset, 0, 0) @[Monitor.scala 263:14]
        node _T_508 = or(_T_506, _T_507) @[Monitor.scala 263:14]
        node _T_510 = eq(_T_508, UInt<1>("h00")) @[Monitor.scala 263:14]
        when _T_510 : @[Monitor.scala 263:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel Grant carries invalid cap param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:263 assert (TLPermissions.isCap(bundle.param), \"'D' channel Grant carries invalid cap param\" + extra)\n") @[Monitor.scala 263:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 263:14]
          skip @[Monitor.scala 263:14]
        skip @[Monitor.scala 259:47]
      node _T_512 = eq(io.in.d.bits.opcode, UInt<3>("h05")) @[Monitor.scala 266:25]
      when _T_512 : @[Monitor.scala 266:51]
        node _T_513 = bits(reset, 0, 0) @[Monitor.scala 267:14]
        node _T_514 = or(_T_459[0], _T_513) @[Monitor.scala 267:14]
        node _T_516 = eq(_T_514, UInt<1>("h00")) @[Monitor.scala 267:14]
        when _T_516 : @[Monitor.scala 267:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel GrantData carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:267 assert (source_ok, \"'D' channel GrantData carries invalid source ID\" + extra)\n") @[Monitor.scala 267:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 267:14]
          skip @[Monitor.scala 267:14]
        node _T_517 = bits(reset, 0, 0) @[Monitor.scala 268:14]
        node _T_518 = or(_T_466, _T_517) @[Monitor.scala 268:14]
        node _T_520 = eq(_T_518, UInt<1>("h00")) @[Monitor.scala 268:14]
        when _T_520 : @[Monitor.scala 268:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel GrantData carries invalid sink ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:268 assert (sink_ok, \"'D' channel GrantData carries invalid sink ID\" + extra)\n") @[Monitor.scala 268:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 268:14]
          skip @[Monitor.scala 268:14]
        node _T_522 = geq(io.in.d.bits.size, UInt<2>("h02")) @[Monitor.scala 269:27]
        node _T_523 = bits(reset, 0, 0) @[Monitor.scala 269:14]
        node _T_524 = or(_T_522, _T_523) @[Monitor.scala 269:14]
        node _T_526 = eq(_T_524, UInt<1>("h00")) @[Monitor.scala 269:14]
        when _T_526 : @[Monitor.scala 269:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel GrantData smaller than a beat (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:269 assert (bundle.size >= UInt(log2Ceil(edge.manager.beatBytes)), \"'D' channel GrantData smaller than a beat\" + extra)\n") @[Monitor.scala 269:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 269:14]
          skip @[Monitor.scala 269:14]
        node _T_528 = leq(io.in.d.bits.param, UInt<2>("h02")) @[Bundles.scala 65:26]
        node _T_529 = bits(reset, 0, 0) @[Monitor.scala 270:14]
        node _T_530 = or(_T_528, _T_529) @[Monitor.scala 270:14]
        node _T_532 = eq(_T_530, UInt<1>("h00")) @[Monitor.scala 270:14]
        when _T_532 : @[Monitor.scala 270:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel GrantData carries invalid cap param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:270 assert (TLPermissions.isCap(bundle.param), \"'D' channel GrantData carries invalid cap param\" + extra)\n") @[Monitor.scala 270:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 270:14]
          skip @[Monitor.scala 270:14]
        skip @[Monitor.scala 266:51]
      node _T_534 = eq(io.in.d.bits.opcode, UInt<1>("h00")) @[Monitor.scala 273:25]
      when _T_534 : @[Monitor.scala 273:51]
        node _T_535 = bits(reset, 0, 0) @[Monitor.scala 274:14]
        node _T_536 = or(_T_459[0], _T_535) @[Monitor.scala 274:14]
        node _T_538 = eq(_T_536, UInt<1>("h00")) @[Monitor.scala 274:14]
        when _T_538 : @[Monitor.scala 274:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAck carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:274 assert (source_ok, \"'D' channel AccessAck carries invalid source ID\" + extra)\n") @[Monitor.scala 274:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 274:14]
          skip @[Monitor.scala 274:14]
        node _T_539 = bits(reset, 0, 0) @[Monitor.scala 275:14]
        node _T_540 = or(_T_466, _T_539) @[Monitor.scala 275:14]
        node _T_542 = eq(_T_540, UInt<1>("h00")) @[Monitor.scala 275:14]
        when _T_542 : @[Monitor.scala 275:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAck carries invalid sink ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:275 assert (sink_ok, \"'D' channel AccessAck carries invalid sink ID\" + extra)\n") @[Monitor.scala 275:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 275:14]
          skip @[Monitor.scala 275:14]
        node _T_544 = eq(io.in.d.bits.param, UInt<1>("h00")) @[Monitor.scala 277:28]
        node _T_545 = bits(reset, 0, 0) @[Monitor.scala 277:14]
        node _T_546 = or(_T_544, _T_545) @[Monitor.scala 277:14]
        node _T_548 = eq(_T_546, UInt<1>("h00")) @[Monitor.scala 277:14]
        when _T_548 : @[Monitor.scala 277:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAck carries invalid param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:277 assert (bundle.param === UInt(0), \"'D' channel AccessAck carries invalid param\" + extra)\n") @[Monitor.scala 277:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 277:14]
          skip @[Monitor.scala 277:14]
        skip @[Monitor.scala 273:51]
      node _T_550 = eq(io.in.d.bits.opcode, UInt<1>("h01")) @[Monitor.scala 280:25]
      when _T_550 : @[Monitor.scala 280:55]
        node _T_551 = bits(reset, 0, 0) @[Monitor.scala 281:14]
        node _T_552 = or(_T_459[0], _T_551) @[Monitor.scala 281:14]
        node _T_554 = eq(_T_552, UInt<1>("h00")) @[Monitor.scala 281:14]
        when _T_554 : @[Monitor.scala 281:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAckData carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:281 assert (source_ok, \"'D' channel AccessAckData carries invalid source ID\" + extra)\n") @[Monitor.scala 281:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 281:14]
          skip @[Monitor.scala 281:14]
        node _T_555 = bits(reset, 0, 0) @[Monitor.scala 282:14]
        node _T_556 = or(_T_466, _T_555) @[Monitor.scala 282:14]
        node _T_558 = eq(_T_556, UInt<1>("h00")) @[Monitor.scala 282:14]
        when _T_558 : @[Monitor.scala 282:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAckData carries invalid sink ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:282 assert (sink_ok, \"'D' channel AccessAckData carries invalid sink ID\" + extra)\n") @[Monitor.scala 282:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 282:14]
          skip @[Monitor.scala 282:14]
        node _T_560 = eq(io.in.d.bits.param, UInt<1>("h00")) @[Monitor.scala 284:28]
        node _T_561 = bits(reset, 0, 0) @[Monitor.scala 284:14]
        node _T_562 = or(_T_560, _T_561) @[Monitor.scala 284:14]
        node _T_564 = eq(_T_562, UInt<1>("h00")) @[Monitor.scala 284:14]
        when _T_564 : @[Monitor.scala 284:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAckData carries invalid param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:284 assert (bundle.param === UInt(0), \"'D' channel AccessAckData carries invalid param\" + extra)\n") @[Monitor.scala 284:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 284:14]
          skip @[Monitor.scala 284:14]
        skip @[Monitor.scala 280:55]
      node _T_566 = eq(io.in.d.bits.opcode, UInt<2>("h02")) @[Monitor.scala 287:25]
      when _T_566 : @[Monitor.scala 287:49]
        node _T_567 = bits(reset, 0, 0) @[Monitor.scala 288:14]
        node _T_568 = or(_T_459[0], _T_567) @[Monitor.scala 288:14]
        node _T_570 = eq(_T_568, UInt<1>("h00")) @[Monitor.scala 288:14]
        when _T_570 : @[Monitor.scala 288:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel HintAck carries invalid source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:288 assert (source_ok, \"'D' channel HintAck carries invalid source ID\" + extra)\n") @[Monitor.scala 288:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 288:14]
          skip @[Monitor.scala 288:14]
        node _T_571 = bits(reset, 0, 0) @[Monitor.scala 289:14]
        node _T_572 = or(_T_466, _T_571) @[Monitor.scala 289:14]
        node _T_574 = eq(_T_572, UInt<1>("h00")) @[Monitor.scala 289:14]
        when _T_574 : @[Monitor.scala 289:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel HintAck carries invalid sink ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:289 assert (sink_ok, \"'D' channel HintAck carries invalid sink ID\" + extra)\n") @[Monitor.scala 289:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 289:14]
          skip @[Monitor.scala 289:14]
        node _T_576 = eq(io.in.d.bits.param, UInt<1>("h00")) @[Monitor.scala 291:28]
        node _T_577 = bits(reset, 0, 0) @[Monitor.scala 291:14]
        node _T_578 = or(_T_576, _T_577) @[Monitor.scala 291:14]
        node _T_580 = eq(_T_578, UInt<1>("h00")) @[Monitor.scala 291:14]
        when _T_580 : @[Monitor.scala 291:14]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel HintAck carries invalid param (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:291 assert (bundle.param === UInt(0), \"'D' channel HintAck carries invalid param\" + extra)\n") @[Monitor.scala 291:14]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 291:14]
          skip @[Monitor.scala 291:14]
        skip @[Monitor.scala 287:49]
      skip @[Monitor.scala 302:27]
    node _T_582 = eq(io.in.b.valid, UInt<1>("h00")) @[Monitor.scala 308:15]
    node _T_583 = bits(reset, 0, 0) @[Monitor.scala 308:14]
    node _T_584 = or(_T_582, _T_583) @[Monitor.scala 308:14]
    node _T_586 = eq(_T_584, UInt<1>("h00")) @[Monitor.scala 308:14]
    when _T_586 : @[Monitor.scala 308:14]
      printf(clock, UInt<1>(1), "Assertion failed: 'B' channel valid and not TL-C (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:308 assert (!bundle.b.valid, \"'B' channel valid and not TL-C\" + extra)\n") @[Monitor.scala 308:14]
      stop(clock, UInt<1>(1), 1) @[Monitor.scala 308:14]
      skip @[Monitor.scala 308:14]
    node _T_588 = eq(io.in.c.valid, UInt<1>("h00")) @[Monitor.scala 309:15]
    node _T_589 = bits(reset, 0, 0) @[Monitor.scala 309:14]
    node _T_590 = or(_T_588, _T_589) @[Monitor.scala 309:14]
    node _T_592 = eq(_T_590, UInt<1>("h00")) @[Monitor.scala 309:14]
    when _T_592 : @[Monitor.scala 309:14]
      printf(clock, UInt<1>(1), "Assertion failed: 'C' channel valid and not TL-C (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:309 assert (!bundle.c.valid, \"'C' channel valid and not TL-C\" + extra)\n") @[Monitor.scala 309:14]
      stop(clock, UInt<1>(1), 1) @[Monitor.scala 309:14]
      skip @[Monitor.scala 309:14]
    node _T_594 = eq(io.in.e.valid, UInt<1>("h00")) @[Monitor.scala 310:15]
    node _T_595 = bits(reset, 0, 0) @[Monitor.scala 310:14]
    node _T_596 = or(_T_594, _T_595) @[Monitor.scala 310:14]
    node _T_598 = eq(_T_596, UInt<1>("h00")) @[Monitor.scala 310:14]
    when _T_598 : @[Monitor.scala 310:14]
      printf(clock, UInt<1>(1), "Assertion failed: 'E' channel valid and not TL-C (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:310 assert (!bundle.e.valid, \"'E' channel valid and not TL-C\" + extra)\n") @[Monitor.scala 310:14]
      stop(clock, UInt<1>(1), 1) @[Monitor.scala 310:14]
      skip @[Monitor.scala 310:14]
    node _T_599 = and(io.in.a.ready, io.in.a.valid) @[Bundles.scala 207:36]
    node _T_601 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 104:70]
    node _T_602 = dshl(_T_601, io.in.a.bits.size) @[package.scala 104:77]
    node _T_603 = bits(_T_602, 1, 0) @[package.scala 104:82]
    node _T_604 = not(_T_603) @[package.scala 104:46]
    node _T_605 = shr(_T_604, 2) @[Edges.scala 211:59]
    node _T_606 = bits(io.in.a.bits.opcode, 2, 2) @[Edges.scala 92:37]
    node _T_608 = eq(_T_606, UInt<1>("h00")) @[Edges.scala 92:28]
    node _T_610 = mux(_T_608, _T_605, UInt<1>("h00")) @[Edges.scala 212:14]
    reg _T_613 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Edges.scala 220:27]
    node _T_615 = sub(_T_613, UInt<1>("h01")) @[Edges.scala 221:28]
    node _T_616 = asUInt(_T_615) @[Edges.scala 221:28]
    node _T_617 = tail(_T_616, 1) @[Edges.scala 221:28]
    node _T_619 = eq(_T_613, UInt<1>("h00")) @[Edges.scala 222:25]
    node _T_621 = eq(_T_613, UInt<1>("h01")) @[Edges.scala 223:25]
    node _T_623 = eq(_T_610, UInt<1>("h00")) @[Edges.scala 223:47]
    node _T_624 = or(_T_621, _T_623) @[Edges.scala 223:37]
    node _T_625 = and(_T_624, _T_599) @[Edges.scala 224:22]
    node _T_626 = not(_T_617) @[Edges.scala 225:27]
    node _T_627 = and(_T_610, _T_626) @[Edges.scala 225:25]
    when _T_599 : @[Edges.scala 226:17]
      node _T_628 = mux(_T_619, _T_610, _T_617) @[Edges.scala 227:21]
      _T_613 <= _T_628 @[Edges.scala 227:15]
      skip @[Edges.scala 226:17]
    reg _T_630 : UInt, clock @[Monitor.scala 316:22]
    reg _T_632 : UInt, clock @[Monitor.scala 317:22]
    reg _T_634 : UInt, clock @[Monitor.scala 318:22]
    reg _T_636 : UInt, clock @[Monitor.scala 319:22]
    reg _T_638 : UInt, clock @[Monitor.scala 320:22]
    node _T_640 = eq(_T_619, UInt<1>("h00")) @[Monitor.scala 321:22]
    node _T_641 = and(io.in.a.valid, _T_640) @[Monitor.scala 321:19]
    when _T_641 : @[Monitor.scala 321:32]
      node _T_642 = eq(io.in.a.bits.opcode, _T_630) @[Monitor.scala 322:29]
      node _T_643 = bits(reset, 0, 0) @[Monitor.scala 322:14]
      node _T_644 = or(_T_642, _T_643) @[Monitor.scala 322:14]
      node _T_646 = eq(_T_644, UInt<1>("h00")) @[Monitor.scala 322:14]
      when _T_646 : @[Monitor.scala 322:14]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel opcode changed within multibeat operation (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:322 assert (a.bits.opcode === opcode, \"'A' channel opcode changed within multibeat operation\" + extra)\n") @[Monitor.scala 322:14]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 322:14]
        skip @[Monitor.scala 322:14]
      node _T_647 = eq(io.in.a.bits.param, _T_632) @[Monitor.scala 323:29]
      node _T_648 = bits(reset, 0, 0) @[Monitor.scala 323:14]
      node _T_649 = or(_T_647, _T_648) @[Monitor.scala 323:14]
      node _T_651 = eq(_T_649, UInt<1>("h00")) @[Monitor.scala 323:14]
      when _T_651 : @[Monitor.scala 323:14]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel param changed within multibeat operation (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:323 assert (a.bits.param  === param,  \"'A' channel param changed within multibeat operation\" + extra)\n") @[Monitor.scala 323:14]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 323:14]
        skip @[Monitor.scala 323:14]
      node _T_652 = eq(io.in.a.bits.size, _T_634) @[Monitor.scala 324:29]
      node _T_653 = bits(reset, 0, 0) @[Monitor.scala 324:14]
      node _T_654 = or(_T_652, _T_653) @[Monitor.scala 324:14]
      node _T_656 = eq(_T_654, UInt<1>("h00")) @[Monitor.scala 324:14]
      when _T_656 : @[Monitor.scala 324:14]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel size changed within multibeat operation (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:324 assert (a.bits.size   === size,   \"'A' channel size changed within multibeat operation\" + extra)\n") @[Monitor.scala 324:14]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 324:14]
        skip @[Monitor.scala 324:14]
      node _T_657 = eq(io.in.a.bits.source, _T_636) @[Monitor.scala 325:29]
      node _T_658 = bits(reset, 0, 0) @[Monitor.scala 325:14]
      node _T_659 = or(_T_657, _T_658) @[Monitor.scala 325:14]
      node _T_661 = eq(_T_659, UInt<1>("h00")) @[Monitor.scala 325:14]
      when _T_661 : @[Monitor.scala 325:14]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel source changed within multibeat operation (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:325 assert (a.bits.source === source, \"'A' channel source changed within multibeat operation\" + extra)\n") @[Monitor.scala 325:14]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 325:14]
        skip @[Monitor.scala 325:14]
      node _T_662 = eq(io.in.a.bits.address, _T_638) @[Monitor.scala 326:29]
      node _T_663 = bits(reset, 0, 0) @[Monitor.scala 326:14]
      node _T_664 = or(_T_662, _T_663) @[Monitor.scala 326:14]
      node _T_666 = eq(_T_664, UInt<1>("h00")) @[Monitor.scala 326:14]
      when _T_666 : @[Monitor.scala 326:14]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel address changed with multibeat operation (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:326 assert (a.bits.address=== address,\"'A' channel address changed with multibeat operation\" + extra)\n") @[Monitor.scala 326:14]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 326:14]
        skip @[Monitor.scala 326:14]
      skip @[Monitor.scala 321:32]
    node _T_667 = and(io.in.a.ready, io.in.a.valid) @[Bundles.scala 207:36]
    node _T_668 = and(_T_667, _T_619) @[Monitor.scala 328:20]
    when _T_668 : @[Monitor.scala 328:32]
      _T_630 <= io.in.a.bits.opcode @[Monitor.scala 329:15]
      _T_632 <= io.in.a.bits.param @[Monitor.scala 330:15]
      _T_634 <= io.in.a.bits.size @[Monitor.scala 331:15]
      _T_636 <= io.in.a.bits.source @[Monitor.scala 332:15]
      _T_638 <= io.in.a.bits.address @[Monitor.scala 333:15]
      skip @[Monitor.scala 328:32]
    node _T_669 = and(io.in.d.ready, io.in.d.valid) @[Bundles.scala 207:36]
    node _T_671 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 104:70]
    node _T_672 = dshl(_T_671, io.in.d.bits.size) @[package.scala 104:77]
    node _T_673 = bits(_T_672, 1, 0) @[package.scala 104:82]
    node _T_674 = not(_T_673) @[package.scala 104:46]
    node _T_675 = shr(_T_674, 2) @[Edges.scala 211:59]
    node _T_676 = bits(io.in.d.bits.opcode, 0, 0) @[Edges.scala 106:36]
    node _T_678 = mux(_T_676, _T_675, UInt<1>("h00")) @[Edges.scala 212:14]
    reg _T_681 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Edges.scala 220:27]
    node _T_683 = sub(_T_681, UInt<1>("h01")) @[Edges.scala 221:28]
    node _T_684 = asUInt(_T_683) @[Edges.scala 221:28]
    node _T_685 = tail(_T_684, 1) @[Edges.scala 221:28]
    node _T_687 = eq(_T_681, UInt<1>("h00")) @[Edges.scala 222:25]
    node _T_689 = eq(_T_681, UInt<1>("h01")) @[Edges.scala 223:25]
    node _T_691 = eq(_T_678, UInt<1>("h00")) @[Edges.scala 223:47]
    node _T_692 = or(_T_689, _T_691) @[Edges.scala 223:37]
    node _T_693 = and(_T_692, _T_669) @[Edges.scala 224:22]
    node _T_694 = not(_T_685) @[Edges.scala 225:27]
    node _T_695 = and(_T_678, _T_694) @[Edges.scala 225:25]
    when _T_669 : @[Edges.scala 226:17]
      node _T_696 = mux(_T_687, _T_678, _T_685) @[Edges.scala 227:21]
      _T_681 <= _T_696 @[Edges.scala 227:15]
      skip @[Edges.scala 226:17]
    reg _T_698 : UInt, clock @[Monitor.scala 387:22]
    reg _T_700 : UInt, clock @[Monitor.scala 388:22]
    reg _T_702 : UInt, clock @[Monitor.scala 389:22]
    reg _T_704 : UInt, clock @[Monitor.scala 390:22]
    reg _T_706 : UInt, clock @[Monitor.scala 391:22]
    node _T_707 = and(io.in.d.ready, io.in.d.valid) @[Bundles.scala 207:36]
    reg _T_709 : UInt<1>, clock @[Reg.scala 11:16]
    when _T_707 : @[Reg.scala 12:19]
      _T_709 <= io.in.d.bits.error @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_711 = eq(_T_687, UInt<1>("h00")) @[Monitor.scala 393:22]
    node _T_712 = and(io.in.d.valid, _T_711) @[Monitor.scala 393:19]
    when _T_712 : @[Monitor.scala 393:32]
      node _T_713 = eq(io.in.d.bits.opcode, _T_698) @[Monitor.scala 394:29]
      node _T_714 = bits(reset, 0, 0) @[Monitor.scala 394:14]
      node _T_715 = or(_T_713, _T_714) @[Monitor.scala 394:14]
      node _T_717 = eq(_T_715, UInt<1>("h00")) @[Monitor.scala 394:14]
      when _T_717 : @[Monitor.scala 394:14]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel opcode changed within multibeat operation (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:394 assert (d.bits.opcode === opcode, \"'D' channel opcode changed within multibeat operation\" + extra)\n") @[Monitor.scala 394:14]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 394:14]
        skip @[Monitor.scala 394:14]
      node _T_718 = eq(io.in.d.bits.param, _T_700) @[Monitor.scala 395:29]
      node _T_719 = bits(reset, 0, 0) @[Monitor.scala 395:14]
      node _T_720 = or(_T_718, _T_719) @[Monitor.scala 395:14]
      node _T_722 = eq(_T_720, UInt<1>("h00")) @[Monitor.scala 395:14]
      when _T_722 : @[Monitor.scala 395:14]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel param changed within multibeat operation (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:395 assert (d.bits.param  === param,  \"'D' channel param changed within multibeat operation\" + extra)\n") @[Monitor.scala 395:14]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 395:14]
        skip @[Monitor.scala 395:14]
      node _T_723 = eq(io.in.d.bits.size, _T_702) @[Monitor.scala 396:29]
      node _T_724 = bits(reset, 0, 0) @[Monitor.scala 396:14]
      node _T_725 = or(_T_723, _T_724) @[Monitor.scala 396:14]
      node _T_727 = eq(_T_725, UInt<1>("h00")) @[Monitor.scala 396:14]
      when _T_727 : @[Monitor.scala 396:14]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel size changed within multibeat operation (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:396 assert (d.bits.size   === size,   \"'D' channel size changed within multibeat operation\" + extra)\n") @[Monitor.scala 396:14]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 396:14]
        skip @[Monitor.scala 396:14]
      node _T_728 = eq(io.in.d.bits.source, _T_704) @[Monitor.scala 397:29]
      node _T_729 = bits(reset, 0, 0) @[Monitor.scala 397:14]
      node _T_730 = or(_T_728, _T_729) @[Monitor.scala 397:14]
      node _T_732 = eq(_T_730, UInt<1>("h00")) @[Monitor.scala 397:14]
      when _T_732 : @[Monitor.scala 397:14]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel source changed within multibeat operation (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:397 assert (d.bits.source === source, \"'D' channel source changed within multibeat operation\" + extra)\n") @[Monitor.scala 397:14]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 397:14]
        skip @[Monitor.scala 397:14]
      node _T_733 = eq(io.in.d.bits.sink, _T_706) @[Monitor.scala 398:29]
      node _T_734 = bits(reset, 0, 0) @[Monitor.scala 398:14]
      node _T_735 = or(_T_733, _T_734) @[Monitor.scala 398:14]
      node _T_737 = eq(_T_735, UInt<1>("h00")) @[Monitor.scala 398:14]
      when _T_737 : @[Monitor.scala 398:14]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel sink changed with multibeat operation (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:398 assert (d.bits.sink   === sink,   \"'D' channel sink changed with multibeat operation\" + extra)\n") @[Monitor.scala 398:14]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 398:14]
        skip @[Monitor.scala 398:14]
      node _T_739 = eq(_T_709, UInt<1>("h00")) @[Monitor.scala 399:31]
      node _T_740 = or(io.in.d.bits.error, _T_739) @[Monitor.scala 399:28]
      node _T_741 = bits(reset, 0, 0) @[Monitor.scala 399:14]
      node _T_742 = or(_T_740, _T_741) @[Monitor.scala 399:14]
      node _T_744 = eq(_T_742, UInt<1>("h00")) @[Monitor.scala 399:14]
      when _T_744 : @[Monitor.scala 399:14]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel burst lowered error (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:399 assert (d.bits.error || !error,   \"'D' channel burst lowered error\" + extra)\n") @[Monitor.scala 399:14]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 399:14]
        skip @[Monitor.scala 399:14]
      skip @[Monitor.scala 393:32]
    node _T_745 = and(io.in.d.ready, io.in.d.valid) @[Bundles.scala 207:36]
    node _T_746 = and(_T_745, _T_687) @[Monitor.scala 401:20]
    when _T_746 : @[Monitor.scala 401:32]
      _T_698 <= io.in.d.bits.opcode @[Monitor.scala 402:15]
      _T_700 <= io.in.d.bits.param @[Monitor.scala 403:15]
      _T_702 <= io.in.d.bits.size @[Monitor.scala 404:15]
      _T_704 <= io.in.d.bits.source @[Monitor.scala 405:15]
      _T_706 <= io.in.d.bits.sink @[Monitor.scala 406:15]
      skip @[Monitor.scala 401:32]
    reg _T_749 : UInt<128>, clock with : (reset => (reset, UInt<128>("h00"))) @[Monitor.scala 420:27]
    node _T_750 = and(io.in.a.ready, io.in.a.valid) @[Bundles.scala 207:36]
    node _T_752 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 104:70]
    node _T_753 = dshl(_T_752, io.in.a.bits.size) @[package.scala 104:77]
    node _T_754 = bits(_T_753, 1, 0) @[package.scala 104:82]
    node _T_755 = not(_T_754) @[package.scala 104:46]
    node _T_756 = shr(_T_755, 2) @[Edges.scala 211:59]
    node _T_757 = bits(io.in.a.bits.opcode, 2, 2) @[Edges.scala 92:37]
    node _T_759 = eq(_T_757, UInt<1>("h00")) @[Edges.scala 92:28]
    node _T_761 = mux(_T_759, _T_756, UInt<1>("h00")) @[Edges.scala 212:14]
    reg _T_764 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Edges.scala 220:27]
    node _T_766 = sub(_T_764, UInt<1>("h01")) @[Edges.scala 221:28]
    node _T_767 = asUInt(_T_766) @[Edges.scala 221:28]
    node _T_768 = tail(_T_767, 1) @[Edges.scala 221:28]
    node _T_770 = eq(_T_764, UInt<1>("h00")) @[Edges.scala 222:25]
    node _T_772 = eq(_T_764, UInt<1>("h01")) @[Edges.scala 223:25]
    node _T_774 = eq(_T_761, UInt<1>("h00")) @[Edges.scala 223:47]
    node _T_775 = or(_T_772, _T_774) @[Edges.scala 223:37]
    node _T_776 = and(_T_775, _T_750) @[Edges.scala 224:22]
    node _T_777 = not(_T_768) @[Edges.scala 225:27]
    node _T_778 = and(_T_761, _T_777) @[Edges.scala 225:25]
    when _T_750 : @[Edges.scala 226:17]
      node _T_779 = mux(_T_770, _T_761, _T_768) @[Edges.scala 227:21]
      _T_764 <= _T_779 @[Edges.scala 227:15]
      skip @[Edges.scala 226:17]
    node _T_780 = and(io.in.d.ready, io.in.d.valid) @[Bundles.scala 207:36]
    node _T_782 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 104:70]
    node _T_783 = dshl(_T_782, io.in.d.bits.size) @[package.scala 104:77]
    node _T_784 = bits(_T_783, 1, 0) @[package.scala 104:82]
    node _T_785 = not(_T_784) @[package.scala 104:46]
    node _T_786 = shr(_T_785, 2) @[Edges.scala 211:59]
    node _T_787 = bits(io.in.d.bits.opcode, 0, 0) @[Edges.scala 106:36]
    node _T_789 = mux(_T_787, _T_786, UInt<1>("h00")) @[Edges.scala 212:14]
    reg _T_792 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Edges.scala 220:27]
    node _T_794 = sub(_T_792, UInt<1>("h01")) @[Edges.scala 221:28]
    node _T_795 = asUInt(_T_794) @[Edges.scala 221:28]
    node _T_796 = tail(_T_795, 1) @[Edges.scala 221:28]
    node _T_798 = eq(_T_792, UInt<1>("h00")) @[Edges.scala 222:25]
    node _T_800 = eq(_T_792, UInt<1>("h01")) @[Edges.scala 223:25]
    node _T_802 = eq(_T_789, UInt<1>("h00")) @[Edges.scala 223:47]
    node _T_803 = or(_T_800, _T_802) @[Edges.scala 223:37]
    node _T_804 = and(_T_803, _T_780) @[Edges.scala 224:22]
    node _T_805 = not(_T_796) @[Edges.scala 225:27]
    node _T_806 = and(_T_789, _T_805) @[Edges.scala 225:25]
    when _T_780 : @[Edges.scala 226:17]
      node _T_807 = mux(_T_798, _T_789, _T_796) @[Edges.scala 227:21]
      _T_792 <= _T_807 @[Edges.scala 227:15]
      skip @[Edges.scala 226:17]
    wire _T_810 : UInt<128>
    _T_810 is invalid
    _T_810 <= UInt<128>("h00")
    node _T_811 = and(io.in.a.ready, io.in.a.valid) @[Bundles.scala 207:36]
    node _T_812 = and(_T_811, _T_770) @[Monitor.scala 426:27]
    node _T_814 = and(_T_812, UInt<1>("h01")) @[Monitor.scala 426:38]
    when _T_814 : @[Monitor.scala 426:72]
      node _T_816 = dshl(UInt<1>("h01"), io.in.a.bits.source) @[OneHot.scala 45:35]
      _T_810 <= _T_816 @[Monitor.scala 427:13]
      node _T_817 = dshr(_T_749, io.in.a.bits.source) @[Monitor.scala 428:23]
      node _T_818 = bits(_T_817, 0, 0) @[Monitor.scala 428:23]
      node _T_820 = eq(_T_818, UInt<1>("h00")) @[Monitor.scala 428:14]
      node _T_821 = bits(reset, 0, 0) @[Monitor.scala 428:13]
      node _T_822 = or(_T_820, _T_821) @[Monitor.scala 428:13]
      node _T_824 = eq(_T_822, UInt<1>("h00")) @[Monitor.scala 428:13]
      when _T_824 : @[Monitor.scala 428:13]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel re-used a source ID (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:428 assert(!inflight(bundle.a.bits.source), \"'A' channel re-used a source ID\" + extra)\n") @[Monitor.scala 428:13]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 428:13]
        skip @[Monitor.scala 428:13]
      skip @[Monitor.scala 426:72]
    wire _T_827 : UInt<128>
    _T_827 is invalid
    _T_827 <= UInt<128>("h00")
    node _T_829 = eq(io.in.d.bits.opcode, UInt<3>("h06")) @[Monitor.scala 432:46]
    node _T_830 = and(io.in.d.ready, io.in.d.valid) @[Bundles.scala 207:36]
    node _T_831 = and(_T_830, _T_798) @[Monitor.scala 433:27]
    node _T_833 = and(_T_831, UInt<1>("h01")) @[Monitor.scala 433:38]
    node _T_835 = eq(_T_829, UInt<1>("h00")) @[Monitor.scala 433:75]
    node _T_836 = and(_T_833, _T_835) @[Monitor.scala 433:72]
    when _T_836 : @[Monitor.scala 433:91]
      node _T_838 = dshl(UInt<1>("h01"), io.in.d.bits.source) @[OneHot.scala 45:35]
      _T_827 <= _T_838 @[Monitor.scala 434:13]
      node _T_839 = or(_T_810, _T_749) @[Monitor.scala 435:21]
      node _T_840 = dshr(_T_839, io.in.d.bits.source) @[Monitor.scala 435:32]
      node _T_841 = bits(_T_840, 0, 0) @[Monitor.scala 435:32]
      node _T_842 = bits(reset, 0, 0) @[Monitor.scala 435:13]
      node _T_843 = or(_T_841, _T_842) @[Monitor.scala 435:13]
      node _T_845 = eq(_T_843, UInt<1>("h00")) @[Monitor.scala 435:13]
      when _T_845 : @[Monitor.scala 435:13]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel acknowledged for nothing inflight (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:435 assert((a_set | inflight)(bundle.d.bits.source), \"'D' channel acknowledged for nothing inflight\" + extra)\n") @[Monitor.scala 435:13]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 435:13]
        skip @[Monitor.scala 435:13]
      skip @[Monitor.scala 433:91]
    node _T_846 = or(_T_749, _T_810) @[Monitor.scala 442:27]
    node _T_847 = not(_T_827) @[Monitor.scala 442:38]
    node _T_848 = and(_T_846, _T_847) @[Monitor.scala 442:36]
    _T_749 <= _T_848 @[Monitor.scala 442:14]
    reg _T_851 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Monitor.scala 444:27]
    inst DummyPlusArgReader of DummyPlusArgReader_69 @[PlusArg.scala 32:11]
    DummyPlusArgReader.io is invalid
    DummyPlusArgReader.clock <= clock
    DummyPlusArgReader.reset <= reset
    node _T_853 = neq(_T_749, UInt<1>("h00")) @[Monitor.scala 447:23]
    node _T_855 = eq(_T_853, UInt<1>("h00")) @[Monitor.scala 447:13]
    node _T_857 = eq(DummyPlusArgReader.io.out, UInt<1>("h00")) @[Monitor.scala 447:36]
    node _T_858 = or(_T_855, _T_857) @[Monitor.scala 447:27]
    node _T_859 = lt(_T_851, DummyPlusArgReader.io.out) @[Monitor.scala 447:60]
    node _T_860 = or(_T_858, _T_859) @[Monitor.scala 447:48]
    node _T_861 = bits(reset, 0, 0) @[Monitor.scala 447:12]
    node _T_862 = or(_T_860, _T_861) @[Monitor.scala 447:12]
    node _T_864 = eq(_T_862, UInt<1>("h00")) @[Monitor.scala 447:12]
    when _T_864 : @[Monitor.scala 447:12]
      printf(clock, UInt<1>(1), "Assertion failed: TileLink timeout expired (connected at PeripheryBus.scala:45:34)\n    at Monitor.scala:447 assert (!inflight.orR || limit === UInt(0) || watchdog < limit, \"TileLink timeout expired\" + extra)\n") @[Monitor.scala 447:12]
      stop(clock, UInt<1>(1), 1) @[Monitor.scala 447:12]
      skip @[Monitor.scala 447:12]
    node _T_866 = add(_T_851, UInt<1>("h01")) @[Monitor.scala 449:26]
    node _T_867 = tail(_T_866, 1) @[Monitor.scala 449:26]
    _T_851 <= _T_867 @[Monitor.scala 449:14]
    node _T_868 = and(io.in.a.ready, io.in.a.valid) @[Bundles.scala 207:36]
    node _T_869 = and(io.in.d.ready, io.in.d.valid) @[Bundles.scala 207:36]
    node _T_870 = or(_T_868, _T_869) @[Monitor.scala 450:27]
    when _T_870 : @[Monitor.scala 450:47]
      _T_851 <= UInt<1>("h00") @[Monitor.scala 450:58]
      skip @[Monitor.scala 450:47]
    
  module SPIFIFO_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip ctrl : {fmt : {proto : UInt<2>, endian : UInt<1>, iodir : UInt<1>, len : UInt<4>}, cs : {mode : UInt<2>}, wm : {tx : UInt<4>, rx : UInt<4>}}, link : {tx : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, flip rx : {valid : UInt<1>, bits : UInt<8>}, cnt : UInt<8>, fmt : {proto : UInt<2>, endian : UInt<1>, iodir : UInt<1>}, cs : {set : UInt<1>, clear : UInt<1>, hold : UInt<1>}, flip active : UInt<1>, lock : UInt<1>}, flip tx : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, rx : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, ip : {txwm : UInt<1>, rxwm : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst txq of Queue_18 @[SPIFIFO.scala 21:19]
    txq.io is invalid
    txq.clock <= clock
    txq.reset <= reset
    inst rxq of Queue_19 @[SPIFIFO.scala 22:19]
    rxq.io is invalid
    rxq.clock <= clock
    rxq.reset <= reset
    txq.io.enq <- io.tx @[SPIFIFO.scala 24:14]
    io.link.tx <- txq.io.deq @[SPIFIFO.scala 25:14]
    node fire_tx = and(io.link.tx.ready, io.link.tx.valid) @[Decoupled.scala 37:37]
    reg rxen : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[SPIFIFO.scala 29:17]
    node _T_31 = and(io.link.rx.valid, rxen) @[SPIFIFO.scala 31:40]
    rxq.io.enq.valid <= _T_31 @[SPIFIFO.scala 31:20]
    rxq.io.enq.bits <= io.link.rx.bits @[SPIFIFO.scala 32:19]
    io.rx <- rxq.io.deq @[SPIFIFO.scala 33:9]
    when io.link.rx.valid : @[SPIFIFO.scala 35:18]
      rxen <= UInt<1>("h00") @[SPIFIFO.scala 36:10]
      skip @[SPIFIFO.scala 35:18]
    when fire_tx : @[SPIFIFO.scala 38:18]
      node _T_34 = eq(io.link.fmt.iodir, UInt<1>("h00")) @[SPIFIFO.scala 39:32]
      rxen <= _T_34 @[SPIFIFO.scala 39:10]
      skip @[SPIFIFO.scala 38:18]
    node _T_38 = eq(UInt<2>("h00"), io.link.fmt.proto) @[SPIConsts.scala 13:48]
    node _T_39 = eq(UInt<2>("h01"), io.link.fmt.proto) @[SPIConsts.scala 13:48]
    node _T_40 = eq(UInt<2>("h02"), io.link.fmt.proto) @[SPIConsts.scala 13:48]
    node _T_41 = shr(io.ctrl.fmt.len, 0) @[SPIFIFO.scala 43:73]
    node _T_42 = shr(io.ctrl.fmt.len, 1) @[SPIFIFO.scala 43:73]
    node _T_43 = shr(io.ctrl.fmt.len, 2) @[SPIFIFO.scala 43:73]
    node _T_46 = mux(_T_38, _T_41, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_48 = mux(_T_39, _T_42, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_50 = mux(_T_40, _T_43, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_51 = or(_T_46, _T_48) @[Mux.scala 19:72]
    node _T_52 = or(_T_51, _T_50) @[Mux.scala 19:72]
    wire cnt_quot : UInt<4> @[Mux.scala 19:72]
    cnt_quot <= _T_52 @[Mux.scala 19:72]
    node _T_55 = bits(io.ctrl.fmt.len, 0, 0) @[SPIFIFO.scala 44:83]
    node _T_57 = neq(_T_55, UInt<1>("h00")) @[SPIFIFO.scala 44:92]
    node _T_58 = bits(io.ctrl.fmt.len, 1, 0) @[SPIFIFO.scala 44:83]
    node _T_60 = neq(_T_58, UInt<1>("h00")) @[SPIFIFO.scala 44:92]
    node _T_63 = mux(_T_38, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_65 = mux(_T_39, _T_57, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_67 = mux(_T_40, _T_60, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_68 = or(_T_63, _T_65) @[Mux.scala 19:72]
    node _T_69 = or(_T_68, _T_67) @[Mux.scala 19:72]
    wire cnt_rmdr : UInt<1> @[Mux.scala 19:72]
    cnt_rmdr <= _T_69 @[Mux.scala 19:72]
    io.link.fmt <- io.ctrl.fmt @[SPIFIFO.scala 45:15]
    node _T_71 = add(cnt_quot, cnt_rmdr) @[SPIFIFO.scala 46:27]
    node _T_72 = tail(_T_71, 1) @[SPIFIFO.scala 46:27]
    io.link.cnt <= _T_72 @[SPIFIFO.scala 46:15]
    reg cs_mode : UInt, clock with : (reset => (reset, UInt<2>("h00"))) @[SPIFIFO.scala 48:24]
    cs_mode <= io.ctrl.cs.mode @[SPIFIFO.scala 48:24]
    node cs_mode_hold = eq(cs_mode, UInt<2>("h02")) @[SPIFIFO.scala 49:31]
    node cs_mode_off = eq(cs_mode, UInt<2>("h03")) @[SPIFIFO.scala 50:30]
    node cs_update = neq(cs_mode, io.ctrl.cs.mode) @[SPIFIFO.scala 51:28]
    node _T_77 = or(cs_mode_hold, cs_mode_off) @[SPIFIFO.scala 52:33]
    node cs_clear = eq(_T_77, UInt<1>("h00")) @[SPIFIFO.scala 52:18]
    node _T_80 = eq(cs_mode_off, UInt<1>("h00")) @[SPIFIFO.scala 54:21]
    io.link.cs.set <= _T_80 @[SPIFIFO.scala 54:18]
    node _T_81 = and(fire_tx, cs_clear) @[SPIFIFO.scala 55:45]
    node _T_82 = or(cs_update, _T_81) @[SPIFIFO.scala 55:33]
    io.link.cs.clear <= _T_82 @[SPIFIFO.scala 55:20]
    io.link.cs.hold <= UInt<1>("h00") @[SPIFIFO.scala 56:19]
    node _T_84 = or(io.link.tx.valid, rxen) @[SPIFIFO.scala 58:36]
    io.link.lock <= _T_84 @[SPIFIFO.scala 58:16]
    node _T_85 = lt(txq.io.count, io.ctrl.wm.tx) @[SPIFIFO.scala 60:31]
    io.ip.txwm <= _T_85 @[SPIFIFO.scala 60:14]
    node _T_86 = gt(rxq.io.count, io.ctrl.wm.rx) @[SPIFIFO.scala 61:31]
    io.ip.rxwm <= _T_86 @[SPIFIFO.scala 61:14]
    
  module SPIMedia_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {port : {sck : UInt<1>, dq : {flip i : UInt<1>, o : UInt<1>, oe : UInt<1>}[4], cs : UInt<1>[4]}, ctrl : {flip sck : {div : UInt<12>, pol : UInt<1>, pha : UInt<1>}, flip dla : {cssck : UInt<8>, sckcs : UInt<8>, intercs : UInt<8>, interxfr : UInt<8>}, flip cs : {id : UInt<2>, dflt : UInt<1>[4]}}, flip link : {tx : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, flip rx : {valid : UInt<1>, bits : UInt<8>}, cnt : UInt<8>, fmt : {proto : UInt<2>, endian : UInt<1>, iodir : UInt<1>}, cs : {set : UInt<1>, clear : UInt<1>, hold : UInt<1>}, flip active : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst phy of SPIPhysical_1 @[SPIMedia.scala 31:19]
    phy.io is invalid
    phy.clock <= clock
    phy.reset <= reset
    phy.io.ctrl.sck <- io.ctrl.sck @[SPIMedia.scala 32:19]
    phy.io.ctrl.fmt <- io.link.fmt @[SPIMedia.scala 33:19]
    phy.io.op.valid <= UInt<1>("h01") @[SPIMedia.scala 36:12]
    phy.io.op.bits.fn <= UInt<1>("h01") @[SPIMedia.scala 37:14]
    phy.io.op.bits.stb <= UInt<1>("h00") @[SPIMedia.scala 38:15]
    phy.io.op.bits.cnt <= io.link.cnt @[SPIMedia.scala 39:15]
    phy.io.op.bits.data <= io.link.tx.bits @[SPIMedia.scala 40:16]
    reg cs : {id : UInt<2>, dflt : UInt<1>[4]}, clock @[SPIMedia.scala 42:15]
    reg cs_set : UInt<1>, clock @[SPIMedia.scala 43:19]
    node _T_68 = dshl(io.link.cs.set, io.ctrl.cs.id) @[SPIBundle.scala 47:19]
    node _T_69 = cat(io.ctrl.cs.dflt[1], io.ctrl.cs.dflt[0]) @[Cat.scala 30:58]
    node _T_70 = cat(io.ctrl.cs.dflt[3], io.ctrl.cs.dflt[2]) @[Cat.scala 30:58]
    node _T_71 = cat(_T_70, _T_69) @[Cat.scala 30:58]
    node _T_72 = xor(_T_71, _T_68) @[SPIBundle.scala 48:33]
    node _T_73 = bits(_T_72, 0, 0) @[SPIBundle.scala 49:32]
    node _T_74 = bits(_T_72, 1, 1) @[SPIBundle.scala 49:32]
    node _T_75 = bits(_T_72, 2, 2) @[SPIBundle.scala 49:32]
    node _T_76 = bits(_T_72, 3, 3) @[SPIBundle.scala 49:32]
    wire cs_active : UInt<1>[4] @[SPIBundle.scala 49:28]
    cs_active is invalid @[SPIBundle.scala 49:28]
    cs_active[0] <= _T_73 @[SPIBundle.scala 49:28]
    cs_active[1] <= _T_74 @[SPIBundle.scala 49:28]
    cs_active[2] <= _T_75 @[SPIBundle.scala 49:28]
    cs_active[3] <= _T_76 @[SPIBundle.scala 49:28]
    node _T_85 = cat(cs_active[1], cs_active[0]) @[SPIMedia.scala 45:30]
    node _T_86 = cat(cs_active[3], cs_active[2]) @[SPIMedia.scala 45:30]
    node _T_87 = cat(_T_86, _T_85) @[SPIMedia.scala 45:30]
    node _T_88 = cat(cs.dflt[1], cs.dflt[0]) @[SPIMedia.scala 45:49]
    node _T_89 = cat(cs.dflt[3], cs.dflt[2]) @[SPIMedia.scala 45:49]
    node _T_90 = cat(_T_89, _T_88) @[SPIMedia.scala 45:49]
    node cs_update = neq(_T_87, _T_90) @[SPIMedia.scala 45:37]
    reg clear : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[SPIMedia.scala 47:18]
    reg cs_assert : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[SPIMedia.scala 48:22]
    node _T_96 = eq(io.link.cs.hold, UInt<1>("h00")) @[SPIMedia.scala 49:44]
    node _T_97 = and(cs_update, _T_96) @[SPIMedia.scala 49:41]
    node cs_deassert = or(clear, _T_97) @[SPIMedia.scala 49:27]
    node _T_98 = and(io.link.cs.clear, cs_assert) @[SPIMedia.scala 51:39]
    node _T_99 = or(clear, _T_98) @[SPIMedia.scala 51:18]
    clear <= _T_99 @[SPIMedia.scala 51:9]
    node continuous = eq(io.ctrl.dla.interxfr, UInt<1>("h00")) @[SPIMedia.scala 53:42]
    io.port.sck <= phy.io.port.sck @[SPIMedia.scala 55:15]
    io.port.dq <- phy.io.port.dq @[SPIMedia.scala 56:14]
    io.port.cs <- cs.dflt @[SPIMedia.scala 57:14]
    io.link.rx <- phy.io.rx @[SPIMedia.scala 59:14]
    io.link.tx.ready <= UInt<1>("h00") @[SPIMedia.scala 60:20]
    io.link.active <= cs_assert @[SPIMedia.scala 61:18]
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[SPIMedia.scala 64:18]
    node _T_104 = eq(UInt<2>("h00"), state) @[Conditional.scala 37:30]
    when _T_104 : @[Conditional.scala 40:58]
      when cs_assert : @[SPIMedia.scala 68:24]
        when cs_deassert : @[SPIMedia.scala 69:28]
          phy.io.op.bits.cnt <= io.ctrl.dla.sckcs @[SPIMedia.scala 70:23]
          when phy.io.op.ready : @[SPIMedia.scala 71:27]
            state <= UInt<2>("h02") @[SPIMedia.scala 72:19]
            skip @[SPIMedia.scala 71:27]
          skip @[SPIMedia.scala 69:28]
        else : @[SPIMedia.scala 74:22]
          phy.io.op.bits.fn <= UInt<1>("h00") @[SPIMedia.scala 75:22]
          phy.io.op.bits.stb <= UInt<1>("h01") @[SPIMedia.scala 76:23]
          phy.io.op.valid <= io.link.tx.valid @[SPIMedia.scala 78:20]
          io.link.tx.ready <= phy.io.op.ready @[SPIMedia.scala 79:28]
          node _T_107 = and(phy.io.op.ready, phy.io.op.valid) @[Decoupled.scala 37:37]
          when _T_107 : @[SPIMedia.scala 80:28]
            state <= UInt<2>("h01") @[SPIMedia.scala 81:19]
            skip @[SPIMedia.scala 80:28]
          skip @[SPIMedia.scala 74:22]
        skip @[SPIMedia.scala 68:24]
      else : @[SPIMedia.scala 84:38]
        when io.link.tx.valid : @[SPIMedia.scala 84:38]
          phy.io.op.bits.cnt <= io.ctrl.dla.cssck @[SPIMedia.scala 86:21]
          when phy.io.op.ready : @[SPIMedia.scala 87:25]
            cs_assert <= UInt<1>("h01") @[SPIMedia.scala 88:21]
            cs_set <= io.link.cs.set @[SPIMedia.scala 89:18]
            cs.dflt <- cs_active @[SPIMedia.scala 90:19]
            skip @[SPIMedia.scala 87:25]
          skip @[SPIMedia.scala 84:38]
        else : @[SPIMedia.scala 92:20]
          phy.io.op.bits.cnt <= UInt<1>("h00") @[SPIMedia.scala 94:21]
          phy.io.op.bits.stb <= UInt<1>("h01") @[SPIMedia.scala 95:21]
          cs <- io.ctrl.cs @[SPIMedia.scala 96:12]
          skip @[SPIMedia.scala 92:20]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_111 = eq(UInt<2>("h01"), state) @[Conditional.scala 37:30]
      when _T_111 : @[Conditional.scala 39:67]
        node _T_113 = eq(continuous, UInt<1>("h00")) @[SPIMedia.scala 102:19]
        phy.io.op.valid <= _T_113 @[SPIMedia.scala 102:16]
        phy.io.op.bits.cnt <= io.ctrl.dla.interxfr @[SPIMedia.scala 103:19]
        node _T_114 = or(phy.io.op.ready, continuous) @[SPIMedia.scala 104:22]
        when _T_114 : @[SPIMedia.scala 104:37]
          state <= UInt<2>("h00") @[SPIMedia.scala 105:15]
          skip @[SPIMedia.scala 104:37]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_115 = eq(UInt<2>("h02"), state) @[Conditional.scala 37:30]
        when _T_115 : @[Conditional.scala 39:67]
          phy.io.op.bits.cnt <= io.ctrl.dla.intercs @[SPIMedia.scala 111:19]
          phy.io.op.bits.stb <= UInt<1>("h01") @[SPIMedia.scala 112:19]
          cs_assert <= UInt<1>("h00") @[SPIMedia.scala 113:17]
          clear <= UInt<1>("h00") @[SPIMedia.scala 114:13]
          when phy.io.op.ready : @[SPIMedia.scala 115:23]
            node _T_119 = dshl(cs_set, cs.id) @[SPIBundle.scala 47:19]
            node _T_120 = cat(cs.dflt[1], cs.dflt[0]) @[Cat.scala 30:58]
            node _T_121 = cat(cs.dflt[3], cs.dflt[2]) @[Cat.scala 30:58]
            node _T_122 = cat(_T_121, _T_120) @[Cat.scala 30:58]
            node _T_123 = xor(_T_122, _T_119) @[SPIBundle.scala 48:33]
            node _T_124 = bits(_T_123, 0, 0) @[SPIBundle.scala 49:32]
            node _T_125 = bits(_T_123, 1, 1) @[SPIBundle.scala 49:32]
            node _T_126 = bits(_T_123, 2, 2) @[SPIBundle.scala 49:32]
            node _T_127 = bits(_T_123, 3, 3) @[SPIBundle.scala 49:32]
            wire _T_130 : UInt<1>[4] @[SPIBundle.scala 49:28]
            _T_130 is invalid @[SPIBundle.scala 49:28]
            _T_130[0] <= _T_124 @[SPIBundle.scala 49:28]
            _T_130[1] <= _T_125 @[SPIBundle.scala 49:28]
            _T_130[2] <= _T_126 @[SPIBundle.scala 49:28]
            _T_130[3] <= _T_127 @[SPIBundle.scala 49:28]
            cs.dflt <- _T_130 @[SPIMedia.scala 116:17]
            state <= UInt<2>("h00") @[SPIMedia.scala 117:15]
            skip @[SPIMedia.scala 115:23]
          skip @[Conditional.scala 39:67]
    
  module DummyPlusArgReader_69 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {out : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.out <= UInt<1>("h00") @[PlusArg.scala 19:16]
    
  module Queue_18 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, count : UInt<4>}
    
    clock is invalid
    reset is invalid
    io is invalid
    cmem ram : UInt<8>[8] @[Decoupled.scala 214:24]
    reg value : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Counter.scala 26:33]
    reg value_1 : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Counter.scala 26:33]
    reg maybe_full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 217:35]
    node _T_41 = eq(value, value_1) @[Decoupled.scala 219:41]
    node _T_43 = eq(maybe_full, UInt<1>("h00")) @[Decoupled.scala 220:36]
    node empty = and(_T_41, _T_43) @[Decoupled.scala 220:33]
    node _T_44 = and(_T_41, maybe_full) @[Decoupled.scala 221:32]
    node _T_45 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 37:37]
    wire do_enq : UInt<1>
    do_enq is invalid
    do_enq <= _T_45
    node _T_47 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 37:37]
    wire do_deq : UInt<1>
    do_deq is invalid
    do_deq <= _T_47
    when do_enq : @[Decoupled.scala 225:17]
      infer mport _T_49 = ram[value], clock @[Decoupled.scala 226:8]
      _T_49 <= io.enq.bits @[Decoupled.scala 226:24]
      node wrap = eq(value, UInt<3>("h07")) @[Counter.scala 34:24]
      node _T_52 = add(value, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_53 = tail(_T_52, 1) @[Counter.scala 35:22]
      value <= _T_53 @[Counter.scala 35:13]
      skip @[Decoupled.scala 225:17]
    when do_deq : @[Decoupled.scala 229:17]
      node wrap_1 = eq(value_1, UInt<3>("h07")) @[Counter.scala 34:24]
      node _T_56 = add(value_1, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_57 = tail(_T_56, 1) @[Counter.scala 35:22]
      value_1 <= _T_57 @[Counter.scala 35:13]
      skip @[Decoupled.scala 229:17]
    node _T_58 = neq(do_enq, do_deq) @[Decoupled.scala 232:16]
    when _T_58 : @[Decoupled.scala 232:28]
      maybe_full <= do_enq @[Decoupled.scala 233:16]
      skip @[Decoupled.scala 232:28]
    node _T_60 = eq(empty, UInt<1>("h00")) @[Decoupled.scala 236:19]
    io.deq.valid <= _T_60 @[Decoupled.scala 236:16]
    node _T_62 = eq(_T_44, UInt<1>("h00")) @[Decoupled.scala 237:19]
    io.enq.ready <= _T_62 @[Decoupled.scala 237:16]
    infer mport _T_63 = ram[value_1], clock @[Decoupled.scala 238:21]
    io.deq.bits <= _T_63 @[Decoupled.scala 238:15]
    node _T_64 = sub(value, value_1) @[Decoupled.scala 253:40]
    node _T_65 = asUInt(_T_64) @[Decoupled.scala 253:40]
    node _T_66 = tail(_T_65, 1) @[Decoupled.scala 253:40]
    node _T_67 = and(maybe_full, _T_41) @[Decoupled.scala 255:32]
    node _T_68 = cat(_T_67, _T_66) @[Cat.scala 30:58]
    io.count <= _T_68 @[Decoupled.scala 255:14]
    
  module Queue_19 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, count : UInt<4>}
    
    clock is invalid
    reset is invalid
    io is invalid
    cmem ram : UInt<8>[8] @[Decoupled.scala 214:24]
    reg value : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Counter.scala 26:33]
    reg value_1 : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Counter.scala 26:33]
    reg maybe_full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 217:35]
    node _T_41 = eq(value, value_1) @[Decoupled.scala 219:41]
    node _T_43 = eq(maybe_full, UInt<1>("h00")) @[Decoupled.scala 220:36]
    node empty = and(_T_41, _T_43) @[Decoupled.scala 220:33]
    node _T_44 = and(_T_41, maybe_full) @[Decoupled.scala 221:32]
    node _T_45 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 37:37]
    wire do_enq : UInt<1>
    do_enq is invalid
    do_enq <= _T_45
    node _T_47 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 37:37]
    wire do_deq : UInt<1>
    do_deq is invalid
    do_deq <= _T_47
    when do_enq : @[Decoupled.scala 225:17]
      infer mport _T_49 = ram[value], clock @[Decoupled.scala 226:8]
      _T_49 <= io.enq.bits @[Decoupled.scala 226:24]
      node wrap = eq(value, UInt<3>("h07")) @[Counter.scala 34:24]
      node _T_52 = add(value, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_53 = tail(_T_52, 1) @[Counter.scala 35:22]
      value <= _T_53 @[Counter.scala 35:13]
      skip @[Decoupled.scala 225:17]
    when do_deq : @[Decoupled.scala 229:17]
      node wrap_1 = eq(value_1, UInt<3>("h07")) @[Counter.scala 34:24]
      node _T_56 = add(value_1, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_57 = tail(_T_56, 1) @[Counter.scala 35:22]
      value_1 <= _T_57 @[Counter.scala 35:13]
      skip @[Decoupled.scala 229:17]
    node _T_58 = neq(do_enq, do_deq) @[Decoupled.scala 232:16]
    when _T_58 : @[Decoupled.scala 232:28]
      maybe_full <= do_enq @[Decoupled.scala 233:16]
      skip @[Decoupled.scala 232:28]
    node _T_60 = eq(empty, UInt<1>("h00")) @[Decoupled.scala 236:19]
    io.deq.valid <= _T_60 @[Decoupled.scala 236:16]
    node _T_62 = eq(_T_44, UInt<1>("h00")) @[Decoupled.scala 237:19]
    io.enq.ready <= _T_62 @[Decoupled.scala 237:16]
    infer mport _T_63 = ram[value_1], clock @[Decoupled.scala 238:21]
    io.deq.bits <= _T_63 @[Decoupled.scala 238:15]
    node _T_64 = sub(value, value_1) @[Decoupled.scala 253:40]
    node _T_65 = asUInt(_T_64) @[Decoupled.scala 253:40]
    node _T_66 = tail(_T_65, 1) @[Decoupled.scala 253:40]
    node _T_67 = and(maybe_full, _T_41) @[Decoupled.scala 255:32]
    node _T_68 = cat(_T_67, _T_66) @[Cat.scala 30:58]
    io.count <= _T_68 @[Decoupled.scala 255:14]
    
  module SPIPhysical_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {port : {sck : UInt<1>, dq : {flip i : UInt<1>, o : UInt<1>, oe : UInt<1>}[4], cs : UInt<1>[4]}, flip ctrl : {sck : {div : UInt<12>, pol : UInt<1>, pha : UInt<1>}, fmt : {proto : UInt<2>, endian : UInt<1>, iodir : UInt<1>}}, flip op : {flip ready : UInt<1>, valid : UInt<1>, bits : {fn : UInt<1>, stb : UInt<1>, cnt : UInt<8>, data : UInt<8>}}, rx : {valid : UInt<1>, bits : UInt<8>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg ctrl : {sck : {div : UInt<12>, pol : UInt<1>, pha : UInt<1>}, fmt : {proto : UInt<2>, endian : UInt<1>, iodir : UInt<1>}}, clock @[SPIPhysical.scala 33:17]
    node proto_0 = eq(UInt<2>("h00"), ctrl.fmt.proto) @[SPIConsts.scala 13:48]
    node proto_1 = eq(UInt<2>("h01"), ctrl.fmt.proto) @[SPIConsts.scala 13:48]
    node proto_2 = eq(UInt<2>("h02"), ctrl.fmt.proto) @[SPIConsts.scala 13:48]
    wire accept : UInt<1>
    accept is invalid
    accept <= UInt<1>("h00")
    wire sample : UInt<1>
    sample is invalid
    sample <= UInt<1>("h00")
    wire setup : UInt<1>
    setup is invalid
    setup <= UInt<1>("h00")
    wire last : UInt<1>
    last is invalid
    last <= UInt<1>("h00")
    reg setup_d : UInt<1>, clock @[SPIPhysical.scala 41:20]
    setup_d <= setup @[SPIPhysical.scala 41:20]
    reg _T_50 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ShiftReg.scala 15:18]
    _T_50 <= sample @[ShiftReg.scala 15:18]
    reg _T_51 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ShiftReg.scala 15:18]
    _T_51 <= _T_50 @[ShiftReg.scala 15:18]
    reg sample_d : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ShiftReg.scala 15:18]
    sample_d <= _T_51 @[ShiftReg.scala 15:18]
    reg _T_53 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ShiftReg.scala 15:18]
    _T_53 <= last @[ShiftReg.scala 15:18]
    reg _T_54 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ShiftReg.scala 15:18]
    _T_54 <= _T_53 @[ShiftReg.scala 15:18]
    reg last_d : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ShiftReg.scala 15:18]
    last_d <= _T_54 @[ShiftReg.scala 15:18]
    reg scnt : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[SPIPhysical.scala 45:17]
    reg tcnt : UInt<12>, clock @[SPIPhysical.scala 46:17]
    node stop = eq(scnt, UInt<1>("h00")) @[SPIPhysical.scala 48:20]
    node beat = eq(tcnt, UInt<1>("h00")) @[SPIPhysical.scala 49:20]
    node _T_59 = mux(beat, scnt, tcnt) @[SPIPhysical.scala 50:17]
    node _T_61 = sub(_T_59, UInt<1>("h01")) @[SPIPhysical.scala 50:36]
    node _T_62 = asUInt(_T_61) @[SPIPhysical.scala 50:36]
    node decr = tail(_T_62, 1) @[SPIPhysical.scala 50:36]
    wire sched : UInt<1>
    sched is invalid
    sched <= beat
    node _T_64 = mux(sched, ctrl.sck.div, decr) @[SPIPhysical.scala 52:14]
    tcnt <= _T_64 @[SPIPhysical.scala 52:8]
    reg sck : UInt<1>, clock @[SPIPhysical.scala 54:16]
    reg cref : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[SPIPhysical.scala 55:17]
    node cinv = xor(ctrl.sck.pha, ctrl.sck.pol) @[SPIPhysical.scala 56:27]
    node _T_68 = cat(io.port.dq[1].i, io.port.dq[0].i) @[Cat.scala 30:58]
    node _T_69 = cat(io.port.dq[3].i, io.port.dq[2].i) @[Cat.scala 30:58]
    node rxd = cat(_T_69, _T_68) @[Cat.scala 30:58]
    node samples_0 = bits(rxd, 1, 1) @[SPIPhysical.scala 62:24]
    node samples_1 = bits(rxd, 1, 0) @[SPIPhysical.scala 62:32]
    reg buffer : UInt<8>, clock @[SPIPhysical.scala 64:19]
    node _T_71 = eq(io.ctrl.fmt.endian, UInt<1>("h00")) @[SPIPhysical.scala 59:20]
    node _T_72 = bits(io.op.bits.data, 0, 0) @[SPIPhysical.scala 59:54]
    node _T_73 = bits(io.op.bits.data, 1, 1) @[SPIPhysical.scala 59:54]
    node _T_74 = bits(io.op.bits.data, 2, 2) @[SPIPhysical.scala 59:54]
    node _T_75 = bits(io.op.bits.data, 3, 3) @[SPIPhysical.scala 59:54]
    node _T_76 = bits(io.op.bits.data, 4, 4) @[SPIPhysical.scala 59:54]
    node _T_77 = bits(io.op.bits.data, 5, 5) @[SPIPhysical.scala 59:54]
    node _T_78 = bits(io.op.bits.data, 6, 6) @[SPIPhysical.scala 59:54]
    node _T_79 = bits(io.op.bits.data, 7, 7) @[SPIPhysical.scala 59:54]
    node _T_80 = cat(_T_78, _T_79) @[Cat.scala 30:58]
    node _T_81 = cat(_T_76, _T_77) @[Cat.scala 30:58]
    node _T_82 = cat(_T_81, _T_80) @[Cat.scala 30:58]
    node _T_83 = cat(_T_74, _T_75) @[Cat.scala 30:58]
    node _T_84 = cat(_T_72, _T_73) @[Cat.scala 30:58]
    node _T_85 = cat(_T_84, _T_83) @[Cat.scala 30:58]
    node _T_86 = cat(_T_85, _T_82) @[Cat.scala 30:58]
    node buffer_in = mux(_T_71, io.op.bits.data, _T_86) @[SPIPhysical.scala 59:8]
    node _T_87 = and(sample_d, stop) @[SPIPhysical.scala 66:59]
    node shift = or(setup_d, _T_87) @[SPIPhysical.scala 66:46]
    node _T_88 = bits(buffer, 6, 0) @[SPIPhysical.scala 70:26]
    node _T_89 = bits(buffer, 7, 1) @[SPIPhysical.scala 70:42]
    node _T_90 = mux(shift, _T_88, _T_89) @[SPIPhysical.scala 70:12]
    node _T_91 = bits(buffer, 0, 0) @[SPIPhysical.scala 71:35]
    node _T_92 = mux(sample_d, samples_0, _T_91) @[SPIPhysical.scala 71:12]
    node _T_93 = cat(_T_90, _T_92) @[Cat.scala 30:58]
    node _T_94 = bits(buffer, 5, 0) @[SPIPhysical.scala 70:26]
    node _T_95 = bits(buffer, 7, 2) @[SPIPhysical.scala 70:42]
    node _T_96 = mux(shift, _T_94, _T_95) @[SPIPhysical.scala 70:12]
    node _T_97 = bits(buffer, 1, 0) @[SPIPhysical.scala 71:35]
    node _T_98 = mux(sample_d, samples_1, _T_97) @[SPIPhysical.scala 71:12]
    node _T_99 = cat(_T_96, _T_98) @[Cat.scala 30:58]
    node _T_100 = bits(buffer, 3, 0) @[SPIPhysical.scala 70:26]
    node _T_101 = bits(buffer, 7, 4) @[SPIPhysical.scala 70:42]
    node _T_102 = mux(shift, _T_100, _T_101) @[SPIPhysical.scala 70:12]
    node _T_103 = bits(buffer, 3, 0) @[SPIPhysical.scala 71:35]
    node _T_104 = mux(sample_d, rxd, _T_103) @[SPIPhysical.scala 71:12]
    node _T_105 = cat(_T_102, _T_104) @[Cat.scala 30:58]
    node _T_108 = mux(proto_0, _T_93, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_110 = mux(proto_1, _T_99, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_112 = mux(proto_2, _T_105, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_113 = or(_T_108, _T_110) @[Mux.scala 19:72]
    node _T_114 = or(_T_113, _T_112) @[Mux.scala 19:72]
    wire _T_116 : UInt<8> @[Mux.scala 19:72]
    _T_116 <= _T_114 @[Mux.scala 19:72]
    buffer <= _T_116 @[SPIPhysical.scala 67:10]
    reg txd : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SPIPhysical.scala 76:16]
    node _T_119 = bits(buffer_in, 7, 4) @[SPIPhysical.scala 74:41]
    node _T_120 = bits(buffer, 7, 4) @[SPIPhysical.scala 74:41]
    node txd_in = mux(accept, _T_119, _T_120) @[SPIPhysical.scala 77:19]
    node _T_121 = mux(accept, io.ctrl.fmt.proto, ctrl.fmt.proto) @[SPIPhysical.scala 78:39]
    node txd_sel_0 = eq(UInt<2>("h00"), _T_121) @[SPIConsts.scala 13:48]
    node txd_sel_1 = eq(UInt<2>("h01"), _T_121) @[SPIConsts.scala 13:48]
    node txd_sel_2 = eq(UInt<2>("h02"), _T_121) @[SPIConsts.scala 13:48]
    node txd_shf_0 = bits(txd_in, 3, 3) @[SPIPhysical.scala 79:55]
    node txd_shf_1 = bits(txd_in, 3, 2) @[SPIPhysical.scala 79:55]
    node txd_shf_2 = bits(txd_in, 3, 0) @[SPIPhysical.scala 79:55]
    when setup : @[SPIPhysical.scala 80:16]
      node _T_127 = mux(txd_sel_0, txd_shf_0, UInt<1>("h00")) @[Mux.scala 19:72]
      node _T_129 = mux(txd_sel_1, txd_shf_1, UInt<1>("h00")) @[Mux.scala 19:72]
      node _T_131 = mux(txd_sel_2, txd_shf_2, UInt<1>("h00")) @[Mux.scala 19:72]
      node _T_132 = or(_T_127, _T_129) @[Mux.scala 19:72]
      node _T_133 = or(_T_132, _T_131) @[Mux.scala 19:72]
      wire _T_135 : UInt<4> @[Mux.scala 19:72]
      _T_135 <= _T_133 @[Mux.scala 19:72]
      txd <= _T_135 @[SPIPhysical.scala 81:9]
      skip @[SPIPhysical.scala 80:16]
    node tx = eq(ctrl.fmt.iodir, UInt<1>("h01")) @[SPIPhysical.scala 84:28]
    node _T_137 = and(proto_1, tx) @[SPIPhysical.scala 85:49]
    node _T_138 = and(proto_2, tx) @[SPIPhysical.scala 85:49]
    node txen_2 = or(_T_138, UInt<1>("h00")) @[SPIPhysical.scala 85:82]
    node txen_1 = or(_T_137, txen_2) @[SPIPhysical.scala 85:82]
    node txen_0 = or(proto_0, txen_1) @[SPIPhysical.scala 85:82]
    io.port.sck <= sck @[SPIPhysical.scala 88:15]
    wire _T_146 : UInt<1>[4] @[compatibility.scala 117:12]
    _T_146 is invalid @[compatibility.scala 117:12]
    _T_146[0] <= UInt<1>("h01") @[compatibility.scala 117:12]
    _T_146[1] <= UInt<1>("h01") @[compatibility.scala 117:12]
    _T_146[2] <= UInt<1>("h01") @[compatibility.scala 117:12]
    _T_146[3] <= UInt<1>("h01") @[compatibility.scala 117:12]
    io.port.cs <- _T_146 @[SPIPhysical.scala 89:14]
    node _T_153 = bits(txd, 0, 0) @[SPIPhysical.scala 90:24]
    node _T_154 = bits(txd, 1, 1) @[SPIPhysical.scala 90:24]
    node _T_155 = bits(txd, 2, 2) @[SPIPhysical.scala 90:24]
    node _T_156 = bits(txd, 3, 3) @[SPIPhysical.scala 90:24]
    io.port.dq[0].o <= _T_153 @[SPIPhysical.scala 92:12]
    io.port.dq[0].oe <= txen_0 @[SPIPhysical.scala 93:13]
    io.port.dq[1].o <= _T_154 @[SPIPhysical.scala 92:12]
    io.port.dq[1].oe <= txen_1 @[SPIPhysical.scala 93:13]
    io.port.dq[2].o <= _T_155 @[SPIPhysical.scala 92:12]
    io.port.dq[2].oe <= txen_2 @[SPIPhysical.scala 93:13]
    io.port.dq[3].o <= _T_156 @[SPIPhysical.scala 92:12]
    io.port.dq[3].oe <= txen_2 @[SPIPhysical.scala 93:13]
    io.op.ready <= UInt<1>("h00") @[SPIPhysical.scala 95:15]
    reg done : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[SPIPhysical.scala 97:17]
    node _T_160 = or(done, last_d) @[SPIPhysical.scala 98:16]
    done <= _T_160 @[SPIPhysical.scala 98:8]
    io.rx.valid <= done @[SPIPhysical.scala 100:15]
    node _T_162 = eq(ctrl.fmt.endian, UInt<1>("h00")) @[SPIPhysical.scala 59:20]
    node _T_163 = bits(buffer, 0, 0) @[SPIPhysical.scala 59:54]
    node _T_164 = bits(buffer, 1, 1) @[SPIPhysical.scala 59:54]
    node _T_165 = bits(buffer, 2, 2) @[SPIPhysical.scala 59:54]
    node _T_166 = bits(buffer, 3, 3) @[SPIPhysical.scala 59:54]
    node _T_167 = bits(buffer, 4, 4) @[SPIPhysical.scala 59:54]
    node _T_168 = bits(buffer, 5, 5) @[SPIPhysical.scala 59:54]
    node _T_169 = bits(buffer, 6, 6) @[SPIPhysical.scala 59:54]
    node _T_170 = bits(buffer, 7, 7) @[SPIPhysical.scala 59:54]
    node _T_171 = cat(_T_169, _T_170) @[Cat.scala 30:58]
    node _T_172 = cat(_T_167, _T_168) @[Cat.scala 30:58]
    node _T_173 = cat(_T_172, _T_171) @[Cat.scala 30:58]
    node _T_174 = cat(_T_165, _T_166) @[Cat.scala 30:58]
    node _T_175 = cat(_T_163, _T_164) @[Cat.scala 30:58]
    node _T_176 = cat(_T_175, _T_174) @[Cat.scala 30:58]
    node _T_177 = cat(_T_176, _T_173) @[Cat.scala 30:58]
    node _T_178 = mux(_T_162, buffer, _T_177) @[SPIPhysical.scala 59:8]
    io.rx.bits <= _T_178 @[SPIPhysical.scala 101:14]
    reg xfr : UInt<1>, clock @[SPIPhysical.scala 103:16]
    when stop : @[SPIPhysical.scala 105:15]
      sched <= UInt<1>("h01") @[SPIPhysical.scala 106:11]
      accept <= UInt<1>("h01") @[SPIPhysical.scala 107:12]
      skip @[SPIPhysical.scala 105:15]
    else : @[SPIPhysical.scala 108:16]
      when beat : @[SPIPhysical.scala 109:17]
        node _T_183 = eq(cref, UInt<1>("h00")) @[SPIPhysical.scala 110:15]
        cref <= _T_183 @[SPIPhysical.scala 110:12]
        when xfr : @[SPIPhysical.scala 111:18]
          node _T_184 = xor(cref, cinv) @[SPIPhysical.scala 112:21]
          sck <= _T_184 @[SPIPhysical.scala 112:13]
          sample <= cref @[SPIPhysical.scala 113:16]
          node _T_186 = eq(cref, UInt<1>("h00")) @[SPIPhysical.scala 114:18]
          setup <= _T_186 @[SPIPhysical.scala 114:15]
          skip @[SPIPhysical.scala 111:18]
        node _T_188 = eq(cref, UInt<1>("h00")) @[SPIPhysical.scala 116:13]
        when _T_188 : @[SPIPhysical.scala 116:20]
          scnt <= decr @[SPIPhysical.scala 117:14]
          skip @[SPIPhysical.scala 116:20]
        skip @[SPIPhysical.scala 109:17]
      skip @[SPIPhysical.scala 108:16]
    node _T_190 = eq(scnt, UInt<1>("h01")) @[SPIPhysical.scala 122:14]
    when _T_190 : @[SPIPhysical.scala 122:27]
      node _T_191 = and(beat, cref) @[SPIPhysical.scala 123:18]
      node _T_192 = and(_T_191, xfr) @[SPIPhysical.scala 123:26]
      last <= _T_192 @[SPIPhysical.scala 123:10]
      node _T_194 = eq(cref, UInt<1>("h00")) @[SPIPhysical.scala 124:19]
      node _T_195 = and(beat, _T_194) @[SPIPhysical.scala 124:16]
      when _T_195 : @[SPIPhysical.scala 124:26]
        accept <= UInt<1>("h01") @[SPIPhysical.scala 125:14]
        setup <= UInt<1>("h00") @[SPIPhysical.scala 126:13]
        sck <= ctrl.sck.pol @[SPIPhysical.scala 127:11]
        skip @[SPIPhysical.scala 124:26]
      skip @[SPIPhysical.scala 122:27]
    node _T_198 = and(accept, done) @[SPIPhysical.scala 131:16]
    when _T_198 : @[SPIPhysical.scala 131:25]
      io.op.ready <= UInt<1>("h01") @[SPIPhysical.scala 132:17]
      when io.op.valid : @[SPIPhysical.scala 133:24]
        scnt <= io.op.bits.cnt @[SPIPhysical.scala 134:12]
        when io.op.bits.stb : @[SPIPhysical.scala 135:21]
          ctrl.fmt <- io.ctrl.fmt @[SPIPhysical.scala 136:18]
          skip @[SPIPhysical.scala 135:21]
        xfr <= UInt<1>("h00") @[SPIPhysical.scala 139:11]
        node _T_202 = eq(UInt<1>("h00"), io.op.bits.fn) @[Conditional.scala 37:30]
        when _T_202 : @[Conditional.scala 40:58]
          buffer <= buffer_in @[SPIPhysical.scala 142:18]
          sck <= cinv @[SPIPhysical.scala 143:15]
          setup <= UInt<1>("h01") @[SPIPhysical.scala 144:17]
          node _T_205 = eq(io.op.bits.cnt, UInt<1>("h00")) @[SPIPhysical.scala 145:27]
          done <= _T_205 @[SPIPhysical.scala 145:16]
          xfr <= UInt<1>("h01") @[SPIPhysical.scala 146:15]
          skip @[Conditional.scala 40:58]
        else : @[Conditional.scala 39:67]
          node _T_208 = eq(UInt<1>("h01"), io.op.bits.fn) @[Conditional.scala 37:30]
          when _T_208 : @[Conditional.scala 39:67]
            when io.op.bits.stb : @[SPIPhysical.scala 149:25]
              sck <= io.ctrl.sck.pol @[SPIPhysical.scala 150:17]
              ctrl.sck <- io.ctrl.sck @[SPIPhysical.scala 151:22]
              skip @[SPIPhysical.scala 149:25]
            skip @[Conditional.scala 39:67]
        skip @[SPIPhysical.scala 133:24]
      skip @[SPIPhysical.scala 131:25]
    
